Getting started with QT5 = Benjamin Baka;Note=Erxin

# Introduction 
- install 
    + linux 
$ sudo apt-get install qt5-default

install mysql 
$ sudo apt-get install libqt5sql5-mysql

    + mac 
    
$ xcode-select --install 

//install homebrowser 
$ /user/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

$ curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/fdfc724dd532345f5c6cdf47dc43e99654e6a5fd/Formula/qt5.rb

$ brew install ./qt5.rb

$ brew install ./qt5 --with-mysql

    + window 
heading over to http://download.qt.io

Select official_releases/, then online_installers/, and opt to download qt-unified-windows-x86-online.exe.

- what is qt? 

QtCore, contains core and important classes for the Qt framework 

QtWidget and QtGui, contains classes for calling widgets 

QtWebkit, use web pages and apps within a Qt application 

QtNetwork, provide clases to connect to and communicate with network resources 

QtXML, parsing xml document 

QtSQL, connect to database 

- hello world in Qt 
#include <QApplication>
#include <QLabel>
int main(int argc, char *argv[])
{
   QApplication app(argc, argv);
   QLabel label("Hello world !");
   label.show();
   return app.exec();
}

% qmake -project
% qmake
$ make 

open the hello_world.pro file and insert following lines 
INCLUDEPATH += .
QT += widgets

This will add the QtWidget module, along with the QtCore modules
% make

% ./hello_world 

//mac os 
./hello_world.app/Contents/MacOS/hello_world

- modify qt style 
#include <QApplication>
#include <QLabel>
int main(int argc, char *argv[])
{
   QApplication app(argc, argv);
   QLabel label("Hello world !");
   label.setStyleSheet("QLabel:hover { color: rgb(60, 179, 113)}");
   label.show();
   return app.exec();
}

% make
% ./hello_world


# Creating widgets and layouts 






















