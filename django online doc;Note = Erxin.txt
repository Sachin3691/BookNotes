django online doc;Note = Erxin

# Download 
- install python 3 
- install latest offical versin 
$ pip install django

- verify 
import django 

print(django.get_version())

- get latest development version 
$ git clone https://github.com/django/django.git 

- supported versions 
A.B 
A.B+1 

path release A.B.

long term support release(LTS) 


# Overview 
- models for data 
//models.py 
    + create data models 
from django.db import models

class Reporter(models.Model):
    full_name = models.CharField(max_length=70)

    def __str__(self):
        return self.full_name

class Article(models.Model):
    pub_date = models.DateField()
    headline = models.CharField(max_length=200)
    content = models.TextField()
    reporter = models.ForeignKey(Reporter, on_delete=models.CASCADE)

    def __str__(self):
        return self.headline

    + create database tables 
$ python manage.py makemigrations
$ python manage.py migrate

- free API to access the data models 
>>> from news.models import Article, Reporter
>>> Reporter.objects.all()

>>> r = Reporter(full_name='John Smith')

>>> r.save()

>>> r.id
1

>>> Reporter.objects.all()
<QuerySet [<Reporter: John Smith>]>

>>> r.full_name
'John Smith'

>>> Reporter.objects.get(id=1)
<Reporter: John Smith>
- administrator interface, automatically create a professional, production ready administrative interface
//admin.py
from django.contrib import admin

from . import models

admin.site.register(models.Article)

- design urls 
//urls.py 
from django.urls import path

from . import views

urlpatterns = [
    path('articles/<int:year>/', views.year_archive),
    path('articles/<int:year>/<int:month>/', views.month_archive),
    path('articles/<int:year>/<int:month>/<int:pk>/', views.article_detail),
]

none of them matches, Django calls a special-case 404 view

- write views 
//views.js 
from django.shortcuts import render

from .models import Article

def year_archive(request, year):
    a_list = Article.objects.filter(pub_date__year=year)
    context = {'year': year, 'article_list': a_list}
    return render(request, 'news/year_archive.html', context)
    
- design your template 

    + reference template system, https://docs.djangoproject.com/en/2.2/topics/templates/
    
    the year_archive.html is a template 

    + template content 
//year_archive.html 
{% block title %}Articles for {{ year }}{% endblock %}

{% block content %}
<h1>Articles for {{ year }}</h1>

{% for article in article_list %}
    <p>{{ article.headline }}</p>
    <p>By {{ article.reporter.full_name }}</p>
    <p>Published {{ article.pub_date|date:"F j, Y" }}</p>
{% endfor %}
{% endblock %}

    + Django settings, you specify a list of directories to check for templates with DIRS. 

    + using filters in template | 
https://docs.djangoproject.com/en/2.2/howto/custom-template-tags/#howto-writing-custom-template-filters

- base template include use of static files 
https://docs.djangoproject.com/en/2.2/howto/static-files/

//base.html 
{% load static %}
<html>
<head>
    <title>{% block title %}{% endblock %}</title>
</head>
<body>
    <img src="{% static "images/sitelogo.png" %}" alt="Logo">
    {% block content %}{% endblock %}
</body>
</html>

- other 
syndication framework to create RSS and Atom, https://docs.djangoproject.com/en/2.2/ref/contrib/syndication/

cache framework, 













