Jenkins 2.x Continue Integration Cookbook Third Edition=Alan Mark Berg;Note=Erxin

# Install Jenkins on Centos
- install java 
$ sudo yum install java

- add jenkins repository 
$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo  

stable version 
$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo  

import key 
$ sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key 

install 
$ sudo yum install jenkins  

start jenkins service 
$ sudo service jenkins start/stop/restart  

# Jenkins CLI
- download jenkins.cli
Download the Jenkins-cli.jar file from the link available on the Jenkins dashboard.

execute the 
$ java -jar jenkins-cli.jar -s http://localhost:8080/ 
help command to see the help of CLI commands


java -jar jenkins-cli.jar -s http://localhost:8080/ version
java -jar jenkins-cli.jar -s http://localhost:8080/ who-am-i
java -jar jenkins-cli.jar -s http://localhost:8080/ list-jobs  


# Modify jenkins configuration from command line 
-  The job-specific configuration is then stored in config.xml within the subdirectory. It's a similar situation for the users directory

- You can then restart the Jenkins servers with the command-line interface (CLI)

- modify execute number 
<numExecutors>3</numExecutors> 


# Modify jenkins configuration file 
- look for the config.xml file. Edit the line with numExecutors, changing the number 2 to 3

- jenkins uses XStream (http://xstream.codehaus.org/) to persist its configuration into a readable XML format. 

The GUI itself is created from XML via the Jelly framework (http://commons.apache.org/jelly/).


# Moniforing jenkins with JavaMelody
- JavaMelody (http://code.google.com/p/javamelody/) is an open source project that provides comprehensive monitoring. The Jenkins plugin monitors both the master instance of Jenkins and also its nodes. 

It provides charts for CPU, memory, system load average, HTTP response time, and so on. 


# Configure mail notification 
- Manage Jenkins and go to the E-mail Notification section.

- Post-build Actions and select E-mail Notification. Provide a recipients list with one of the checkbox selected:


# Monitory jenkins with build monitor view 
- Monitoring a Jenkins Job using a Build Monitor View plugin 
- install plugin 
- Jenkins Dashboard - Create New View
-  select Build Monitor View. Click OK
- in single window we can get the status of multiple jobs.


# Integrating Jenkins with SonarQube
- Sonar, is a rapidly evolving application for reporting quality metrics and finding code hotspots
- install jenkins sonaque relative plugins 
- create free style project 
- Provide the Repository URL in the Source Code Management section:


# Integrating Jenkins with Artifactory
- Artifactory is a repository manager that allows you to store and retrieve artifacts, such as dependencies or package files. It is like a local repository in the organization.
-  https://bintray.com/jfrog/artifactory/jfrog-artifactory-oss-zip/4.15.0 is used for Artifactory.


# Orchestration
- upstream and downstream jobs 
    + An upstream job is a configured project that triggers a project as part of its execution.
    + A downstream job is a configured project that is triggered as part of a execution of pipeline.
- configure upstream and downstream jobs 
    + post build actions and select other projects from the avaliable options 
    + configure PetClinic-Deploy as a downstream job in Post-build Actions
    
    Build other projects and specify the project name 
    
    + from the PetClinic-Deploy job, you will configure PetClinic-FuncTest as a downstream job in Post-build Actions
    
    + configured all upstream and downstream jobs. You know the sequence so you can execute the first build and the rest of the builds will follow until any job fails in the sequence. You can configure to move ahead with unstable builds as well.
    
- creating a pipepline job provide visualization of the flow of the execution for upstream and downstream jobs 
    + select build pipeline view from the jenkins menu 
    
    + want to execute PetClinic-Code as a first job and you want to see the visualization from that job
    
    + select Trigger even if the build is unstable option in Post-build Actions, as seen in the following screenshot
- configure a pipline for end to end automation 
- getting start with the blue ocean dashboard


# Testing with FitNesse 
- FitNesse (http://fitnesse.org) is a fully integrated standalone wiki and acceptance-testing framework. 
- consider creating mock-ups of your web applications in FitNesse next to the tests
- FitNesse JAR from http://fitnesse.org/FitNesseDownload. Install the FitNesse plugins for Jenkins from https://wiki.jenkins-ci.org/display/JENKINS/FitNesse+Plugin.
- run help 
$ java -jar fitnesse-standalone.jar -help
- check log 
java -jar fitnesse-standalone.jar -p 39996 -l logs -a tester:te


# Jenkins UI Customization 
- Notifications: Developers need to know quickly when something is broken
- age decoration: A page decorator is a plugin that adds content to each page. 
- Overlaying Jenkins: Using the Maven WAR plugin, you can overlay your own content on top of Jenkins.
- Optimize the views: Front page views are lists of jobs that are displayed in a tab.
- Drive by notification: Extreme views that radiate information visually look great on large monitors. 
- Keeping track of your audience: If you are openly communicating, then you should track usage patterns so that you can improve services.
- The themes plugin is a page decorator; it decorates each page with extra HTML tags. The plugin allows you to upload a style sheet and JavaScript file. 
- themes plugin (https://wiki.jenkins-ci.org/display/JENKINS/Simple+Theme+Plugin).
- Included JavaScript library frameworks                                                        Jenkins uses the YUI library: http://yuilibrary.com/. Decorated in each HTML page

- Consider your security policy and at least add the audit trail plugin (https://wiki.jenkins-ci.org/display/JENKINS/Audit+Trail+Plugin) to keep track of the actions.

- Tomcat to log specific information on startup of the application (http://tomcat.apache.org/tomcat-7.0-doc/config/context.html). The setting was recommended in the Jenkins Wiki (https://wiki.jenkins-ci.org/display/JENKINS/Installation+via+Maven+WAR+Overlay). 