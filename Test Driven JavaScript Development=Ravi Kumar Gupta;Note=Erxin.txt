Test Driven JavaScript Development=Ravi Kumar Gupta;Note=Erxin

# Prerequest 
- frameworks 
YUI Test, http://yuilibrary.com/yui/docs/test/
QUnit, http://code.jquery.com/qunit/, http://qunitjs.com/
	$npm install --save-dev qunitjs 
node.js http://nodejs.org 
dalek, nodejs package 
karma, nodejs package 
jasmine, https://github.com/jasmine/jasmine/release, adapter for jsTestDriver
jsTestDriver, stop maintain
modernizr, https://modernizr.com/, tell the browser features 
lcov, https://github.com/linux-test-project/lcov , code coverage tools 
mocha, nodejs package, javascript test framework 
chaijs, is a BDD/TDD assertion library for nodjs, http://chaijs.com/

# Overview of TDD
- test-driven development(TDD) makes a big difference by writing tests before the actual code 
- test driven life cycle 
requirement -> write test -> check -> write production code -> rest all test 

- agile and TDD, test is always written first and its corresponding minimal production code 

- code coverage 100% is not means bug free 
- also required QA's participation 
- TDD is supply better opportunity for quality codes 


# Testing Concepts 
- show case example for YUI
YUI().use('description', 'test', function(Y){
	var testCase = new Y.Test.Case({
		setUp:function(){
		},
		tearDown:function(){
			delete this.expectedResult;
		},
		testData:function(){
			Y.assert.areEqual(this.expectedResult, variable);
		}
	});
	
	new Y.test.Console({
		newestOnTop: false, 
		width:"400px",
		height:"300px"
	}).render('#testLogs");

	Y.Test.Runner.add(testCase);
	Y.Test.Runner.Run();
});


# Testing Tools 
- jsUnit 
deperacated 

- QUnit, is used by JQuery, jQuery UI and jQuery mobile projects. can work with Karma for test server side code 
- Karma with Jasmine 
jasmine for karma 
https://github.com/karma-runner/karma-jasmine

mocha 
https://github.com/karma-runner/karma-mocha

Karma is a javascript command line tool that can be used to open a browser which loads application's source code and executes tests 

	+ install 
	$ npm install karma --save-dev 
	
	$ npm install karma-jasmine karma-chrome-launcher --save-dev 
	
	install cli plugin to make karma avaliable in the commandline 
	$ npm install -g karma-cli 
	
	+ run test 
	$ karma start karma.conf.js 

- DalekJS, for test javascript cross browsers 
- lstanbul, a JS code coverage tool writtin in JS 
https://github.com/gotwarlost/istanbul


# Jasmine
- behavior-driven development framework popularly used for unit testing of javascript code 
- TDD keywords 
suite()
test()
setup()
tearDown()
suiteSetup()
suiteTearDown()
assert() 
...

- BDD behavior-driven
describe()
context()
it()
beforeEach()
afterEach()
beforeAll()
afterAll()
expect() 
...

- mapping between BDD and TDD 
description		 tdd uses			bdd uses 
test set			suite()			 describe()
unit test		   test()			  it()
action before test  setup()			 beforeEach()
action after test   tearDown()		  afterEach()
action before set   suiteSetup()		beforeAll()
action after set	suiteTearDown()	 afterAll()
assertions		  assert()			expect()			   

- jasmine keeps js code and test in different folder 
src for logic code 
spec for all the tests 
- expect test syntax 
expect(false).not.toBe(true);

- matchers 
toBe()
toEqual()
toBeDefined()
..

any()

- example 
describe("...", function(){
	var count = 0;
	beforeEach(function(){
	});
	
	afterEach(function(){
	
	});

	beforeAll(function(){

	});

	afterAll(function(){

	});

	it("...", function(){
		expect(variable).toEqual(100);
	});
});

- has a plugin writtin for mockng asychronous operations 
https://github.com/pivotal/jasmine-ajax

- polyfills is a piece of code which provides the missing features to a browser 


# Choosing test runner 
- nodeunit, is simple to use 
https://github.com/caolan/nodeunit

- mocha is similar to nodeunit. simple and have rich features such as browser support asychronous testing 

- Vows is a behavior-driven development frameworks. stopped 
- run npm test 
$ npm test 

- swig is a javascript template engine for create dynamic html 
http://paularmstrong.github.io/swig/














