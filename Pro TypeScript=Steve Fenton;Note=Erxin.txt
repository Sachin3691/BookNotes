Pro TypeScript=Steve Fenton;Note=Erxin

# Introduction
- typescript is released under open-source apache 2.0. it is a superset of
  javascript 
- typescript language feature can be divide into three categories 
	+ ECMAScript 5 
	+ ECMAScript 6 
	+ additional features 
- typescript components 
	+ language 
	+ compiler 
	+ language service 
- compile or transpile 
	+ compilation describes taking source code written in one language and
converting it into another language 
	+ transplantation is a specific kind of compilation and describes the
process of taking source code written in one language and transforming it into
another language with a similar level of abstraction 

- problems which typescript solve, javascript have c syntax but with
  differentiation
	+ prototypical inheritance 
	+ equality and type juggling, especially when compose number and
string 
	+ management of modules 
	+ scope 
	+ lack of types 

- which problems are not solved 
	+ typescript is not a crutch any more than JSLint is a crutch. it
doesn't hide javascript 

- prerequisties, ide 
- typescript alternatives 
	+ coffeescript 
	+ dartlang, it is developed by google. it has much more in common with
typescript. 
	

# typescript language features 
- javascript is valid in typescript 
- only exception is with statement and vender specific extensions such as
  mozilla's const keyword 
	+ with statement is disallowed in strict mode 
	+ the general opinion that with statement is dangerous 
	+ the practical issues of determining the identifiers that are in
scope at compile time 
	
- variables 
	+ first character must be
	uppercase 
	lowercase 
	undercore 
	dollar sign 
	unicode character

	+ check more from http://motherreff.in/js-variables 

	+ create a global varible by define variable without var keyword, in
typescript it will be an error 
- types, define variable type with type annotation 
var <identifier>[:][type-annotation] [= value];

	+ examples
var name: string = 'Steve';
var heightInCentimeters: number = 182.88;
var isActive: boolean = true;
// array type annotation
var names: string[] = ['James', 'Nick', 'Rebecca', 'Lily'];
// function annotation with parameter type annotation and return type annotation
var sayHello: (name: string) => string;
// implementation of sayHello function
sayHello = function (name: string) {
return 'Hello ' + name;
};
// object type annotation
var person: { name: string; heightInCentimeters: number; };
// Implementation of a person object
person = {
name: 'Mark',
heightInCentimeters: 183
};

- use interface to simplify the annotation typing
interface Person{
	name:String
	heightInCentimeters: number;
}



 
