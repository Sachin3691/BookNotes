Git in Practice=Scott Chacon;Note=Erxin

# Local Git
- setting a name and email address 
$ git config --global user.name "Mike McQuaid"
$ git config --global user.email mike@mikemcquaid.com
$ git config --global user.email

- creating a repo 
$ git init 

- .git subdirectory, some of the system directory start with "." will be hidden by default 
    + file struture of .git folder 
GitInPracticeRedux/.git/config
GitInPracticeRedux/.git/description
GitInPracticeRedux/.git/HEAD
GitInPracticeRedux/.git/hooks/applypatch-msg.sample
GitInPracticeRedux/.git/hooks/commit-msg.sample
GitInPracticeRedux/.git/hooks/post-update.sample
GitInPracticeRedux/.git/hooks/pre-applypatch.sample
GitInPracticeRedux/.git/hooks/pre-commit.sample
GitInPracticeRedux/.git/hooks/pre-push.sample
GitInPracticeRedux/.git/hooks/pre-rebase.sample
GitInPracticeRedux/.git/hooks/prepare-commit-msg.sample
GitInPracticeRedux/.git/hooks/update.sample
GitInPracticeRedux/.git/info/exclude
GitInPracticeRedux/.git/objects/info
GitInPracticeRedux/.git/objects/pack
GitInPracticeRedux/.git/refs/heads
GitInPracticeRedux/.git/refs/tags

HEAD, contain header pointer 
hoos/* contain the event hooks 
pack files are used for object storage and reference 

- creating a new commit, git add, git commit 

    + git add, commit, checkout workflow 
local repo 
A       |
|       |
commit  |
|       checkout
add     |
|       V
local working directory 

in git commit will supply a SHA-1 hashes such as 86bb0d659a39c98808439fadb8dbd594bec0004d for help referencing the commit 
the hash is 40 character length. The shorten version is also unique in the repo 

$ git commit -m "message"
[master (root-commit) 6576b68] Initial commit of book.
1 file changed, 2 insertions(+)
create mode 100644 GitInPractice.asciidoc

the 100644 is the unix file mode 

- object store, git is a version control system built on top of an object store 

viewing history by 
$ git log 
$ gitk 
$ gitx 

- viewing the difference between commits
$ git diff branch-name~# branch-name[~#]

--- xxxx   //this is old virtual path 
+++ xxxx   //this is new virtual path 

$ git diff --stat master~1 master 

word diff format 
$ git diff --word-diff master~1 master 
@@ -1,2 +1,4 @@
= Git In Practice
{+== Chapter 1+}
{+Git In Practice makes Git In Perfect!+}
// TODO: [-write book-]{+Is this funny?+}

- refs, addressing individual commits, such as master~1 
    + the first ref is a branch such as master 
~1 means the same as saying one commit before that ref 
^ is equal to ~1 ^^ equal to ~2 

    + the second is the string HEAD, HEAD always point to the top of whatever you currently have checked out, almost always the top commit of the current branch 
    
you can use the tool git rev-parse if you want to see what SHA-1 a given ref expands to 
$ git rev-parse master 

$ git rev-parse 6b437c7 
6b437.....


- squashing multiple commits into a single commit 


# Remote Git 
- git add/commit/push/pull/checkout cycle 
remote repo url 
A           |
|           fetch/pull 
git push    |
|           /
local repo 
|           \
commit      |
|           |
changes     |
|           checkout 
add         |
|           V
working directory 

- add new remote repo to current by 
$ git remote add origin remote-url 

verify remote information by 
$ git remote --verbose 

git remote can also be called with the rename and remove (or rm) subcommands to alter remotes accordingly. git remote show queries and shows verbose information about the given remote. git remote prune deletes any remote references to branches that have been deleted from the remote repository by other users

- authoritative version storage 

push changes to remote 
$ git push --set-upstream origin master 

































































































