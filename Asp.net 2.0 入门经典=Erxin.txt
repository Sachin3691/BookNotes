Asp.net 2.0 入门经典=Erxin

:master page

:web.config
整个站点的配置文件

:Global.asax, 包含整个站点可以使用的代码

:服务器端控件工具箱
>控件包括
standard, data, validation, navigation, lgoin, webParts, html
>空间命名规则
<asp:controlName attributes="value">
	<DynamicRelativeStyleSettings/>
</asp:controlName>

:成员关系与身份验证
>身份验证
>授权
>登陆站点
>对应控件
	- login, 身份验证
	- loginView, 根据用户是否登陆改变页面外观
	- loginStatus, 向用户显示反馈信息
>工具, asp.net web application configuration tool
>身份验证
	- form验证
	- window身份验证, 适合于局域网项目
	- passport身份验证, 传递到某个passport管理服务器
>认证概念
identity, authentication, authorization, personalization, membership

:主题与样式
>asp.net使用主题(theme)和(skin)快速开发样式
>asp.net具有工具style builder
>CSS
tag:status
{...}
>asp.net 的控件具有一定的跨浏览器特点
>@page指令, 指定中可以指定masterPageFile和ThemedMaster的文件
	<%@page language="c#" codefile="*.cs" inherits="baseClass"%>
>global.asax全局事件
	- application start
	- application end
	- session start
	- session end
	- application error
	- profile_OnMigrateAnonymous, 当匿名用户登陆的时候触发
>数据源控件
	- sqlDataSource, System.Data.SqlClient
	- accessDataSource
	- xmlDataSource
	- siteMapDataSource
	- objectDataSource
>用户自定义控件, 扩展名为.ascx, 在生成的代码中具有@register指令
	- 定义<%@register tagPrefix="some_prefix_name" tagName="current_control_name"%>
	- 使用<prefixName:controlName ...></prefixName:controlName>
>repeat控件

:角色和配置文件

:web服务
>扩展名, 要访问一个web服务就要定位一个.asmx文件
>asp.net web服务访问方式
	- http-get
	- http-post
	- soap, simple object access protocal
	soap envelope, 包含header 和body, 是格式化好的xml或无格式的普通文本
>为了表示方法可以通过web调用, 需要添加一个webmethod特性
[webmethod[(CacheDuration=60)]]
public return_type functionName(parameters){}
>WSDL, web services description language
>web服务的发现
	- DISCO, discovery一般用于建立本机上可用的web服务
	- UDDI, 类似于web服务的索引库, 只有4个使用web服务的大型公司保留一个UDDI, 两个主要的UDDI为
		* http://uddi.microsoft.com
		* www-3.ibm.com/services/uddi
>使用web服务, 在solution中添加web services reference
>电子商务ID, 商人号码或IMA
	- 美国
	verisign/cyberCash: www.icverify.com
	first data/card service: www.cardservice.com
	- 英国
	worldPay: www.worldpay.co.uk
	dataCash: www.datacash.com
	- 世界范围内
	payPal, www.paypal.com
>性能测试
	- 压力测试, web application stress tool
	- 性能监控, performance monitor
	
:错误处理
>防御性编码
>避免假设
>查询参数
>验证
>异常对象, exception的属性
	- data, 字典, 提供有关异常的额外信息
	- helplink, 帮助文件的链接
	- innerexception, 造成问题的底层异常
	- message, 描述异常的文本
	- source, 造成问题应用程序的名称
	- stackTrace,导致问题方法调用的跟踪
	- targetSite, 抛出异常的方法
>sqlException
	- class, 严重性
	- errors, sqlError集合
	- lineNumber,
	- number, 错误代码
	- procedure, 
	- server, 
	- source, 数据提供程序名
	- state, 来自SqlServer的错误代码
>全局异常处理, 在global.asax文件中

:部署构建和结束
>检验表, 在典型的部署中起到重要作用
html, css
aspx
aspx.cs
ascx
.mdb, .mdf
images
medias
.xml, .xsd
activeX, etc
athentication files
	
















