Meet emacs=Phil Hagelberg;Note=Erxin


# overview
- emac is everything
- install from mac
http://www.apple.com/downloads/macosx/unix_open_source/carbonemacspackage.html

window
http://ftp.gnu.org/gnu/emacs/windows/

- version 23
- emacs-starter-kit/ is a set of list file 
http://github.com/technomancy/emacs-starter-kit/tree/master
copy it to your home directory

link emacs start kit to .emacs.d directory

basics dotfiles
$ ln -s emacs-starter-kit .emacs.d

- starter kit files
.emacs.d/
    topfuncky.el
    my-mac.el
    init.el
    starter-kit-binding.el
    starter-kit-misc.el
    starter-kit-ruby.el
    vendor/
        extmate.el

- emacs call window as frame, you can make multiple frame, inside a frame is a window
    + window can contain shell or code
    + mode line is the bar between each window
    + mine buffer 

- basics keyboard, meta keys means alt or command 
c- means control
- short cut
c-n, next line
c-x, c-f, find file
c-x b, visit buffer, release ctrl and hit b
M-x, execute function
c-x cf, find file
- c-x f, visit recent file
- c-x, c-c, exit emac

- move file
              M-<, previous
              M-V, screen
              C-p line
C-a, M-b, C-b C-I   C-f M-f C-e  forward
              c-n, line
              c-v, screen
              M->  next

c-l
c-s, forward incremental search, c-s to jump next, c-r to jump back, c-g to back and stop search
c-h, c-t

- basic buffers
c-x b, visit buffer switcher
swith to a unexist buffer will create

c-x e, to switch to the previous buffer
c-x f, use file frame

c-x c-b, mark with d, x to delete buffer

c-x c-f, find file
c-x f

- basic windows
sub define the multiple windows

c-x 2, split vertically, 
c-x 0, to close a window
c-x 1, to only window
c-x o
shift-> to focus in direction
c-x, m-f

- basics help
    + self documenting editor
    c-h t

    c-h k for key sequence
    
    c-h f find for function
    
    c-h v help for variable
    
    c-h a search help, list all the general help 
    
    - hyperlink
    
    - info directory, plugin will also have info help
    c-h i, info help reader
    
    press q to quick a buffer
    c-x k to close the buffer


# region
- editing region
    + start with the point
    c-spc to set the mark
    the pointer between the mark will be highligh c-g to dismiss the highlight

    c-w kill region, c-x will, m-y will repeat the previous kill region
    c-k, kill to the end of line
    c-M-h, kill previous word
    M-w, copy region
    
- editing region
c-spc 
cu c-spc jmp last mark

- editing undo
c-_ undo

rectangle
M-x, cua mode, start witl ctrl enter, subscrib every line from start of a text
M-n, will insert auto incremental number 
M-x, to stop cua mode

- m-; comment region
- completion
M-/, code completion

c-y send buffer to end of list
tags
c-x c-i, function list

exuberant tags

M-x eshell, start emac shell

go to the defination

# Major
- basic editing
- Major and miner mode
- auto-mode
- sheban line
M-x ruby mode

- miner mode 
    + any miner mode can be activate in any time
    + m-x flyspell, do spell checking, will check the whole buffer
    + m-x flymake model, fire bug of syntax error base on your compiler
    
    + follow mode
    + wide space mode, from the emac wiki, enable wide space mode, white-m, yellow for mix space and tab
    c-c n, clean up whitespace
    c-c r, to revert changes
    
    + whitespace.el
    http://www.emacswiki.org/
    
    + add vendor directory
    
    m-x eval-buffer, execute code 
    c-c v to evaluate buffer
    
- hook, invoke automatically mode, hook is a list variable 
(add-hook 'ruby-mode-hook' 'whitespace-mode')
c-x c-e eval last

- binding keys
(global-set-key (kbd "M-s") 'save-buffer')

global shadow can be over shadow by local binding
c-h m show  show key binding

- modes ruby
c-c c-s start ruby session
m-p, m-m to check history
c-c c-r send region to ruby

inf-ruby, to start ruby buffer
c-h r, search ruby doc

- ruby on rail, rinari  project to help create project
- v-c mode is automatic opened
- c-x v u discard changes
c-x v i will add file to repository 
- c-x g RET, magit status

s stage for commit
- c open up commit buffer
c-c c-c git commit

- P to push
F to pull
c-c c-a

L for show the log

extension for emacs
http://zagadka.vm.bytemark.co.uk/magit/magit.html
Magit manual

- shell command
M-x shell-command-on-region
shell command on region

m-x shell
- color mode
    + color themes
    + suggestions
    http://www.cs.cmu.edu/~maverick/GNUEmacsClorThemeTest/index-pl.html

m-x color-theme-charcoal

- text mate
http://code.google.com/p/yasnippet/download/list

;; Snippets
(add-to-list)

- textmate.el
http://github.com/defaunkt/textmate.el/tree/master

m-/, comment
http://paste.listp.org/display/42657

- modes elpa, emac list past archive
elpa library,
css-mode






















