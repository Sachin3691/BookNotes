NPM Playbook=Joe Eames;Note=Erxin

# course overview 
- introduction 
basic 
advance 
publish your own package 

- github course update 
https://github.com/joeeames/NPMPlaybookCourse

- typical npm usage 
package contain many modules 

each javascript file is called a module 

the package.json file list the content of the package files 

- npm, is called node package manager,
    + use git to clone the code 
    $ git clone some-package 
    
    + navigate to the package folder 
    $ cd some-package
    $ npm install 
    
    use install command to install the package from folder. the dependencies will be automatic download base on the package.json 
    
    + use start command to list all the start script of a package 
    + use test script list in the package.json to run the test for a package 
    
- check help 
$ npm -h 
$ npm command -h 
$ npm help command 
this will open the offical website about the command 

arbitrary search help 
$ npm help-search keyword 

https://docs.npmjs.com/misc/config 
there is a list of shorthands command for cli uses in npm 

- creating a package.json, types of projects for user or 3rd party package 
    + reason for package.json 
    track dependencies 
    create scripts
    
    + init script 
$ npm init 
create a ques

    + use default setting for init 
$ npm init -y 

- set defaults for package, all the init entries could be found at the npm config documents 
$ npm set init-author... value 

check a exiting setting 

$ npm get entry-name 

delete a seting 
$ npm config delete entry-name 

the setting files are list in the user root directory 
- installing package 
$ npm isntall package-name 

when you install a package, if you want that package write to your current package's package.json then use --save command or -S 
$ npm install package-name --save 

save into a dev dependency list by, --save-dev such as test library 
$ npm install package-name --save-dev 

- listing installed packages 
$ npm list 
list package and dependence packages 

$ npm list --depeth # 

$ npm list --global true 
will print all the global packages 

there are many other options too check the document 

- installing global package, the global command could be use directly in the command line 
$ npm install gulp -g 

- reomoving a package 
$ npm uninstall package-name [--save]
the save option is used to remove the depenencies from the package.json 

remote global 
$ npm uninstall package-name -g 

- install specific version of package 
major version. minior version .patch number 

minior version is used to add new features 

something may break functionality is upgrade the major version 

$ npm install package-name@#.#.# 

the second two parts of the version could be omit, then will install the latest major version 
also support compare operator for the version   

set only install the specific version without auto upgrade in the future 
$ npm install package-name@version --save --save-exact

- installing existing dependencies 
$ npm install 

will install all the dependencies base on the package.json 

use the prefix the control the dependence installing 
^, the latest 
;-, the exact version 

- updating packages 
$ npm update 

$ npm update --prod 

$ npm update --dev 

$ npm update [package-name]

$ npm update -g 
 

# Advanced NPM 
- 














