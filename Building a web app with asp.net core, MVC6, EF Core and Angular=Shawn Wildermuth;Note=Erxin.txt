Building a web app with asp.net core, MVC6, EF Core and Angular=Shawn Wildermuth;Note=Erxin

# Course overview 
- what is this course?
    + build a web app 
    + learn by doing 
   
- will teach you 
asp.net core and mvc 6 
html5 javascript css 
using bootstrap 
data with entity framework core 
client-side with angularjs 

- built with 
vs2017 
asp.net core 1.1 
entity framework core 1.1 
bootstrap 3.3 
angular 1.5 


- why asp.net core? 
    + reinvent asp.net? 
    motivation? 
    web stack is old...
    weighted down by old unsued code, web form is hard to work with modern tech 
    depending on machine level upgrades to .net was problematic 
    
    + asp.net core is a complete rethinking of the platform 
    
- what is asp.net core? 
    + complete rewrite platform 
    + cross-platform and open source 
    + single platform(MVC and webAPI are combined and webform is gone)
    + everything is a dependency, your app will be as lean as you like 
    + multiple deployment support 
    
- overview 
unix/linux/osx     |     window 
asp.net core(e.g. MVC6, EF core, etc)
Mono    |.net core(core CLR0)|  .net 4.6 CLR
        |  self hosted CLI    |   IIS native loader 
    
- frameworks are about cross-platform 
.net 4.6 
.net core 
Mono

- completely composed 
everything is a nuget package 
mvc staticfiles, logging, configuration, identity etc are all just packages 
everything is optional 

- exsting web development tooling 
npm for tooling 
bower for clientside lib 
grunt and gulp for build automation 
netget for .net 

- installing asp.net core 
dot.net, download dot net core 


# HTML and CSS Basics 
# JavaScript


# MVC6 
- server side model-view-controller framework 
- first controller 
/
    wwwroot/ 
    Controllers/
               Web/
               
    Views/
          Shared/
            _Layout.cshtml 
          App/
             Index.cshtml 
               
public class AppController: Controller 
{
}

    + manage nuget package 
    search asp.net mvc install the latest version 
    + add necessary asp.net namespaces 
    
 

- first view 
    + use rager script to add c# content 
//index.cshtml 
@{
    ViewBag.Title = "Home page";
}
<head>
    <title> The world - @ViewBag.Title</title>
</head>

    + change the Startup.cs in ASP.net core startup file 
    
public void ConfigureServices(IServiceCollection services)
{
    services.AddMvc(); //asp.net we required to use dependency injections 
}

public void Configure(IApplicationBuilder app)
{
    app.UseStaticFiles();
    
    app.UseMvc(config=>{
        config.MapRoute("Default", template:"{controller}/{action}/{id?}", defaults: new {controller = "App", action = "Index"} ); // search Index method at App contoller
    }); //enable Mvc to enable mvc listen 
}

- creating a layout view 



- adding more views 
- using tag helpers 
- implementing a contact page 
- using validation 
- supporting post 
- adding a service 
- compelting the form 
- summary 

# Bootstrap 


# Entity Framework Core 


# Creating the API


# Asp.net core identity 
# Angular 


# Asp.net core deployment 



