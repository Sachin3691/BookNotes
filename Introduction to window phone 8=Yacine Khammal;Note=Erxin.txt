Introduction to window phone 8=Yacine Khammal;Note=Erxin

# Contents 
- what is window phone 8 
- developer advantages 
- architecture & app models 
- hardware 
- security 
- window phone store 
- what about windows phone 7? 


# windows phone 8 
- 2d generation of mobile client operation system 
    + successor of window phone 7.x 
    + significant evolution & generation change 
    
- micorosfot's convergence strategy 
    + shift CE TO NT architecture 
    + share code with windows 8
    + optimized for multi-core chips 
    
- important consequences 
    + support new powerful hardware 
    + shared .net, and native api
    + support directx
    
- windows phone 
    + distinct user experience 
    most personal phone on the market 
    + tips & hubs paradigm shift 
    hubs = integrated, task-focused, user experience 
    
- micosfot design language 
    + typography-based set of rules 
    + inspired by public transportation signage 
    + focus on content vs. 'chrome' (UIgraphics)
    + also the basis for windows 8 UX 
    
- why develop for window phone 8 
    + .net web developer 
    run IE10
    native api apps for c++ 
    learn xaml & win RT
    
- windows devleoper 
    + WPF skillset ports over 
    + silverlight on the phone 
    + windows 8 xaml/c# apps(not js)
    
- c/c++ developers 
    + native code & direct 3d
    
- architecture 

windows phone |application modes 
system         xaml apps | direct 3d apps 
               ------------------------------------------
               frameworks 
               .net apis(c#, vb)| winrt apis (c#, vb, c++) | direct 3d, win32, com(c++)
               ------------------------------------------
               system application
               ------------------------------------------
               WP shell 
               ------------------------------------------
               platform services, execution manager, navigation manager, resource manager
               -------------------------------------
               connection management 
               others
====================================================================               
                    mobile core
shared core| core clr | IE trident | multimedia | directX
                    window core system
             ntfs     | networking | security   | nt kernel 

- windows phone api 
xaml apps|direct 3d apps 
-----------------------------------------------------
silverlight .net(vb, c#)|window runtime apis, provide com base api, native code projection(c++), .net code projection(vb, c#)| direct 3d, XAudio2, Media Foundation, STL, CRT, C++, Native code stack(c++)
---------------------------------------------------
file system, networking, graphics, media 
core operating system 

- hardware 
    + multi-core processor support 
    + qualcomm snapdragon s4 dual-core chip
    + support quad& octo-core CPUs
    
    + higher resolution
    wvga 400*800 for wp7
    wxvga 763*1280
    720p * 1280p 16:9 aspect 
    
    + other notable hardware 
    ram 512mb (1gb for 720p res)
    nfc support 
    micro sd storage crads
    
- application security 
    + mobile devices carry sensitive information
    contacts, email, photos, location, financial
    need to protected
    + security chambers 
    isolation boundaries for app process 
    minimal default access right 
    
    + interesting app access protected resources 
    protected OS resources defined as capabilities 
    declare capabilities for app at dev time 
    app capabilities disc closed in store page 
    user prove access right     
    caution, restrict app capability declarations
    
- store 
    + window phone store 
    main distribution& sale channel for apps 
    + discover & install apps 
    
    + close to 125k apps at year 2012
    800k for ios, 700k for android 
    
- window store, stringent certification requirement & process 
    + content, privacy, design, security, reliability & performance, legal 
    + baseline quality level
    
- financial model 
    + $99/year 
    + monetization
        * upfront charge 
        * advertising 
        * in-app
        
- wp8 dev fundamentals
    + user experience 
        * microsoft design language principles 
        * built-in controls 
        * styles, template, animation
        * page framework
        
    + app lifecycle 
        * single app in the foreground
        * deactivation, tombstoning, switching 
        * app state management
        * running code in background 
        
    + local data 
    local file&settings
    media library 
    storage card
    local database
    
    + phone extensibility
    live titles & notifications
    launchers & choosers 
    app-to-app communication
    search
    location & maps 
    photo hub
    lenses
    wallet 

- what about wp7.x?
    + windows phone 8 won't run on wp7 devices 
    requires new hardware 
    
    + phone update 7.8 released 
    applied to window phone 7.1 and 7.5 mango
    get the new wp8 start down 
    
    + apps built for 7.x run on window 8
    can't scrap the 120k apps in the store 
    performance boost:coreclr, new cpus, ngen in the cloud
    
    + sdk 7.8 specifically targets wp7.8
    runs on top of sdk8
        
        
# Getting Started
- Contents 
- Getting the tools
    + down load the tool from the sdk from
    windows phone sdk 8.0 
    
    
- sdk content 
    + visual studio 2012
    add-in for vs11 (pro, premium or ultimate)
    vs express for windows phone 
        
    + project templates
    + code editor
    + visual designer
    + testing
    + control toolbox 
    
- windows phone emulators 
    + window7.1 & WP8
    + multiple images(os version & resolution)
    + WP8 emulator runs on Hyper-V
    + blend 
    ux design environment 
    shared projects & code with vs2012
    advanced design tools(xaml)
    
- pre-request 
    + window 8(64-bit)
    + ram 4gb hdd 6.5 gb
    + wp8 emulator(hyper-v)
        * hardware assistend virtualization
        * second level address translation
        * hardware-based data execution prevention
        
    + hyper-v service enabled and running in win8
        * sdk install tries to enable it automatically 
        admin user account required
        
    + networking 
        * dhcp enabled 
        * auto-configured dns & gateway 
        
    + wp7 emulator 
        * support for directx 10. wddm 1.1 driver 
        
- registering and unlocking 
    + setting up as a wp developer 
    required to submit apps to the store 
    required for deploying apps to a device 
        
    + registering for an account 
        * get a microsoft account 
        * provide personal information 
        * purchase subscription
    + unlock your phone
        * execute the window phone registration tool
        * sign in developer account 
        * unlock the phone 
        
- creating a project 
    + new project 
    + window phone app, standard, use c# or visual basic 
    + data binding app 
    + panorama app 
    + pivot app 
    + windows phone xaml and direct 3d app 
    + windows phone direct3d with xaml app 
    + window direct 3d app( native only )
    + xaml and xna app, still could run xna 
    + windows phone html5 app 
    + window phone scheduled task agent, to create background agent 
    + xna 
    
- window phone ide 
    + select project os7.1 will both support window 8 and 7.1 but could not use the functions new added in window phone 8
    + os 8.0 will only support window phone 8
    + introduce the basic ide structure 
    + introduce toolbox and add a sample control 
    + change the control property and check the influence 
    
    + check the device pin, could change the emulator's view mode and optimize ui for different resolution

- project structure 
    + app.xaml, could used to create global variables and resources will be common available for all the pages 
        
    it also hook up the application lifecycle events 
    
    + asset directory contain some images 
    
    + tiles
    + resource, contain appResources.resx, is used to support localization
http://www.xamlspy.com, could analysing xaml in realtime 
    
- app manifest 
double click the app manifest file (WMAppManifest.xml)will create the editor

Application UI, Capabilities, Requirements, Packaging tabs to change the predefine values 

- Running the app 
    + emulator WVGA 512mb 
    + Emulator WVGA 1gb 
    + support run the app in real device 
    
    + double click a control will create event handler 

    + Hyper-V manager of window 8 will show the emulator 

- A simple app 
    + the top level of a page is 
    <phone:PhoneApplicaitonPage
        xmlns:d="...">
    </phone:PhoneApplicaitonPage>

    the layout is similar with silverlight and wpf 
    
- Blend for visual studio, 
    + visual design environment
    + run apps for blend 
    + interactive mode at design time 
    + shares project with vs 
    
click the toolbar arrow to open a big window, use state to change one state to different state 
the window phone project will supply Device tab on the left corner. to support test with different kinds of device 


# User experience
- Contents 
    + UI design principles 
    + Controls & layout 
    + Styles, resources & themes 
    + Templates 
    
- Microsoft design principles 
    + clean and uncluttered 
    consistent basing and margin
    
    The main page contain a visual grid to help align the elements 
    <Image Source="/Assets/Alignment..."/>
    
    + Content before chrome 
    + Motion
    + Digital vs. iconographic 
    
    + leverage the platform, take advantage from the platform 
    
- Controls and layout 
    + layout
    
    Stack panel 
    Grid 
    
- More controls 
    TextBox, RichTextBox, PasswordBox 
    
    Button
    Paragraph, Check box, button, TextBlock, List controls contain a function that LongListSelector function is for long list like phone book, Slider control 
    LongListSelector required data context be set 

    Progress 

    Media & web control     
        
- Panorama 
    + Panorama control 
        * hub like continuous horizontal scrolling exprience 
        * flip from one pane to the next 
        * built-in pan, swip & tap gesture 
        
    + use default template or default panorama template 
        * use default template 
        * remote the auto generate content 
        * add panorama control 
        <phone:Panorama Title="Surfing universe">
            <phone:Panorama.Background>
                <ImageBrush ImageSource="/AssemblyName;component/Assets/*.png"/>
            </phone:Panarama.Background>
            <phone:PanoramaItem Header = "MySession">
            </phone:PanoramaItem>
        </phone:Panarama>
    
- Pivot control 
    + also has panned content, built-in gesture & navigation 
    + Used to manage multiple views or pages 
    + Focuses on presenting related datasets 
    <phone:Pivot Title>
        <phone:PivotItem>
        </phone:PivoteItem>
    </phone:Pivot>
    
- Application bar 
    + Display application commands
    + Keep the content clean 
    + Integrate with phone UX 
    + Up to 4 icon buttons, optional menu items 
    + Collapsed or expanded
    
    + demo 
    <phone:PhoneApplicaitonPage.ApplicationBar Mode="Minimized">
        <shell:ApplicationBar IconUri="save.png" Text="save"/>
        <shell:ApplicationBar IconUri="refresh.png" Text="refresh"/>
        </shell:ApplicationBar>
        <shell:ApplicationBar.MenuItems>
            <shell:ApplicationBarMenuItem Text="Menu 1"/>
        </shell:ApplicationBar.MenuItems>
    </phone:PhoneApplicaitonPage.ApplicationBar>
    
    
    there are several default icons installed with window sdk which is located at 
    microsoft sdks\window phone\v8.0\icons\
    
- styles & templates 
    + sytles 
        * consistent look and feel across UI 
        * property-value pairs applied as a group 
        * create and apply styles targeting a given UI element type 

    + window phone have several system styles 
    Content Menu|Edit Style|Apply Style will apply a predefined style 
    
    + Create a empty style and with the property page we could edit the detail of the style 


- Resources & themes 
    + Resources 
    common objects used by pages and elements 
    styles, colors, front families, font sizes, margins,...
    stored in resource dictionaries 
        * keyed object dictionaries accessed in xaml and code 
        * element page and application resource dictionaries 
        * use {StaticResource} XAML extension
        
    + Themes 
        * phone-wide resource dictionaries 
        * theme = background + accent color 
        * set of styles brushes, colors applied across phone 
        * user can set the theme from phone settings 
        * apps can use theme resources 
        
    local theme 
    winsystem\window sdks\windows phone\v8.0\dark|light|accentColors











    
    
    
    
    
    
    
    
    
    











        
        
        
        
        
        
        
        
        
        
    
    
    
    
    