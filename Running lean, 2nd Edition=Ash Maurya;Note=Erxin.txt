Running lean, 2nd Edition=Ash Maurya;Note=Erxin

# Introduction
- And finally, even though customers hold all the answers, you simply cannot ask them what they want.If I had asked people what they wanted, they would have said faster horses.—Henry Ford

- what you will learn 
How to first find a problem worth solving, before defining a solution

How to find early customers

When is the ideal time to raise funding

How to test pricing

How to decide what goes into Release 1.0

How to build and measure what customers want

How to maximize for speed, learning, and focus

What is product/market fit

How to iterate to product/market fit

- are you ready to move next phase? 
roadmap 

document your plan A 

identify the riskiest parts of your plan 

systematically test your plan 

- three stages of a startup 
solve problem -> market -> scale 


# Meta- principles
- Customers don’t care about your solution. They care about their problems.—Dave McClure, 500 Startups
- Principles guide what you do. Tactics show you how.
Document your Plan A.

Identify the riskiest parts of your plan.

Systematically test your plan.

- one page business model diagram 
    + left 
        * problems 
        top 3 
        
        * solution 
        top 3 features 
        
        * key metrics 
        key activies you measure 
        
    + unique value proposition 
    single, clear compelling message that states why you are different and worth buying 
    
    + right 
        * unfair advantage 
        can't be easily copied or bought 
        
        * channels 
        path to customers 
        
        * customer segments 
        target customers 
        
    + left bottom 
        * cost structure 
        customer acquisition costs 
        distributing costs 
        hosting 
        people, etc. 
        
        * revenue streams 
        revenue model 
        lifetime value 
        revenue 
        gross margin 
        
- lean canvas address https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwiDxOiN69LeAhVhMX0KHSPjCIAQjRx6BAgBEAU&url=https%3A%2F%2Fleanstack.com%2Fleancanvas&psig=AOvVaw36rRVnuBSAhDcTEiNW_64k&ust=1542248921545999

- one page canvas format 
fast, concise, portable 

- Customers don’t care about your solution. They care about their problems.

- The bigger risk for most startups is building something nobody wants.

- three stages of a startup 
problem/solution fit > product/market fit > scale 

- Bootstrapping + Lean Startup = Low-Burn Startup

- experiment 
ideas -> build -> product -> measure -> data -> learn 


# Running lean illustrated 
- Lean Canvas is a business model validation tool. It’s a companion tool to this book that helps you document your business model, measure progress, and communicate learning with your internal and external stakeholders.


# Document your plan A 
- Brainstorm Possible Customers

- distinguish between customer and user 
A customer is someone who pays for your product. A user does not.

You can’t effectively build, design, and position a product for everyone.

Put everyone on the same canvas at first.

- build lean canvas order 
problem -> customer segments(target customers) -> unique value proposition -> solution -> channels -> revenue streams -> cost structure -> key metrics -> unfair advantage -> existing alternatives 

what, who, and why

- if you intend to charge for your product you should charge from day one 
price is part of the product 
price defines your customers 
getting paid is the first form of validation 


# Identify the riskiest parts of your plan 
- list of risks 
product risk 
customer risk 
market risk 


# Systematically test your plan 
- no surveys or focus groups, please 


# The problem interview 
- product risk 
what are you solving 
who is the competition 
who has the pain 

- testing the problem 
- judge their body language and tone to get a sense of how they’d rate the problem: “must-have,” “nice to have,” or “don’t need.”

if they claim a problem is a “must-have,” but they aren’t actively doing anything to solve it, there’s a disconnect.

- Insights, going into these interviews 

split the diagram into two categories, what we though and what we learned 


# The solution interview 
- problem interview 
who has the pain 
how will you solve these problem?
what is the pricing model? 

- testing your solution 
demo needs to be realizable 
look real 
quick to iterate 
minimize waste 
real-looking data 
test your pricing 

don't ask customers what they'll pay, tell them 

- solution interview, AIDA is a marketing acronym for Attention, Interest, Desire, and Action, and a useful framework for structuring Solution interviews. Here’s how:
attention, uncovered during earlier problem 
interest, demo show how 
desire signup friction 
action verbal, written or prepayment commitment 

- different from a pitch, formulate testable hypotheses 
- solution interview script deconstructed 
welcome 
|
V
collect demographics, 2min test customer segment, setup, identify early adopters
    + start from family and link to solution 
|
V
tell a story 
|
V 
set problem context 
|
V 
demo, test solution 
|
V 
test pricing 
|
V 
wrapping up, permission to follow up referrals 
|
V 
document results 

- your MVP should be like a great reduction sauce 
clear your slate 
start with your number-one problem 
eliminate nice to have and don't needs 
repeat step 3 
consider other customer feature requests 
charge from day one but collect on day 30 
focus on learning not optimization 

- get started deploying continuously 


# Get ready to measure 
- the need for actionable metrics, building a metrics-driven culture 

- the mvp interview. 


# Validate customer lifecycle 
- The fastest way to learn from customers is to talk to them.
show you care 
have a scaling problem 
tech support is a continual learning feadback loop 
support customer development 
support is marketing 
voter-based feedback tools 

- ready open your production to world
review your result frequently 
start with the most critical problems 
do the smallest thing possible 
make sure things improve 
audit your conversion dashboard 

your unique value proposition (UVP)


# Don't be a feature pusher 
- In a great market, a market with lots of real potential customers, the market pulls the product out of the startup.

- constrain your features pipeline 
backlog         in-progress         done 

80/20 rule 

- process feature requests, getting things done. checking the request against your product's immediate needs and priorities 

- achieve 60% activation rate 

backlog         in-progress                                done validated learning 
backlog | mock-up  demo  code  partial rollout   validate  full rollout    verify 

- measure product/market fit 


# Conclusion 
- life after product/market fit 
problem/solution fit -> product/market fit -> scale 

- my blog at http://ashmaurya.com and periodically teach workshops.

- Running Lean Mastery newsletter: http://blog.runningleanhq.com/mastery/.

- other blogs 
Eric Ries, “Startup Lessons Learned” (http://startuplessonslearned.com)

Steve Blank (http://steveblank.com)

Jason Cohen, “A Smart Bear” (http://blog.asmartbear.com)

Venture Hacks (http://venturehacks.com)

Sean Ellis, “Startup Marketing” (http://startup-marketing.com)

Dharmesh Shah, “OnStartups” (http://onstartups.com)

David Skok, “For Entrepreneurs” (http://www.forentrepreneurs.com)

Ben Yoskovitz, “instigator blog” (http://www.instigatorblog.com)

- tools 
Lean Canvas: business model validation software (http://leancanvas.com)

USERcycle: customer lifecycle management software (http://usercycle.com)

User Testing: online usability testing (http://usertesting.com)

KISSmetrics: actionable web analytics software (http://kissmetrics.com)

Mixpanel: real-time event tracking (http://mixpanel.com)

SnapEngage: online customer feedback tool (http://snapengage.com)

Heroku: Ruby Platform-as-a-Service infrastructure (http://heroku.com)

- premature fund raising is a form of waste 
funded is not validation 

without validation you have no leverage 

too much money can actually hurt you 

what about all the advice and connections?

how do I survive until product/market fit? 

keep your day job 

convserve burn rate 

charge from day one 

sell other related stuff along the way 

- how to achieve flow in a lean startup 
    
The problem team focuses on customer development, while the solution team focuses on product development.

Managers typically organize their day into one-hour blocks, and spend each hour dealing with a different task. Makers, like programmers and writers, need to organize their day into longer blocks of uninterrupted time. 

- understand the best day of date customer 
- set pricing for a SaaS product 
start with a single pricing plan 

use a free trial plan 

pick a price to test 

- build a teaser page 
- make a large promise 
- connect with the customer 
- create a teaser landing page 
pick a product name 
make sure twitter and facebook page available, register domain name 
follow basic SEO practices 
don't fret over the logo yet 
collect mail address 
measure website to track visitor such as google analytics 

- get started with continuous deployment 
commit -> test -> deploy -> monitor 

git, svn 
trunk stable 

unit test 
functional test 
continuous integration 

one click push/roll back 
feature flipper system 

server monitoring 
alerting 

code in smaller batches 
always be trunk-stable 

    + test is everyone's responsibility 
use a continuous integration server 

do not tolerate any failing tests 

prefer functional test over unit test 

start with your activation flow 

    + deploy 
out source as much of your server infrastructure as possible 

create a separate staging area if you are so inclinded

build one click push and roallback scripts 

deploy manually first then automate 

implement a simple feature flipper system 

- visualize retention in dashboard 
off the self monitoring and altering application Ganglia, Nagios, New Relic 

tolerate unexpected problems only once 

    + The Five Whys is a questions-asking method used to explore the cause/effect relationships
    
My car will not start. (the problem)

Why? – The battery is dead. (first why)

Why? – The alternator is not functioning. (second why)

Why? – The alternator belt has broken. (third why)

Why? – The alternator belt was well beyond its useful service life and has never been replaced. (fourth why)

Why? – I have not been maintaining my car according to the recommended service schedule. (fifth why, a root cause)

Why? – Replacement parts are not available because of the extreme age of my vehicle. (sixth why, optional footnote)

I will start maintaining my car according to the recommended service schedule. (solution)

reference: http://en.wikipedia.org/wiki/5_Whys























