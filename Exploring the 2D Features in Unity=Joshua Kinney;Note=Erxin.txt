Exploring the 2D Features in Unity=Joshua Kinney;Note=Erxin

# Exploring the 2d feature in unity 
- setup a 2d unity project 
    + create new project 
    + select packages 
    + select 2d for default project 
    
    the different is the default view become 2d, you could click the 2d button above the scene to come back to 3d view 
    
    + the texture become to Sprites not texture 

    + change default editor view by Edit|Project Setting|Editor you could change the default behavior mode from 3d to 2d from the inspector panel 
    
    + you could create 3d object in your 2d game 

    + in photoshop we need to create different object into different layers. such as 
    character, which will be break into different pieces 
    forground, will contain all the forground elements 
    background, will contain the background image 

    + after import the images as asset the default type of the texture type will be set to sprite 
    
    select one of the image, set the sprite mode base on the elements it contains such as single or multiple 
    
    select a image contain multipe sprite will need to open the sprite editor from the inspector panel 
    
    use the slice tool to seperate the sprites. there are two ways, automatic or grid, grid is manual seperate the sprite 
    
    after automatic seperate the sprites we could manually adjust the scale. hit the trim to reset at the right bottom of the sprite editor interface 
    
    rename each sprites at the editor and hit apply 

- manipulating sprites 
    + drag and drop element into scene 
    + bring the background element, reset the postion from the Inspector panel at the gear 

    + set the the dimension for the game view. Click the drop down button from the Free Aspect button of the game view. select a existing resolution or add a new one for the camera 

    + make the element start from zero axis position and adjust the scale for the background 
    
    ctrl+d to duplicate a element 

    + duplicate the background and ground and make necessary gaps and use the position unit to control the max gap and max hight 
    
    + working with sprites should setup layers. you could add multiple layers. we could select any objects to assign to a aim layers 
    
    click layers, edit sorting layers 
    
    the bottom layer should be draw last 
    layer0
    layer1
    layer2 
    
    layer2 will be drawn at the last, layer 0 will be draw first 
    
    the layer could be locked the prevent the elements be modified or moved. But the element are still support select from the Hierarchy 

    + setup the Clipping Planes to strink the cutting edge. set the Far property from 1000 to 10 in the inspector panel for the main game camera object. this will cut down the memory uses 
    
- setup props 
    + bring in props from the foreground elements 
    + adjust the layer to make the prop displayed 
    + if there are adjacent elemet in the same layer we could adjust the layer order for the object to control the display order 

    + add rocks and add component|physics 2d|circle/box/polygon collider
    
    when use polygon collider hold on ctrl and left click to edit to remove and change the collider shape 
    
    hole shape and left control we could adjust the point to reshape the polygon collider 
    
    the less vertices is better 
    
- slicing the character
    + bring in the character and change the Sprite Mode to multiple 
    + open the Sprite Editor to adjust the sprites 
    + rename all the sprites to give each a reasonable name 
    + click apply 
    + make sure the pivot point is at the center for rotate. the pivot point is the center rotate 
    
    such as put pivot point to ear 
    
    + add the sprite into the scene and set them to the character layer 
    + adjust the layer order for each parts of the body 
    
    + another way to prevent z fighting is adjust the order in 3d view for z axis with different z order will prevent the same layer z fighting issue 
    
- use animation tool to animate the character, parenting the character

    + create empty game object from the hierarchy panel at the top left. or click menu GameObject|Empty Game Object     

    + rename it to character
    
    + put it right at the belt line of the character, select all the character sprites and drag all drop them at to the child of the character game object 

    make sure move the character object could move all the character sprites 
    
    + parent the eye and eyebrow to the head in the hierarchy

    + use the move tool instead the rotate tool to rotate the head which will rotate the head with the center of the pivot point 
    
    + take head, arms to attach to as child of the body 
    
    + adjust the lower arm to upper arm and the hand parent to the lower arm 
    
    + place the character to the background
    
- creating the collider
    + add physics 2d collider for the character game object 
    
    + with 2d we could add multiple colliders for a single game object 
    
    + use box and circle collider for the player character
    
    + add physics 2d| Rigidbody 2d. which will supply a mesh for the character. set the property Interpolate to Interpolate
    
    + add box collider for the ground 
    
    + we could copy component and past the component to other object 
    
- creating the idle animation 
    + go to menu Window|Animation 
    + select the character 
    + right click the animation panel to add a animation clip. and save it 
    + the animation will add animator to the character game object 
    + add sample number to animation clip which means the animation contain 30 frame 
    + click record and adjust time line to the time postion and adjust the character to create key frame 
    
    the rotate tool(on the left up corner tool panel) will not create rotate tool 
    
    + the conceps is same as flash
    + adjust the curve to adjust the animation motion at the bottom of the animation panel 
    
    right click the key postion and select flat to just the curve 

    + we could adjust the sprite opacity too 

- blocking in the walk cycle 
    + create a new clip call it walk in the animation window 
- finishing the walk cycle 
- setting up the animation 
    + open menu Window|Animator window
    + it will display all the created animation clips inside the animator window 
    + create a transition to walk 
    + select a state and rigt click and select make transition and select the aim state 
    + click the plus icon and create a parameter 
    speed 
    
    change the transition condition with the parameter speed greet to 0 will go to walk 
- scripting the movement 
    + create a script folder 
    + create a c# script 
public float maxSpeed = 10.0f;
bool facingRight = true;

animator anim;

void Start()
{
    anim = GetComponent<Animator>();
}

//will run every second consistently 
void FixedUpdate()
{
    float move = Input.GetAxis("Horizontal");
    anim.SetFloat("Speed", Math.Abs(move));
    
    rigidbody2D.velocity = new Vector2(move * maxSpeed, rigidbody2D.velocity.y);
    
    if(move > 0 && !facingRight)
    {
        FlipFacing();
    }
    else if(move < 0 && facingRight)
    {
        FlipFacing();
    }
}

void FlipFacing()
{
    facingRight = !facingRight;
    
    Vector3 charScale = transform.localScale;
    charScale.x *= -1; //we want to scale the x to make a pretty turn 
    transform.localScale = charScale;
}

    + apply the script to the character by use add component script or just drag and drop to the character object 
    
- using sprite sheets for animation 
    + create a empty game object called coin 
    + create a component for the game object 
    + add component|rendering|sprite renderer    
    + choose a sprite with multiple sprites in it 
    + choose the asset spinning coins 
    + this is a sprite sheets, contain the frames in each sprites, open the sprites editor and slice the sprites 
    
    but with sprite sheets animation we use grid to animates
    
    + normally you want to use the charater to animation with sprite sheets tool 
    + select the spin coin and create an animation clip 
    
    + drag and drop all the sprites into the time line of animation. this will automatic create all the key frames 









    
    
    
