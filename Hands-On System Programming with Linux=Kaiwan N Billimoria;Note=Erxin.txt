Hands-On System Programming with Linux=Kaiwan N Billimoria;Note=Erxin


# Download example code 
- github 

GitHub at https://github.com/PacktPublishing/Hands-on-System-Programming-with-Linux

 books and videos available at https://github.com/PacktPublishing/
 
 
# Linux System architecture 
- environment 
    + Fedora 27 (Workstation) Download link: https://getfedora.org/en_GB/workstation/download/
    
    + Ubuntu 18, Ubuntu Desktop download link: https://www.ubuntu.com/download/desktop
    
- Unix philosophy 

Everything is a process; if it's not a process, it's a file
One tool to do one task
Three standard I/O channel
Combine tools seamlessly
Plain text preferred
CLI, not GUI
Modular, designed to be repurposed by others
Provide the mechanism, not the policy

- eveything is a process - if it's not a process, it's a file, VFS, virtual filesystem switch 
- three files on creation 
standard input, stdin, fd 0, the keyboard device by default 
standard output, stdout, fd 1, the monitor device, by default 
standard error, stderr, fd 2, the monitor device by default 

fd is the common abbreviation especially in code for the file descriptor 

changing standard input output or error channels is called redirection, by <, > and 2> sheel operators. 

- exists a class or programs called filters, will read from input and write the filtered results to output. the default input is stdin 

Unix are very common utilities, such asÂ cat, wc, sort, grep, perl, head, and tail

- press Ctrl + D. This is the default character sequence that signifies end-of-file (EOF), or in cases such as this, end-of-input.

- filer example 

Sort a file alphabetically and save the output and errors to a file (explicit input-, output-, and error-redirection
 
$ sort < fruit.txt > sorted.fruit.txt 2> /dev/null
































