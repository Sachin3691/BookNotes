TruClient Development Notes;Note=Erxin

# TCNM
- test object 

<testObject testObjId="testObj:{….}" platform="web"…>
    <context> 
        <testObject platform=”mobile” testObjId=”testObj:{…….}”/>
    </context>
</ testObject>

- Create an ‘Activate WebView’ to “group” steps related to the same WebView before their execution. In case the user records steps on a different WebView, script modifier should create a new “Activate WebView” before the step.

TC will kep a map to save the relative webviews 

- Mobile test limitations 

Mobile devices hold connections longer than regular devices. 

Data consumption from mobile devices is typically slower than regular services

Mobile devices communicate with cells, and as the device changes location, the cell it communicates with changes. 

You can’t simulate it using a regular browser, because the network traffic sent from a mobile browser is different, both in the content of the UI that is served, and the HTTP headers?

Limited bandwidth – mobile networks typically have a smaller bandwidth than wireless networks, which means it takes data longer to get through

Network latency – the mobile device needs to communicate with a cellular tower

Packet loss – data packets being transmitted between any two points on the network can get lost

Network virtualization, NV support 

- LoadRunner Mobile 

    + Mobile Application HTTP/HTML, recording scripts that transport level for native mobile 
    
    + Mobile TruClient, based on Ajax TruClient, using a browser modified to emulate the mobile browser.

- Is not a Trusted Authority (so need to add Server Exception if choosing
    to connect to Mobile server over SSL)

- develop native mobile script
    + using websocket connect to MC server
    + choose app 
    + choose device 
    
    + mobile center settings 
    + develop script 
    + parametrize mobile device to let vuser pick different devices 
    + parameterize mobile app, in order run the same app using different servers 

- TC native mobile vs. TC web 
                                    Native              TC  Web
identification methods          automatically           can be chosen by user 
END EVENTS                      ACTION COMPLETED        action completed
                                Object exists           dom content loaded 
                                                        document loaded 
                                                        step synchronous network 
                                                        completed 
                                                        step network completed 
                                                        dialog opened 
event handlers                  n                          y
play this step/play from this step   n                     y 
authentication dialogs              n                      y 

- Extended Log from vugen, ctrl+shift+j 
- load log, output.txt in the script folder 

- TCNM architecture overview 
TruClient                                               MC                         
MDRV <-> Browser  | <------rest, web sockets ---> | Mc server <-> real devices 
A 
|
V 
connector(optional)  real devices 

- communication management 
https://rndwiki.houston.softwaregrp.net/confluence/display/horizon/Communication+Format+Specification
https://rndwiki.houston.softwaregrp.net/confluence/display/horizon/Server+REST+Messages+Format


# TruClient Knowledgebase 
- reference 
https://softwaresupport.softwaregrp.com/web/softwaresupport


# What's the influence of 5G to mobile testing?
- huge data will be pash throw wareless network to AI engine 
- iot devices 
- real time transformation 
- drive automation 
cybersecurity 
enterprise application 
network slicing, package priority 
integrated access backhaul 
disaggregated RAN 
traffic optimization 
edge cloud 
cell site maintenance 
operation automation 
integrated network planning 

- new attack vectors in 5g 
DDos attacks against the 5G RAN 
attacks against the 5G Edge cloud from third-party applications 


# Compatitors 

## Product comparison with Silk and LoadRunner, 2012 
- report target is aim to provide information and assist with purchasing decisions 

- feature comparison 
monitor
network virtualization 
analysis & diagnostics 
reports 
devops 
developer related 
coolness 
pricing 
max concurrent users 
max concurrent users for a selenium webdriver test 
load generators 
number of tests 
number of sandbox tests 
max test duration 
data retention 
team mebers 
apm monitoring 
private IPs 
1 second report resolution 
CDN tests 
on-premise solution behind the firewall (在预置(on-premise)技术领域，这被称为“开箱即用”)
support level 
documentation 
learning curve 
stability & risk 
lg types, window, linux etc...
test results/information data store
availablitity of saas support 
licensing 
UX experiences 
    responsiveness of UI 
    speed of report generation 
lg resource consumption 
test data management 
breadth of license protocol support 
platform requirements for controller
add parameters 
installation process
supported protocols
    http
    flex
    ajax 
    outlook 
    mobile 
    https 
    soap 
    smtp 
    ...
tools analysis, report 
comparison two reports or history reports
test data randomisation 
session data variability correlation 
verification checks to confirm correct script behavior 
accucrate emulation of user behavior 
ajax scripting support accuracy of playback 
custom headers 
proxy recording
mobile support support 
online support and document 

- statibilty and risk scoring 
vendor stability
vendor product risk

- does the product provided or supported by qualified test engineer in workspace?
- Silk Performer has advantages in licence flexibility as well as good documentation and a simpler user interface


# TruClient Client side measurement 
- measurements 
client-side latency breakdown 
navigation timing 
page component breakdown 
component sizes 
human perceived response time 
collect complete timing information 
device KPIs, os related, browser related, mobile relatied 
client side code profiling for diagnostics/RCA, statistic the handler and js lib execution information 
present suspected areas and recommendations 
compare to production behavior?
- Navigation timing

Prompt for unload
----------------- navigation start, redirect start 
redirect 
----------------- redirect end, fetch start
app cache 
----------------- domain lookup start 
DNS 
----------------- connect start, domain lookup end 
TCP
----------------- connect end, request start 
Request
----------------- request end, unload event end, unload event start
Response        | unload 
----------------- dom ineractive, dom loading 
Processing      | DOMContentLoaded 
---------------------------------- dom content loaded event end, dom complete, load event start
load 
----------------------------------- load event end

- controller/analysis datapoints, Be parsed using datapoint prefix mechanism

- milestones/feature drops 
    + drop1 truclient infrastructure 
    + drop2 controller prefix change 
    + drop3 dom interactive 
    + drop4 unload processing time 
    + drop5 dom content loaded processing time 
    + drop6 load processing time, load event graph
    + drop7 first paint time, collect paint infromation from chrome and TCB
    + drop8 first contetnful paint time


## BlazeMeter
- Browser Extension

Record Selenium and HTTP traffic to create a load and functional tests in less than 10 minutes (Apache JMeter Compatible).

BlazeMeter Chrome extension enables you to - Record. Browse. Upload. Run.

- website

https://www.blazemeter.com/


## taurus
- console based automation friendly framework for continues testing 
https://gettaurus.org/

## selenium
- reference 
https://www.selenium.dev/

## automation test teams integration 


# Linux hook 
https://catonmat.net/simple-ld-preload-tutorial-part-two
https://github.com/kubo/plthook
https://en.wikipedia.org/wiki/Hooking
https://en.wikipedia.org/wiki/Netfilter
https://opensourceforu.com/2011/08/lets-hook-a-library-function/
https://stackoverflow.com/questions/37398520/how-to-hook-send-recv-functions-on-linux


# TruClient Expectations 
- support web and moble modern js app 
- agnostic to frameworks used in the AUT 
- features 
    + simple 
    + only tool that measures real client side performance 
    + single script across multiple products 
    
- integrated products 
LoadRunner 
StormRunner 
Performance Center 
Network Virtualization
BPM 
WebInspect 
AppPulse 
Mobile Center 

- roadmap
scripting 
analytics 
mobile 
devops 
coded 14.00
cross platform record and replay 14.00+
for MC 
    + multiple apps support
    + hybrid apps support 
    
srf? 
extended browsers 
    + edge 
    + safari


- usage analytics 
user operations 
script metrics 
environment information 
flavors, such as browsers 

object identification data?




















