Modern x86 Assembly Language=Daniel Kusswurm;Note=Erxin

# Introduction
- this book doesn't contain the 16bit real mode programming and segmented memory models 
- terminology and conventions 
a function, subroutine or procedure is a self-contained unit of executable code that accpets zero or more arguments, perform a operation 
function are typically invoked using the processor's call instruction 
a thread is a smallest unit of execution that is managed and scheduled by an operation system 
a task or process is a collection of one or more threads that share the same logical memory space
an applicaiton or program is a complete software package that contains at least one task 

x86-32 and x86-64 are used respectively to describe 32-bit and 64-bit aspects, resources or capabilities of a processor 
x86 is employed for features that are common to both 32-bit and 64-bit architectures. 
common capabilities of the x86's SIMD extension are described using the term x86-SSE for streaming SIMD extensions or x86-AVX for advanced vector extensions 

- additional resources 
most important tome is volume 2 of the reference manual entitiled intel64 and ia-32 architecture software developer's manual combined volumes: 1,2A,2B,2C 3A, 3B and 3C 

- SSE, streaming SIMD extensions 
- AVX, advanced vector extensions 
- SIMD, single instruction multiple data operations on packaged intergers using 64-bit wide registers from P5 microarchitecture 

Pentium III also based on the P6 microarchitecture 

2006 intel launched a new microarchitecture called Core. it incorporated a number of x86-SSE enhancements including SSSE3 and SSE4.1 from Core 2 Duo and Core 2 Quad series 

2011 intel launched a new microarchitecture called Sandy Bridge. it introduced a new x64 SIMD technology called advanced vector extensions. add packed floating point operations using 256-bit wide registers. it also support new three operands instruction syntax 
- this book is concentrates on creating x86 assembly language modules and functions that are callable from c++ 
- all the source code are use microsoft visual c++ and microsoft macro assembler both of these are include in visual studio 
- sample code, http://www.apress.com/9781484200650
- data types 
    + functional data types 