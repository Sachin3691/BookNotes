Microsoft Silverlight Business Application Development=Frank LaVigne;Note=Erxin

# preface
- white paper on very subject and much more
http://windowsclient.net/wpf/white-papers/thenewiteration.aspx.

# Getting started
- dependency properties, are a new wrinkle on the old reliable property system of the CLR 
- visibility is no longer boolean
Visible, Collapsed and Hidden, Collpased tells the layout engine to rearrange elements on the screen
silverlight don't support hidden state
- tools
    + silverlight toolkit
    http://www.codeplex.com/Silverlight
    + visual studio + blend
    
- deep zoom, for user browse high resolution images
http://www.microsoft.com/downloads/details.aspx?FamilyID=457B17B7-52BF-4BDA-87A3-FA8A4673F8BF&displaylang=en

- silverlight spy, utility that lets you peek into a running silverlight application
http://firstfloorsoftware.com/silverlightspy/download-silverlight-spy

- expression blend
- expression encoder, is a multimedia conversion and rudimentary editing tool
- inkscape, open source vector graphic editing application, support import and export xaml file
http://www.inkscape.org


# enhancing a website with silverlight
- picking the right kind of container
canvas, manual positioning of items using x and y cooridnates
grid, lay out item using a defined grid of rows and columns
inkPresenter, canvas that handle digital ink
stackPanel, stacks items on top of or next to one another
wrapPanel
Boarder
viewBox, scales an items up to take up all the available space
scrollviewer, place a scroll bar around the control

- style
<Style x:Name="biggerTextStyle" TargetType="Button">
    <Setter Property="FontSize" Value="18"/>
</Style>

<Button Content="Home" Style="{StaticResource biggerTextStyle}" />

create a default style for a kinds of UI element
<Style TargetType="Button">
    <Setter Property="FontSize" Value="18"/>
</Style>

overwrite anonymous style and revert tot he control's default appearance, set the style attribute to
Style="{x:Null}"

- visual tree and logical tree
    + visual tree deals with all the visual elements in a control, overwrite the default template to redefining a control's visual tree
    + logical tree deals with all the logical elements

    + the ControlTemplate class define a new visual tree
- blend support make a manual draw element into user control

- states of mind, the visual state manager, manage the visual states of controls
- layers between your code and actual silicon
app
web browser
silverlight runtime
operation system
computer/mobile device

- animation in silverlight
    + every animation is a storyboard
    + storyboard contain one or more key frame elements
    + four general types of key frames 
    linear, 
    discrete, jump to next state instantaneously
    spline, moves base on varying mathematically defined curve
    easing, more evolved version of spine

    + in silverlight the animation is time based, the term storyboard comes from the motion picture industry where scenes are drawn out before they are filmed
    
- on blend, the properties tab you will see an icon with a lighting bolt on it. click on it to see the events associated with a user control object
if you name a story board and then could start it from the code bind by
storyBoardName.Begin()

<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="canvas1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">

the TargetProperty, the transofrmGroup is relative to the canvas renderTransform property
<Canvas Name="canvas1">
    <Canvas.RenderTransform>e
        <TransformGroup>
        <ScaleTransform />
        <SkewTransform/>
        <RotateTransform/>
        <TranslateTransform/>
        </TransformGroup>
    </Canvas.RenderTransform>
</Canvas>

Transform can be packaged in a transformGroup which can be set in RenderTransform Property, which is a property of UIElement

preview a animation change tye Press the Hold In button on the Easing Spline panel

- getting on the same page
    + open the silverlight web host page
    + go to the silverlight plugin div
    + wrap the html content into the silverlight object tag to display the html when silverlight is not installed
    + Create ClientBin and copy *.xap to this folder
    + Silverlight.js file. This contains all the plugin detection code


# adding rich media
- adding media to a silverlight project, open in expression blend
    + add existing item into project, select media file
    the media file's build action is content
    + add media element control, MediaElement
    
- improve the xap file download speed by remove the media file from silverlight project and add it into the host website
    + build a project by ctrl+shift+b
    
- add video into silverlight project require to have a visual element
    + add into project
    + add media element
    
- add video outside silverlight project
    + using video as a brush, VideoBrush
    <VideoBrush x:Key="brush" SourceName="mediaEelemntControlName"/>
    
    to use the video brush, simply reference it 
    Fill="{StaticResource brush}"
    
    + select the previous created mediaElement control in blend and right click, select make brush resource
    don't forget to hide the mediaElement control before use the brush
    + select any ui element could consume the created brush
    
    + add play sound behavor in the blend to control the video

- curly braces indicate that we are using markup extensions
- staticResource keyword tell silverlight runtime to refer to resources available to the control
- expression media encoder is used to convert media to the format which is supported by silverlight
WMV, WMA, MP3, and MPEG-4-based H.264/AAC audio
- expression encoder
    + import file
    + encoding for silverlight|VC-1|Constant bitrate|VC-1 512k DSL CBR
    + Apply, below the presets tabl, find a tab named output
    + Clean from tempalte dropdown list
    + click Encode button
    + click the gear and select Open job location will go to the output directory
    
# taking the RIA experience with silverlight
- deep zoom experience
- add a map of business locations with the bing map control
- use digital ink to sketch out ideas
- learn about isolated storage
    
# Handling data
- deep zoom introduces is roughly 30%, means if you have 1GB of images to convert to display via deep zoom, plan on using about 1.3gb of disk space
example
http://memo.hardrock.com
    
- creating a deep zoom photo montage
    + assuming that already have deep zoom composer installed, download it from
    http://www.microsoft.com/downloads/details.aspx?FamilyID=457B17B7-52BF-4BDA-87A3-FA8A4673F8BF&displaylang=en
    
    + create a new project
    + import the images
    + click compose after import all the required images
    + drag and drop images into the composition area, and arrange the image position
    + click export to check the deep zoom
    
    shift + click to zoom out
    
- using the bing maps silverlight control, bing maps silverlight map control
 http://www.microsoft.com/downloads/details.aspx?displaylang=en&familyid=beb29d27-6f0c-494f-b028-1e0e3187e830
    
http://www.microsoft.com/maps/isdk/silverlight/
    
- create a silverlight map project
    + add referece to 
    Microsoft.Maps.MapControl.dll, Microsoft.Maps.MapControl.Common.dll
    
    + reference namespace
    xmlns:map="clr-namespace:Microsoft.Maps.MapControl;assembly=Microsoft.Maps.MapControl"
    
    <map:Map/>
    
    + getting credentials, sign up for bing maps account, http://www.microsoft.com/maps/developers/
    + add the key into bing map control instance
    <map:Map CredentialsProvider="[Bing Maps Account Key]">
    
- taking control of the map control, gps
    + using latitude and longitude, sometimes abbreviated to LatLong
    + Latitude (usually shown as a horizontal line) is the distance of a point
north or south of the Equator.
    + Longitude (usually shown as a vertical line) angular distance of a point east or west of the Prime (Greenwich) Meridian
    
- inkPresenter control
<InkPresenter/>

- Capturing strokes
inkPresenter.Strokes.Clear()
    
more detail information
http://blogs.msdn.com/swick/
    
- isolate storage, silverlight application context menu, click application storage
IsolatedStorageSettings setting = IsolateStorageSettings.ApplicationSettings
settings[key] = value;
settings.Contains(key)
settings.Add(key, value);

platform                        Path
Windows 7 and Windows Vista     %userprofile%\AppData\LocalLow\Microsoft\Silverlight\is 
Windows XP                      %userprofile%\Local Settings\Application Data\Microsoft\Silverlight\is
MacOS                           /Users/<user>/Library/Application/Support/Microsoft/Silverlight/is
    
the information is not encrypted or automatically protected
    
- asynchronous calls

    +  add call logic
    HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(new Uri("http://www.franksworld.com/"));
    httpRequest.Method = "POST";
    httpRequest.ContentType = "application/x-www-form-urlencoded";
    httpRequest.BeginGetRequestStream(new AsyncCallback(ResponseActive), httpRequest);
    
    + add callback logic
    private void ResponseActive(IAsyncResult asyncRes)
    {
        // Continue getting response
        HttpWebRequest httpRequest = (System.Net.HttpWebRequest)asyncRes.AsyncState;
        System.IO.StreamWriter postStreamWriter = new System.IO.StreamWriter(httpRequest.EndGetRequestStream(asyncRes), System.Text.        Encoding.Unicode);
        postStreamWriter.Write("XAML=" +    System.Windows.Browser.HttpUtility.UrlEncode(_postData));
        postStreamWriter.Close();
        httpRequest.BeginGetResponse(new AsyncCallback(ResponseCompleteAsync), httpRequest);
    }
    
    //another asynchronous callback delegate
    private void ResponseCompleteAsync(IAsyncResult asyncRes)
    {
        System.Net.HttpWebRequest httpRequest = (System.Net.HttpWebRequest)asyncRes.AsyncState;
        System.Net.HttpWebResponse httpResponse = (System.Net.HttpWebResponse)httpRequest.EndGetResponse(asyncRes);
        this.Dispatcher.BeginInvoke(new UpdateUI(ReportUploadStatus), httpResponse.StatusCode);
    }
    
    //update UI response
    private void ReportUploadStatus(HttpStatusCode httpStatusCode)
    {
        if (httpStatusCode == HttpStatusCode.OK)
        {
            MessageBox.Show("Sketch successfully sent!");
        }
        else
        {
            MessageBox.Show("An error has occurred. Please try again.");
        }
    }
    
# Handling data
- wcf, data serialization
System.Runtime.Serialization.DataContractSerialzer to serialize the DataContract classes into XML. The .NET Framework also provides a NetDataContractSerializer which includes CLR information in the XML or the JsonDataContractSerializer that will convert the object into JavaScript Object Notation (JSON)

- create wcf service
- add service reference
- collection data
- validating data
    + implement INotifyPropertyChanged
    
    + using Code Snippets, Tools|Code Snippets Manager, (ctrl+k, b)
    
    + data binding
    Set UpdateSourceTrigger to Explicit will causes any changes in the underlying data object to force a re-bind of the control
    
    + silverlight can report a validation error in one of three scenarios
        * exceptions thrown from the binding type converter
        * exceptions thrown from the binding object's set accessor
        * exceptions thrown from the validation attributes found in the DataAnnotation assembly
    
    + add binding validation expression
    {Binding CustomerName, Mode=TwoWay, UpdateSourceTrigger=Explicit, NotifyOnValidationError=True, ValidatesOnExceptions=True }
    
    The NotifyOnValidationError and ValidatesOnException will both cause the control to display an error message
    
    add check logic into the set method of the CustomerName property
    CustomerName
    {
        ...
        set{
            if (String.IsNullOrEmpty(value))
                throw new ArgumentException("Customer Name is required.");
        }
    }
    
    also add check logic into the submit logic
    var bindingExpression = uiElement.GetBindingExpression(TextBox.TextProperty);
    bindingExpression.UpdateSource();
    
    if(!Validation.GetHasError(uiElementName)
    {
        ...
    }
    
    
# Back Office Application
- leverage the wcf RIA service to build a common middle tier
- WCF RIA service is designed to work with various data storage mechanisms, from relational database to plain old clr objects(POCO)

- download the RIA service package 
 http://silverlight.net/riaservices/ 

- go to visual studio create new project and select silverlight business application
The Silverlight Business Application template will add a Silverlight project and an ASP.NET project.
    
- sharepoint, is a collaboration tool useful for content management
download and install the sharepoint extension
    
- may need create a cross-domain.xml access control file to let silverlight applicaiton make cross domain access
    
# customer service application
- create database with entity framework

- use page navigation service method to navigate to other pages
this.NavigationService.Navigate(new Uri("/Submissions", UriKind.Relative));

- use RIA validation attributes to help validation data
[MetadataTypeAttribute(typeof(Customer.CustomerMetadata))]
public partial class Customer
{
    // Metadata classes are not meant to be instantiated.
    private CustomerMetadata()
    {
    }
    
    public int CustomerId;
    [Required(ErrorMessage="Customer name is required.")]
    public string CustomerName;
    
    [Required(ErrorMessage = "Email address is required.")]
    [RegularExpression(@"^([\w\-\.]+)@((\[([0-9]{1,3}\.){3}[0-9]{1,3}\])|
                         (([\w\-]+\.)+)([a-zA-Z]{2,4}))$",
                       ErrorMessage = "A valid email address must be in the format user@domain.com.")]
    public string EmailAddress;
    
    public EntityState EntityState;
    
    public EntityCollection<Event> Events;
    
    [Required(ErrorMessage = "Phone number is required.")]
    [RegularExpression(@"((\(\d{3}\) ?)|(\d{3}-))?\d{3}-\d{4}",
    ErrorMessage = "A valid phone number must be in the format(XXX) XXX-XXXX or XXX-XXX-XXXX.")]
    public string PhoneNumber;
}

add submit relative logic
AppState.CustomerContext.SubmitChanges(new Action<System.
Windows.Ria.Data.SubmitOperation>((o) =>
{
    ...;
}

Silverlight also provides a ValidationSummary control that works much like the ASP.NET ValidationSummary in that error messages are displayed in one place
    
    
# executive dashboard appilcation
- data visualization, controls like chart, and datagrid
- install silverlight toolkit
http://www.codeplex.com/Silverlight
- add chart control in expression blend
    + bind the item source property from wcf ria service callback method
    AppState.CustomerContext.Load<Order>(AppState.CustomerContext.GetOrdersQuery(), new Action<System.Windows.Ria.LoadOperation<Order>>((op) =>this.Dispatcher.BeginInvoke(() =>
    {
        // Orders finished loading, bind to the sales data
        //chart control.
        var orders = op.Entities.Where
        (o => o.OrderDate.Year == DateTime.Now.Year);
        var salesData = new Dictionary<string, double>();
        for (int i = 1; i <= 12; i++)
        {
        salesData.Add(CultureInfo.CurrentUICulture.
        DateTimeFormat.GetAbbreviatedMonthName(i),
        (double)orders.Where
        (o => o.OrderDate.Month == i).Sum(o => o.Cost));
        }
        SalesDataChart.DataContext = salesData;
    });
    
    The salesData dictionary which we created above represents the IndependentValuePath (months) and DependentValuePath (cost) of the columns in the chart.
    
    + Series Collection, property of the chart control could remove and add new series for the chart such as PieSeries
    
    + Set the DependentValuePath and IndependentValuePath to the following Key and Value
    
    + add additional SalesChartData control XAML to the following to add an additional ColumnSeries:
    <chartingToolkit:Chart x:Name="SalesDataChart" Title="Sales
    Information" Margin="0,31,0,0" HorizontalAlignment="Left"
    VerticalAlignment="Top" Width="400" Height="200">
        <chartingToolkit:ColumnSeries ItemsSource="{Binding [0]}" DependentValuePath="Value" IndependentValuePath="Key" Title="Last
        Year"/>
        <chartingToolkit:ColumnSeries ItemsSource="{Binding [1]}" DependentValuePath="Value" IndependentValuePath="Key" Title="Current
        Year"/>
    </chartingToolkit:Chart>
    
- spreadsheet data, 
    + ensure the edit are committed correctly, need to implement the IEditableObject on the bound data object
    + support paging by implement IPagedCollectionView interface and even use a data pager control
    + add page control to support page
    var view = new PagedCollectionView(orders.OrderByDescending(o => o.OrderDate));
    OrdersPager.Source = view;
    OrdersGrid.ItemsSource = view;
    
    
# Delivery Application
- create custom control
    + create silverlight project
    + add silverlight class library
    + add new item, silverlight template control
    If you open up the Generic.xaml file, you'll see that it is a resource dictionary and that the template had already filled a Style with a TargetType of local:CustomControlName.

    example:
    <Style TargetType="local:SignatureControl">
        <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="local: SignatureControl">
            <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            </Border>
            </ControlTemplate>
        </Setter.Value>
        </Setter>
    </Style>
    
    in the custom control constructor, will be added to specify the control style 
    this.DefaultStyleKey = typeof(SignatureControl);

    add event handlers to the custom control

- dependency properties
- OnApplyTemplate method, called when a template is applied, where you'll want to put any kind of initialization logic
- template binding, 
<InkPresenter
    x:Name="inkPresenter"
    Strokes="{TemplateBinding Strokes}"
    Background="{TemplateBinding Background}">
</InkPresenter>

The TemplateBinding markup extension makes the connection between properties in the control template to the value of an exposed property on the control.

- the control appearance could be change by expression blend
- Geocoding is the process of converting an address, place name, or postal code to a set of latitude and longitude coordinates
Bing API web service GeocodeServiceClient object to communicate with the geocoding service.

referece
http://www.viawindowslive.com/VirtualEarth.aspx
http://msdn.microsoft.com/en-us/library/dd877956.aspx


# Where to go from here
- check network connection status before access network resource
bool networkAvail = NetworkInterface.GetIsNetworkAvailable();

subscribing to the NetworkAddressChanged event. This event fires when the network address changes and when you lose and regain network connectivity. 

NetworkChange.NetworkAddressChanged += new NetworkAddressChangedEventHandler(NetworkChange_NetworkAddressChanged);

- executing outside the browser
    + project option, enable running application out of the browser
    + control install the application by
    Application.Current.Install();
    + after run the application
    Application.Current.InstallState property to see if our application is already installed.

- WPF


    
    
    