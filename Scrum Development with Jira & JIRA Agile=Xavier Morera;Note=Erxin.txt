Scrum Development with Jira & JIRA Agile=Xavier Morera;Note=Erxin

# Introduction
- A great idea is important, but execution is key
- who this course is for
    + people in software development interested in using agile scrum
    + with the support of a tool built specifically for the agile framework 
    + and who want to do it right, avoiding
    
- agile team fundamental in pluralsight 
- course overview
    + concepts
    agile, jira & jira agile
    + getting started
    what do you need?
    your project
    + sprint planning & sprint retrospective
    get the ball rolling over and over again
    epics, stories and tasks & estimates
    improve your process
    
- scrum & sprints
    + keeping your project moving

    
    
# Concepts of scrum development with Jira & Jira Agile
- Concepts intro
    + JIRA Agile
- Agile development, is a group of software development methods based on iterative and incremental development where requirements and solutions evolve through collaboration between self-organizing, cross functional teams
- scrum framework
    + iterative and incremental agile framework
    + managing software projects and product/application dev
    + focus
    a flexible holistic product development strategy where a development team works as a unit to reach a common goal
    + traditional sequential approach
- key principle, recognize the change 
- JIRA agile for scrum
    + issue tracker & extensible platform
- User stories, epics and themes
    + theme, top level objective that spans products /projects
    + user stories is function defined by user
    + epic is a collection of user story
    + task is a function to do, it is tested
    
- product owner, scrum master, team member
    + product owner
    final authority on requirements
    prioritize backlog and provide clear requirements
    + team members
    cross functional autonomous, self organizing
    project manager, developer, tester, swiss army knife, CTM, TOC
    + scrum master
    facilitator, negotiator, responsible for guiding team
    removes
    
- product back log
    + feature list -> user stories
    + features, bugs, technical work information, ...
    + not required to be complete at the beginning
- sprint planning meeting
    + committed parties involved product owner
    + other parties can attend as listeners
    + PO describes highest priorities 
    + detail task created and assigned 
    + objectives 
        * sprint goal
        * sprint backlog
    + logging ahead recommended
    
- next 2 sprint
- daily scrum, 15 min, time boxed usual in the morning /same location
    + moderated by scrum master
    + every attendee
        * what did you do yesterday?
        * what will you do today?
        * is there any impediment on your way?
    + scrum master helps remove impediments, or find someone who will
    + state of affairs
        
- burndown chart & velocity
    + burndown chart, graphical representation of work pending vs time left
    are you going to make it?
    + velocity
    amount of work per particular sprint
    helpful in planning upcomming sprints
    dynamic
        
- sprint retrospective
    + objective, determines ways to improve at end of sprint
    + suggestion
        * start doing
        * stop doing
        * continue doing
    + prioritize
    + work on improving
    
- sprint review
    + goal, ship ready state
        * scrum-> deliver potentially shippable product
    + hold a meeting to present the outcome
    + typically a demo
    + assessed toward the goal
    
- JIRA Agile
    + JIRA's way of agile project management
    work board, plan board
    + Scrum, create and estimate storeis, build and prioritze backlog, team commitment, velocity, ...
    + based on 3 boards
    planning board
    task board
    chart board
    
    + details soon
        
    
    
# Getting started with jira & jira agile
- create new project, there are several project types
    + agile scrum, select agile scrum
    + simple issue tracking
    + software development
    + agile scrum
    + agile kanban
    + jira classic

    + import project from different project, support different system such as trac, mantis, bugzilla project
    + gannt-chart for jira
    
    + create he project name and the project lead
    
- the scrum boards
    + start on plan mode
    + plan
        * plan sprints
        * start sprint to move it into work mode
    + work, transition issues through multiple statuses
    + report,
        * monitor progress
        * burndown chart, control chart, cumulative flow diagram, epic report, sprint report, velocity report
        
- plan mode, estimate the work to be done, make sure all work, jql is used to create exact search
    quick fileter
    
- work mode, transition of window, check when did your team under going
- report mode, display the current state and evolution of your project
- create your own board
    + scrum or kanban
    multiple options, create an agile board
    multiple projects
    
- classic boards
    + not actively developed
    + not recommended for new projects
    + use the new board!
    
- project overview and administration
    + overview
    issue, agile, reports, poplar issue, labels
    + administration
    
- CCVIEWME, administration
    + welcome to your project
    + Issues
    + reports
    + popular issues
    + labels
    + screen, add remove from the project
    + versions
    + settings
    + components, project can be broken down into components, such as databse
    + role
    + permissions
    + notification
    + development tools
    + get your project start
    
- creating the backlog
    + create issue
    + backlog ready?
    + next step, plan
    + requirement all the time
    

    
# Sprint planning & sprint retrospective
- section 1, sprint planning meeting
    + use plan mode
    + describe highest priorities on beginning of sprint
    + create detailed tasks, estimate and assign
    + artefacts, sprint goal and sprint backlog
    
- in plan mode you can 
    + prioritise your backlog
    + create sub tasks for stories
    + estimate assign and rank
    + logically group into epics
    + add into sprints
    + start a sprint
    + come back do more planning
    
- rules of common sense
    + scope creep
    avoid or at least control
    + realistic expectations
    + golden triangle
    cost, time, quality
    
- sprint demo
    + only one sprint can be active
    + plan different version of plan from the plan mode
    + define the sprint from two to a month
    + create epic, contain multiple stories and may contained in multiple sprint
    configure the color of epic, click the epic name
    
    + create story support create time tracking 
    + after create stories and epic they will put into the back log
    + the stories could be assigned to each sprint from the plan mode, drag and drop the story to sprint
    
    + edit each work item also could assign epic and fix version
    
    + tip and trick, right click to the work item in the sprint or backlog could display the content menu to assign to backlog or sprint
    
    + each story point is means sub tasks numbers
    
    + create task for story from the sprint view
    + click start button to start the sprint
    
- sprint retrospective meeting
    + start-stop-continue approach, in the meeting
        * start doing
        * stop doing
        * continue doing
    + use the sprint report
    + volte the most the important item to do 
    + define how you will improve next sprint
    TO-DO list, be better
    
- section 2, sprint retrospective & review
    + switch to report mode
    + click the sprint report from the side bar
    + the boarddown line will display the complete 
    + think of it as auditing your own process
    + commit to improving
    + their ar also velocity chart 

- sprint review
    + usually does not involve jira
    + demo mode, demo make the out come looks good
    + break a leg!
    
    
# Scrum & Sprints
- daily scrum with work mode
    + guide you on how to use jira & jira agile
    + tackle the daily scrum
    + review and understand reports
    + forecast, control, improve, deliver & more
    + module 
    work mode
    report mode
    other reports
    
- daily scrum
    + time box, same time/place, usually morning and realy standing up
    + use work mode
    + visualize
        * what did you do yesterday?
        * what will you do today?
        * is there any impediment on your way?
        
        TODO
        Inprogress
        Done
        
    + in work mode you can 
        * use it during scrum
        * work on issues
        transition & edit
        * release a version and more
        
- work mode demo, open from Board|Configuration
    + general and filter
    edit the filter query
    
    + columns, how many tickets, use to set limits
    + add new status
    + swimlanes, use to define the board group ticket logic
    + card colors, define each color for issue types
    + estimation, how do you want jira to estimation time tracking
    + working days, specify the exact working days
    + issue detail view
    
from the work mode, you could create a board
    + right click a ticket to flag a task. to implement the team member about a impediment have be encounter
    + click the complete button for a sprint to finish a cycle of sprint
- report mode
    + visualize and control project progress
    + reports are board specific
    + available scrum boards specific
    + available scrum baords only 
    burndown chart,...
    + general availability
    control chart, cumulative flow gram
    
    + burndown chart
    actual vs estimated amount of work for a sprint
    x axis -> time
    y axis -> issues
    objective, determine in advance the possibility of finishing on time 
    monitor constantly
    
    + sprint report
    list of issues for each sprint
    useful for the sprint retrospective meeting and mid checkds
    show information on initial team commitment
    
    + epic report
    useful for epic report as they may span multiple sprints
    list of complete, incomplete and unestimated issues in an Epic
    understand progress towards completing an epic over time
    
    + version report
    team's progress towards completion of a version
    predicted release date
        * base on average rate of progress
        * estimate amout of work remaining 
        
    + velocity chart
    amount of value delivered in each sprint in story points
        * help you predict amount of work for future sprints
    useful during sprint planning meeting
    recorded at the time of sprint start 
        * changes are not reflected 
        
    will display the commitment sprint and exact complete time
    
    + control chart
    show "cycle time" or "lead time" for your issues
        * cycle from start progress to work completed
        * lead from issue logged until work completed
    can current sprint data be used to estimated future performance
        less variation in cycle time means highter confidence in using an average as metric of future performance 
        
    + cumulative flow diagram
    are chart that show status over time
        * each color is a status
    i.e. how many issues in progress on daily basis
    widening area -> bottleneck !
    
    double click and select the chart the update the chart area
    
    + gadgets, Manage|Dashboards
    dashboards are a very powerful feature of jira
    collection of add-ons plus agile and classic agile gadgets
        * provide status and overview of all sorts of KPI
    build dashboard specifically to suit your needs
    
        * create new dashboard
        * add few gadgets
        * select the 5:3 layout
        * create few gadgets chart
        Agile Classic Cumulative Flow Chart
        Agile Classic Days Remaining
        Agile Sprint Burndown Gadget
        Agile Sprint Health Gadget
        Agile Wallboard Gadget
        Assigned to Me
        Average Age Chart
        Created vs. Resolved Chart
        * configure the filter for the chart
        
- additional jira reports
    + jira provides non agile specific reports
    + available from project overview > reports
        * average age report, average number of days issues were unresolved for on a given day over pass 300 days
        * created vs. resolved issues reports, the issue is created before the start day and resolve after is not taking in to account
        * pie chart report, group by assignee for example
        * recently created issues report, show the issues created in the last 300 days
        * resolution time, average time to resolve a issue
        * single level group by report, retrieve all open issue 
        * time sheet report, hours not used in agile, only story points
        * time since issues report, shows the number of issues based on the created field on a given day
        * time tracking report, hours not used in agile only storey points
        * user workload report
        * version workload report, hours not used in agile onl story points
        * workload pie chart report
        
    + useful information to keep your project under control
- create your own reports
    + create any report you can think of (and JQL-it!)
    + create a filter, and save it
    + create a dashboard
    + add one of the gadgets
    + get the info you need!
    
# Conclusion of jira agile & scrum
- Conclusion of JIRA Agile & Scrum
    + JIRA agile for agile scrum development
    + maange your agile scrum project
    + using jira agile as your ally
    + manage your project vs. letting your project manage you
        * firefighter mode - avoid like the plague
        * fail to prepare, prepare to fail
    + project 
        * start by creating your project in jira
        * select type agile scrum
    + The team
    Committed
        * product owner, motivator what to do first
        * scrum master, get them commit to the performance
        * team members, 5 to 9 people, it is not fit for big team
    involved 
        * stakeholders, 
        * customers
        * executive team
        
    + requirements, user stories and epics
    create your backlog, when get enough requirements then you could get started
    
    + sprint planning meeting, product owner
        * prioritize, estimate and create sub tasks(every sprint..)
        * sprint goal
        * commit
        
    assign stories to team members
    
    + daily scrum
    time boxed 15 minutes
    communication & collaboration meeting
    scrum master moderates and removes impediments
    every attendee
        * yesterday
        * today?
        * impediment on your way?
        
- Tips
    + you may want to manage several teams in a single project
    + use parallel sprints
    + currently part of JIRA agile labs
    may disappear to or change
    JIRA AGILE Labs, parallel sprints
    
    + Issue not shown in columns
    a status not mapped is an issue not shown Board|Configure|Set column
    
    + Completing sprint with unfinished subtasks
    cannot complete a sprint if a sbu task is open but the parent task is resolved
    usually subtask to task other other people reopen parent and move everything to next sprint
    
    + sub-tasks not visible in plan mode
        * they are not visible
        * no way around it at this point 
        
    + jira agile configuration, project templates, enable projects, used for configuration
    
    + Epic migration
        * migrate old epic to new epics
    + keyboard shortcuts
- Extensibility 
    + marketplace
    + somebody might have already created what you need 
    + remote API
        * if not available or you want to build it yourself?
        * remote API-> suggest REST
        deprecated options also available 
        
    + plugin framework
        * what to build your own add-on?
        plugin framework
        * you can also post it to the marketplace!
    
    + jira source code
        * commercial users receive access to jira's source code
        * change, customize and redeploy
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    