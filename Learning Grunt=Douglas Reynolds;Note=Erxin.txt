Learning Grunt=Douglas Reynolds;Note=Erxin

# Preface
- what you need for this book 
any os 
text editor 
command line terminal 
node.js and angular.js basic knowledge 

- who this book is for, javascript developer
- conventions 
    + a blok of code is et 
    + command line input 
    + note/tip 
    
- feedback 
- customer support 
    + download example code 
    + errata 
    

# Chapter 1. Grunt Dependencies 
- Grunt is a javascript task runner 
- dependencies for grunt 
    + npm 
    + jsHint, runs javascript validation (lint) this runs code analyzes javascript for errors or syntax that has the potential be a bug 
    + uglify, this task minifies files by removing all excess characters from code without changing or breaking functionality of the code 
    + less, this is a task that compiles less files into css 
    + watch this responds to additions, changes and deletions of files by running preconfigured tasks if you wish to build your project or run lint on files every time the file is changed 
       
    + plugins maintained by grunt team 
    Official plugins are prefixed with contrib-, so the naming of plugins listed previously would be found as contrib-jshint, contrib-uglify, contrib-less, and contrib-watch a
    
    + common unofficial plugins 
    concurrent 
    newer, runs tasks on source files that have changed 
    open, opens urls and files from a task 
    notify, provides automatic desktop notifications 

- upgrading or installing node.js 
    + check version 
    $ node --version 
    
    + clean npm cache directory 
    $ npm cache clean -f 
    
    + upgrade nodejs with n module 
    $ sudo npm install -g n
    
    $ n state 
    will get the stable version, this is only works for linux 
    
    + upgrade on windows 
    $ npm cache clean 
    $ npm update -g 
    
- adding your installation path of node to path 
    + window 
    + linux 
    $ nano .bash_profile
    add PATH=$PATH:/usr/local/bin/

- install grunt 


# Chapter 2. Fundation for creating an app using Angular.js 
- grunt exists as the build system used in a project called yeoman 
http://yeoman.io/

- install git 
- creating the angular seed project 
- dependencies of angular seed 
git 
node.js 

- cloning the angular seed project to create a angular project structure 
$ git clone --depth=1 https://github.com/angular/angular-seed.git [Your Project Name]

    + install angular seed dependencies 
$npm install 

    + for mac may required isntall xcode developer tool 
$ xcode-select -install 

- running the seed app 
$ npm start 


# Chapter 3 all about grunt plugins 
- obtaining grunt plugins 
- plugins overview, http://gruntjs.com/plugins, officially maintained plugins are prefixed with contrib- and have the image of a star next to them

- install grunt plugin with npm 
$ npm install [package name] –save-dev

- other install options 
$ npm install [package name] --save
$ npm install [package name] --save-optional

- common grunt plugins and their purposes 
    + linting javascript contrib-jshint 
        * refer https://www.npmjs.com/package/grunt-contrib-jshint:
        $ grunt jshint 
        this lints javascript manually 
        
        * this plugin is aim to help with identifying potential problems 
        
        * install plugin 
        $ npm install grunt-contrib-jshint --save-dev
        
        * contrib-jshint plugin is jshint, any of the options available in jshint can be passed into contrib-jshint, refer http://jshint.com/docs/options/ 
        
        curly, this enforces that curly braces are used in code blocks 
        undef, ensures that all variable have been declared 
        maxparams, checks to make sure that the number of arguments in a method do not exceed a specificed amount 
        
        suppress warning by ignore_warning potion 
        
    + minifying javascript contrib-uglify https://www.npmjs.com/package/grunt-contrib-uglify
    $ npm install grunt-contrib-uglify --save-dev
    
    The contrib-uglify plugin is configured to process specific files as defined in the gruntfile.js configuration file. Additionally, contrib-uglify will have defined output destination files that will be created for the processed minified JavaScript.
    
    it also support revert minified code for debugging 
    
    reference package.json file in order get information 
    pkg: grunt.file.readJSON('package.json')
    This creates a pkg object whose properties are the contents of package.json. Once created, each property found in package.json can be accessed via the dot notation. 
    
    support wildcard match, such as **/*.js. This is useful when you want to minify all of the contents in a directory.
    
    + compile less, refer to https://www.npmjs.com/package/grunt-contrib-less 
    $ grunt less 
    compiles less to css manually 
    
        * install 
        $ npm install grunt-contrib-less –save-dev
        
        * config using path and file option 
        paths, directories that should be scanned 
        compress, compress output to remove whitespace 
        plugins, include additional plugins in the flow of processing 
        banner, the banner to use in the compiled destination files 











