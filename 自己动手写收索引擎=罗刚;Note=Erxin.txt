自己动手写收索引擎=罗刚;Note=Erxin

# 遍历搜索引擎技术
- environment
jdk 
tomcat 

modify tomcat memory usage ./catalina.sh
JAVA_OPTS=-Xmx600m

- 全文搜索管理 Lucene
https://lucene.apache.org/

- 搜索引擎语法
与 +, 空格, 查询词必须在搜索结果中
或 OR, |
非 - 

    + 限定在网页标题 intitle 
    + 特定网站 site
    + 限定在url inurl
    + 精确匹配 双引号和书名号
    
- 搜索引擎基本技术
    + spider
    robot.txt
    http://www.yourdomain.com/robots.txt

- nutch分布式处理, 0.8版本后命名为Hadoop
- 站内搜索三种实现方式
基于数据库
基于spider
Lucene
- 站内搜索技术
动态摘要
关键词飘红
图片缩略
同义词
相关性排序
- 桌面搜索
copernic Desktop search 
yahoo desktop search 
likasoft archivarius 3000
msn toolbar suite 
google desktop 


# 获得海量数据
- 初始URL -> todo 表 -> visited 表
              A            |
              |            |
              +--解析新URL--+

- BerkeleyDB, 嵌入式数据库
- RSS抓取
http://senews.sourceforege.net


# 提取文档中的文本内容
- HTML中提取, HTMLParser
- 查看网页的DOM结构
- NekoHTML, http://nekohtml.sourceforge.net/
- 网页去噪, 不同domain, 广告栏, 信息栏等, 多个网页的正文信息比对的方法把公共子串检测出来. 去掉一些DOM中的用户输入节点等

- 网页结构相似度计算, 字符串编辑距离和树编辑距离
    + 动态规划法计算树的编辑距离
    + 将网页变为线性的node组, 计算每个字符间的相似度
    + 一个元素节点E有三个组成部分, 记做TAG, Attr, Ss
- 网站风格树去除文档噪声, 为网站创建一个风格树, 创建一个DOM树
    + 发现网页的共同风格, 以便去除噪声
    + 风格树, 包含两种类型的节点. 一种代表布局或呈现风格(ES, n), 其中ES 事元素节点的一个序列, n是具有风格的网页的数量
    
    一种是元素节点E, 记做(TAG, Attr, Ss)
    TAG, 标签
    Attr, 是TAG的一套显示属性
    Ss, 是E下面的一套风格节点 
    风格树 SST 相同则只增加计数器n
    
    + 一个元素节点呈现风格越多, 它越重要, 实际元素节点具有分叉越多, 该元素越重要
    
    + 利用信息论(熵)衡量呈现风格的重要性
    + 节点重要性计算方法, SST对某个元素节点E
    
    NodeImp(E) = p_i * log_m (p_i)  if m > 1
                 1                  if m = 1
                 
    p_i 是E.Ss种网页使用第i个风格节点的可能性
     
    + 综合重要性计算方法, 叶子结点和非叶子节点应使用两种不同的计算方法
    
    内部元素节点E, 设L=IE.Ssl, E的综合重要性由CompImp(E) 表示
    CompImp(E) = (1-r^L)CompImp(E) + r^L * sigma_L_i=1(p_i * CompImp(S_i))
    p_i 是在E.Ss中E具有第i种子风格节点的可能性. 
    
- 正文提取
文字较多
URL较长
链接少

txt, pdf, word, excel etc

- 流媒体提取, 听觉范围60Hz ~ 20kHz, 语音大约分布在300Hz~4kHz, 数字化采样频率必须高于信号频率2倍才能恢复信号

- 自动语音识别ASR
- 基于关键字检索


# 中文分词
- Lucene种的中文分词
单子
二元覆盖

- 中文分词原理
机械匹配, 统计方法

- 查找词典算法
    + 数字搜索树, retrieve 树, 每个节点只保留一个字符
    + Trie树, 三叉搜索树, 每个节点一个字符但只有三个子分叉
- 最大频率分词方法, 基于条件概率
- 隐式马尔科夫模型, HMM词性标注


# 自然语言处理
- 语法解析树, 网页分词表示成基于词的特征向量, 按照词权值排序, 选取前n个特征值, 然后重新按照字符排序, 调用MD5算法
- 中文关键字提取, 网页种提取关键字
- 英文拼写检查, lucene StandardAnalysis 
- 中文拼写检查
- 自动摘要, 提取高频词, 内容拆分成句子, 取得高频词的前k个句子, 将句子按照文中出现的顺序排列

划分句子阶段, 段落中出现的位置, 在段落开始或结束出现的句子更有可能是关键句

Lucene中的动态摘要HighLighter

TokenStream 

- 自动分类, SVM, K最近的邻居, 贝叶斯, 中心向量法, 自动分类接口
- 自动聚类, k均值聚类
- 拼音转换, unicode 顺序对照map
- 语义搜索


# 创建索引库
- Lucene索引库

# 用户界面

# 其他高级主题
- solr实现分布式搜索
- 图像ocr识别








