AngularJS online document;Note=Erxin

# Tutorial
- download the angular-phonecat project 
$ git clone --depth=16 https://github.com/angular/angular-phonecat.git

navigate to the downloaded git folder  and use 
$ npm install
to install all the dependencies 
bower 
http-server 
karma 
protracter, end to end test runner 

    + other useful npm command during the development 

    npm start: Start a local development web server.
    npm test: Start the Karma unit test runner.
    npm run protractor: Run the Protractor end-to-end (E2E) tests.
    npm run update-webdriver: Install the drivers needed by Protractor.

- install helper tools 
$ sudo npm install -g bower

- run the development web server 
$ npm start

- run unit test 
$ npm test 
the phonecat project is configured use karma to un the unit test 

    + karma, https://karma-runner.github.io/1.0/index.html

- run e2e test, to ensure that the application as a whole operates as expected, e2e test is designed to test the whole client-side application. it make this by simulating real user interaction with the real application 

in the e2e-test directory, we could protractor to run 
$ npm run update-webdriver
protracter use webdriver api to drive the browser 

first we need start web server 
$ npm start 

run the test 
$ npm run protracter

    + protracter, https://github.com/angular/protractor
    
- common issues
    + firewall, we could force use https in git with 
    $ git config --global url."https://".insteadOf git://

    + updating webdriver takes too long, ctrl+c and install again 
    
    + protracter dependencies, it use selenium standalone server which requires java development kit 
    
    
# Tutorial - Bootstrapping 
- checkout the step 0 code in the clone phonecat directory 
$ git checkout -f step-0
    
- start developer server and navigate to http://localhost:8000/index.html.
$ npm start 

- ng-app attribute, represents a angular directive named ngApp, angular use kebab-case for its custom attributes nad camlCase for the corresponding directives which implement them. ng-app is the root element of an angular application 

    + the content of app/index.html 
<!doctype html>
<html lang="en" ng-app>
  <head>
    <meta charset="utf-8">
    <title>My HTML File</title>
    <link rel="stylesheet" href="bower_components/bootstrap/dist/css/bootstrap.css" />
    <script src="bower_components/angular/angular.js"></script>
  </head>
  <body>

    <p>Nothing here {{'yet' + '!'}}</p>

  </body>
</html>

    + for more information could check the bootstrap section of developer guide, https://docs.angularjs.org/guide/bootstrap
    
    + double curly binding with an expression, Nothing here {{'yet' + '!'}}, https://docs.angularjs.org/guide/expression, angular expression is javascript like code snippets, that are evaluated by angular in the context of the current mode scope 
    
- bootstrapping angular applications, there are three things happen during the bootstrap phase 
    + inject the dependency 
    + create root scope that will become the context for the model of an angular application 
    + compile the DOM starting at the ngApp root element 
    
after app is bootstrapped it will wait for incomming browser events, angular will reflect them in the view by updating all of the affected bindings 

- what are all these files in the phonecat working directory 
    + most of the files comes from the angular-seed project, https://github.com/angular/angular-seed
    + addtional modification for the phonecat 
    remove example app 
    removed unused dependencies 
    added phone images to app/img/phones 
    added phone data files (JSON) to app/phones/
    added a dependency on bootstrap in the bower.json file 
    
- experiements 
    + adding a new expression 
    <p>1+2={{1+2}}</p>
    

# Tutorial- Static template 
- app/index.html, the static content will be treat as static template 
<ul>
  <li>
    <span>Nexus S</span>
    <p>
      Fast just got faster with Nexus S.
    </p>
  </li>
  <li>
    <span>Motorola XOOM™ with Wi-Fi</span>
    <p>
      The Next, Next Generation tablet.
    </p>
  </li>
</ul>

# tutorial angular templates 
- view is a projection of the model through the html template 
<html ng-app="phonecatApp">
<head>
  ...
  <script src="bower_components/angular/angular.js"></script>
  <script src="app.js"></script>
</head>
<body ng-controller="PhoneListController">

  <ul>
    <li ng-repeat="phone in phones">
      <span>{{phone.name}}</span>
      <p>{{phone.snippet}}</p>
    </li>
  </ul>

</body>
</html>

- ngRepeat directive and two angular expressions 
- ngController which attaches a PhoneListController to the <body> tag 
- model and controller, the controller is simply a constructor function that takes a $scope parameter 
// Define the `phonecatApp` module
var phonecatApp = angular.module('phonecatApp', []);

// Define the `PhoneListController` controller on the `phonecatApp` module
phonecatApp.controller('PhoneListController', function PhoneListController($scope) {
  $scope.phones = [
    {
      name: 'Nexus S',
      snippet: 'Fast just got faster with Nexus S.'
    }, {
      name: 'Motorola XOOM™ with Wi-Fi',
      snippet: 'The Next, Next Generation tablet.'
    }, {
      name: 'MOTOROLA XOOM™',
      snippet: 'The Next, Next Generation tablet.'
    }
  ];
});

- scope can be seen as the glue which allows the template mode and controller to work together 
    + all the scope of the app controllers  are inherit from the root of the app 
    
    + the sub controller or repeater will inherit from their parent scope 
    
- testing 








# Developer Guide 
- 

# API Reference 
-

# Contributing to AngularJS
- 