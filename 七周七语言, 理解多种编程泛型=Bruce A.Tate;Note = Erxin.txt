七周七语言, 理解多种编程泛型=Bruce A.Tate;Note = Erxin

## 简介
- 语言的类型模型, 强类型(java), 弱类型(C), 静态类型(Java), 动态类型(Ruby)
- 语法糖, 由英国计算机科学家Peter Landin先提出, 对语言本身无实质影响, 但是会为程序员提供便利
- 语言的编程泛型, 面向对象(object-oriented, oo), 函数式, 过程式或是综合体
    * 逻辑编程语言, Prolog
    * 面向对象, Ruby, Scala
    * 多泛型, Scala
    * 函数式, Scala, Erlang, Clojure, Haskell
    * 原型语言, Io, Javascript, Lua, Self
    * 多方法, Clojure
- 怎样和语言交互
- 语言的判断结构, decision construction和核心数据结构
- 语言的核心特性
- 本书涵盖语言
    * ruby, 简单易读
    * Io, 最简语法, 并发结构, 分发结构
    * Prolog, Erlang的启发语言
    * Scala, 运行于Java虚拟机上的新一代语言
    * Erlang, 并发, 分布式编程, 容错表现优异, CouchDB基于云的数据库, 选择了Erlang
    * Clojure, 一门Java虚拟机语言, 针对并发编程的, 相对于Lisp少了好多括号
    * Haskell, 纯函数式编程语言
    
## Ruby
- 下载地址
http://www.ruby-lang.org/en/downloads
- 特点
    * 解释执行
    * 变量无需事先声明
    * 每行代码都有返回值
- 原型语言用对象而不是用类来作为定义对象甚至继承的基础
- ruby中一切皆为对象, 都可以用.来调用对象具有的方法和属性
- 对象, 并非指面向对象语言中的对象, 而是泛指编程语言中的类型, 一等对象应具有以下几个性质
    * 可存储于变量或数据结构中
    * 可作为参数传递给函数
    * 可作为返回值从函数返回
    * 可运行时创建
    * ex.
    C++中的对象, 就是一等对象
- 判断语句
    * 逻辑操作符同C
    * if, unless, 允许在一行中
    if condition
        ...
    end
    expression if condition
    * 假的情况
    false, nil, 其他值均为真
    * 与或非, 可以是英文也可以是符号
    and, or, not, &&, ||, !
    强制执行整个逻辑表达式的与或非格式
    &, |
- 运行编译, 只有执行到错误代码时才会抛出异常
- 面向对象设计思想
对接口编程, 不对实现编程, 是依赖反转的一种应用, dependency inversion principle
- 定义函数
def function_name
    ...
end
- 数组同python
- 散列, 同python字典, 有额外的定义key的方法
    dic = {:key_symbol => value}
    dic = {key =>value}
    dic[:key_symbol]
    dic[key]
- 代码块, 没有名字的函数, 可以作为参数传递给函数或方法
3.times {puts 'hello'}   
括号为代码块
&{}, 将代码块作为闭包传递给函数
- 扩展已有类
class alreadHaveClassName
    def function_name
        ...
    end
end
- 惯例和规则
    * 类以大写字母开头, 一般采用骆驼命名
    * 实例变量前加@
    * 类变量前加@@
    * 实例变量和方法名以小写字母开头, 并使用下划线命名法
    * 常量全大写
    * 逻辑测试的函数方法名都加问号
    * attr关键字可以用来定义实例变量, attr_accessor
- 模块, 对应于接口, 类中可以引用任何模块在增加功能, ruby中的模块式已经实现的接口
module ModuleName
    def some_function
    end
    ...
end
class SomeClass
    import ModuleName
    attr_accessor:name
    def initialize(name)
        @name = name
    end
end
o = SomeClass
o.some_function
- 模块, 可枚举和集合, ruby含有两个重要的mixin
    * 枚举, enumerable, 类必须实现each方法
    * 可比较, comparable, 必须实现<=>操作符, a<=>b, 若a > b = 1, a = b = 0, a < b = -1
    * 集合方法
    o.any? {|value| condition}, 
    o.all?{|value| conditoin}, 
    o.inject([first_recursion_value]){|previous_result, cur_value| ...}
- 元编程, metaprogramming, 写能写程序的程序
- ruby中的类为开放类, 所有的类均可以写扩展, 包含固有类如nil, string等
    * 重写ruby的 method_missing方法来实现特殊功能
- 运行中定义方法
define_method 'name' do
    ...
end
- 动态扩展类
任何模块可以动态include 到类从, 从而对类实现方法的扩充, 不需要的时候也不会加载
- 应用
    * 脚本语言, 快速开发网络应用, rails
    * 不足之处
        + 效率
        + 并发处理
        + 类型安全

## Io
- 下载地址
http://iolanguage.org



    
    
    
    
    
    
    
    
    
    
    
    
    




