租用与预约系统成为Coot,其中给客户提供Internet服务的部分成为iCoot

面向对象编程oop, object-oriented programming

对象的相同与相等
约翰和史密斯拥有同一只猫， 相等==
约翰和史密斯拥有同样数目的猫， 相同equals

对象的，名称，属性，操作

封装

关联，关联是弱链接，例如一个车里的所有乘客，当乘客下车这种关联就消失了
聚合，把一些类合并到一起来合成一个大的整体，强链接
图，与树用关联与聚合表示

链接与可导性

消息，对象间具有链接时才可以互相发送消息

消息对应的启动操作

只能指针与垃圾收集器

类class， 对象为每一个类的实例 instance. 一些常用的类关系名词， 一般化/具体化，父类/子类， 超类/子类，基类/派生类
类所有对象的共享操作static关键字

层次话设计继承，抽象类，类的名称用斜体表示或者用花括号括起来

重定义方法，类的继承后方法不同 

子类应该是超类的扩展

类型系统，为了禁止变量误用值

多态性ploymorphism, 动态绑定

多态规则，抽象级别越高，代码可重用性就越高

类型转换

软件开发阶段，需求，分析，设计，规范，实现，测试，部署，维护

软件开发方法，瀑布开发，螺旋方法，合并递增

开发工具要求，可跟踪性，修改历史，多用户的访问控制，减少冗余，一致性检查，互联网操作，开发过程中测试以做出来的产品

UML的13种类型图
1. 用例图，对系统的使用方式分类，人或对象与系统的交互
2. 类图显示，用于显示类之间的关系
3. 对象图，只显示对象之间的相互关系，用例开始与参与者
4. 活动图，显示人或对象的和它们的关系
5. 状态机，显示生命周期，用于显示比较复杂的对象的各种状态
6. 通信图，显示某种情形下对象之间发送的消息
7. 顺序图，类似于通信图，但强调信息的发送顺序
8. 包图，用于显示类之间的组合关系
9. 部署图， 显示安装已完成系统的机器
10. 组件图，显示可重用的组件及其接口
11. 交互总图，顺序显示活动的各个步骤
12. 时间图， 显示消息和对象状态的准确时间限制
13. 复合结构图，显示聚合中对象的相互关系，显示接口和协作的对象

UML的对象约束语言(Object Constraint Language, OCL)

业务模型，常用用例图来表示

编写项目术语表

系统用例模型包括
参与者表（带描述），用例列表（带描述），用例图，用例细节，用例调查，辅助需求，用户界面草图，改进的术语表，用例的优先级

前提条件，后置条件和继承，辅助需求

系统用例的优先级
绿色，要在当前递增开发中实现
黄色(amber),在当前开发过程中是可选的
红色，及时时间允许也不在当前的开发过程中

系统分析过程步骤
根据系统需求模型建立类图
标明类图之间关系
确定类的属性
检查系统用例
需要时更新术语表和非功能需求
一般情况下不给客户展示系统通信图

关系之间的数值，数值n表示个数，*表示无限，0..1是可选的意思，例如0

属性

动态分析
确定系统类图完整性，可实现性，验证用户界面功能

一般系统设计过程
选择系统拓扑
选择使用的技术
设计并发策略
设计安全策略
选择子系统部分
决定机器子系统间的通信

普通互联网的3层体系结构
客户机，服务器，到大型数据服务器
可以产用客户机服务器结构或者分布式结构

网络协议技术
IMAP（电子邮件）
AIM(AOL即时消息传送）
NNTP(USENET新闻）
HTTP(/CGI(HTML窗体））
FTP传输协议
TELNET远程登录
通用协议
TCP/IP
JRMP, 用于JAVA对JAVA的通信
IIOP，用于CORBA通信

RMI注册表查找机制，远程方法调用，通过网络给其他JAVA对象发送JAVA对象只要安装了JAVA 2或者J2SE或J2EE就可以使用

身份验证
JAVA的签署J2EE的一部分和Microsoft.Net.Passport, Liberty Alliance两种

XML数据

SOAP简单对象访问协议

HTML和CGI小程序，用于做界面

CORBA公用对象请求代理程序体系结构 Common Object Request Broker Architecture

EJB, Enterprise Java Beans(EJB) J2EE的一部分

子系统设计需要吧概念和分析模型实体化

关系模型

常用的可重用设计模式
观察期模式
单一模式,只为一个对象提供全局接口
门面模式,为系统中所一组接口提供统一接口
适配器模式,把一个类的接口转换为另一个客户机的接口
轻次级模式
复合模式
代理模式,提供占位符或者带来来对对象加以控制

接口测试

不间断测试

alpha测试，系统正在运行的一项工作
beta测试，系统全部开发完成后的，是由最终用户进行测试
用例测试，组件测试

测试驱动的开发
测试框架SUnit, JAVA 称为 JUnit, C++称为CPPUnit
每个对象所有测试案例放在一个测试套中分层测试
相当于教科书编排各个类的功能属性测试代码

UML实例，商店汽车自动化条形码
1.列出参与者列表
2.用例列表（需要测试多个用户）
3.用例通信图
4.用例活动图
5.用例细节图
6.系统需求，用户界面草图，参与者列表，用例列表
7.用例图
8.用例调查
9.用例细节
10.辅助需求
11.用例的优先级
12.分析
13.类图，属性，操作列表
14.预约的状态机，用例的实现
15.系统设计，选择技术，层图，包，部署图
16.安全策略
17.并发策略
18.子系统设计
19.消息列表
20.用户界面设计
期间需要一定的非代码测试，与顾客专家等进行功能的沟通
21.说明文档测试
22.列术语表




