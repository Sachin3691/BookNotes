Microsoft SQL Server 2008 技术内幕 T-SQL = ltzik Ben-Gan; Note = eshang

SQL执行顺序，是从FROM 开始执行，并且每一步都会生成续表，生成的最后续表作为结果返回给用户
FROM->笛卡尔积->ON 筛选器->添加外部执行 OUTER JOIN-> Where -> group by-> having-> select -> 计算表达式 -> distinct -> top -> order by

使用表名的索引来查询表是否存在
 object_id( tableName )

筛选器，在查询中可以指定三种筛选器On, where , having
on筛选器中的谓词可以作用于上一步生成的虚表的所有行

select 列表中的别名不能在前面的步骤或者在同一个级别的select 中使用，只能在后续的语句中使用，因为是并行处理的
表内的运算操作可以认为是同时进行的，例如交换两列的值的时候可以直接使用
update tableName set c1 = c2, c2 = c1
而不需要中间变量，可以认为操作是瞬间同时发生的
；
distinct 放于select开头来删除重复的行

from子句在TSQL中支持的运算，JOIN, APPLY, PIVOT, UNPIVOT, 后三种为TSQL特有的
... from <left_table> [cross|outer] apply <right_table>
；
所有运算符都会使用虚表作为左输入
；
APPLY， 把右表表达式应用于左输入的每一行，右表达式可以引用左输入的列
三种操作
CROSS APPLY, OUTER APPLY, 类似于JOIN的两种操作
;
PIVOT，用于在列和行之间对数据进行旋转或透视转换，同时进行聚合运算
;
unpivot

Over 子句，用于两个逻辑阶段，SELECT阶段， ORDER BY 阶段；作用是可以访问为响应逻辑阶段输入的任何虚拟表

集合运算符, union all, union, except, intersect
集合运算符对两个输入中的行进行比较
UNION ALL, 返回包含两个输入中所有行的结果
UNION, 返回由两个输入的不同行组成的结果集
EXCEPT， 返回在第一个输入中出现，但在第二个输入中出现的不同行
INTERSECT， 返回留在两个输入中都出现过的不同行
涉及集合运算的查询中不允许使用ORDER BY

自然语言描述到数学表示转换
集合、严格定义、数字、上下文、函数、参数、变量、处理、论域

罗素集合悖论，所有集合分为奇异集合与非奇异集合，是否包含自身的，所有非奇异集合组成的集合属于那种集合？
；
有序的全集，笛卡尔积
；
说明了指明全集非常重要

剪刀石头布的集合的优先级是由运算符定义的，这样由运算符生成的集合排序不是严格的，对于这个例子是一个循环

重复度函数，Multiplicity Function告知一个元素在集合B中有多少重复的个数

排中律，要求每个格式良好的命题或者为真，或者为假，是反证法的基础

逻辑蕴含，若果P那么Q
(P->Q) <=> ( ^P v Q )
P	Q	P->Q
0	0	1
0	1	1	;称为空真
1	0	0
1	1	1

T-SQL支持三值逻辑，TRUE, FALSE, UNKNOWN

关系模型
数据模型(data model)或架构(schema)
关系数据库系统(RDBMS)
；
视图, view，虚拟关系
行集, rowset
真实关系与虚拟关系应该是可交换的
;
命名使用，谓词-命题

对象-角色建模
Terry Halpin, Information Modeling and Relational Database, 书，对象建模
;
范式
第一范式，表的所有列都是原子的，不允许出现多值列
第二范式，每个非建列必须函数依赖于整个键
第三范式，每个非键列必须不能传递依赖于任何键
Boyce-Codd范式，要求每个决定性因素必须是键
第四范式，不允许有非平凡且非函数依赖的多值依赖
第五范式，联结依赖，联结依赖是多值依赖的推广，如果一个表的每个非平凡的联结依赖均由它的键所蕴含
域键范式，DKNF，domain-key normal form
;
正交设计原则
A,B是数据库的两个基关系，不存在无损分解，将A，B分为A1，A2..., B1，B2...（相互独立）使得在Am中的某些投影Ai在Bn投影Bj有重叠的含义

Merge 用于合并数据










