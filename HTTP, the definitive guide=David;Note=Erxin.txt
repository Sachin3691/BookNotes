HTTP, the definitive guide=David;Note=Erxin

# Introduction 
- reference 
https://learning.oreilly.com/library/view/http-the-definitive/1565925092/

# PartI. HTTP. The web's foundation 
- Resource, Web servers host web resources . A web resource is the source of web content. 
- Media types, HTTP carefully tags each object being transported through the Webwith a data format label called a MIME type. MIME (Multipurpose Internet MailExtensions). It is a textual label such as 

text/html 
text/plain 
image/jpeg
image/gif 
video/quicktime 
application/vnd.ms-powerpoint 

https://learning.oreilly.com/library/view/http-the-definitive/1565925092/apd.html

URI, HTTP can retrieve the object. URIs come in two flavors, called URLs and URNs

- URIs, uniform resourceidentifier

- URLs, The uniform resource locator (URL) is the mostcommon form of resource identifier. 

- URNs, uniform resource name, or URN. A URN serves as aunique name for a particular piece of content, independent of wherethe resource currently resides.

urn:ietf:rfc:2141

currently urn is experimental

- transactions, An HTTP transaction consists of a request command (sent from client toserver), and a response result (sent from the server back to the client).

- methods 
GET, send named resource from the server to the client 
PUT, store data from client into a named server resource 
DELETE, delete the named resource from a server 
POST, send client data into a server gateway application 
HEAD, send just the HTTP headers from the response for the named resource 

- status codes 
200, OK
302, redirect 
404, not found 

- messages, consist of three parsts 

    + start line, the start line indicating what to do or happend for request and response 
    + header fields, separated by colon for easy parsing 
    + body, optional message body containing any kinds of data. 
    
- simple message example 

HTTP/1.0 200 OK
-------------------------
Date: Sun, xxx GMT 
Server:Apache/1.3.11 BSafe-SSL/1.38 (Unix)
Last-modified:Tue, 04 
Content-length:403 
Content-type:text/html 
-------------------------
<HTML>
<HEAD><TITLE>Joe's tools</TITLE></HEAD>
<BODY>
    ...
</BODY>
</HTML>

- connections 
    + TCP/IP, HTTP is an application layer protocol. HTTP doesn’tworry about the nitty-gritty details of network communication; in  Internettransport protocol, TCP/IP is choosen for network communication. It provides 
    
Error-free data transportation

In-order delivery (data will always arrive in the order in which it was sent)

Unsegmented data stream (can dribble out data in any size at any time)

    + network protocol stacks 
HTTP
TCP
IP
Network-sepcific link interface
Physical network hardware 

- conntions, IP addresses and port numbers. before HTTP connection, TCP need to establish the connection with IP and port

    1. browser extract server's host name from URL 
    2. browser converts the hostname into server's IP 
    3. browser extract the port number 
    4. browser establish a TCP connection 
    5. browser sends an HTTP request 
    6. the server send the response back 
    7. the connecton closed 

- using telnet, The Telnet utility connects your keyboard to a destination TCP portand connects the TCP port output back to your display screen.

it can generally connect to any TCP server including HTTP servers 

    + And automated Telnetscripting is no fun at all. For a more flexible tool, you might wantto check out nc (netcat). Thenc tool lets you easily manipulate and script UDP-and TCP-based traffic
    
    http://www.bgw.org/tutorials/utilities/nc.php

- protocol versions 

HTTP/0.9, The 1991 prototype version of HTTP is known asHTTP/0.9. Thisprotocol contains many serious design flaws

HTTP/1.0, 1.0 was the first version of HTTP that was widely deployed.HTTP/1.0 addedversion numbers, HTTP headers, additional methods, and multimediaobject handling.

HTTP/1.0+Many popular webclients and servers rapidly added features to HTTP in the mid-1990sto meet the demands of a rapidly expanding

HTTP/1.1HTTP/1.1 focused oncorrecting architectural flaws in the design of HTTP, specifyingsemantics, introducing significant performance optimizations

HTTP-NG (a.k.a. HTTP/2.0)HTTP-NG is aprototype proposal for an architectural successor to HTTP/1.1 thatfocuses on significant performance optimizations

- architectural components of web 

Proxies, intermediaries sit between client and server 

Caches 

Gateways, special web servers taht connect to other applications 

Tunnels, special proxies that blindly forward http communications

agents, semi-intelligent web clients 

- references 
http://www.w3.org/Protocols/

http://www.ietf.org/rfc/rfc2616.txt, RFC 2616

http://www.ietf.org/rfc/rfc1945.txt, RFC 1945, “Hypertext TransferProtocol—HTTP/1.0,” is an informational RFCthat describes the modern foundation for HTTP.

http://www.w3.org/Protocols/WhyHTTP.html

http://www.w3.org/DesignIssues/Architecture.html

http://www.wrec.org/Drafts/draft-ietf-wrec-taxonomy-06.txtm Internet Web Replication andCaching Taxonomy


# URL and resources 
- 








