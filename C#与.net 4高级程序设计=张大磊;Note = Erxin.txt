C#与.net 4高级程序设计=张大磊;Note = Erxin

:.net之前
>c, win api
>c++, mfc
>vb 6.0, 类不能继承, 不支持参数化构造函数, 不能直接开发多线程, 只能调用win api
>java, 对其他语言的支持一般, 对本地os调用受限
>com, component object model, 可复用的二进制模块, 二进制大对象称为COM服务器. 不能继承
优点, 位置透明, 系统注册, 程序标示符appid, 存根stub, 代理proxy
支持com框架, ATL(active template library, 活动模板库), 提供了简化创建com服务器的模板c++类
dll hell, 组件注册, dll部署问题
com编程式一种非对称的编程, 由于不同语言类型之间的二进制序列不同引起
>.net framework
	- 对已有代码的完全互操作性
	- 支持多语言
	- 公共语言运行时
	- 全面的语言继承, 支持跨语言的继承, 异常和代码调试
	- 全面的基础类库, 支持win api和一致的对象模型
	- 不关注COM底层操作, IClassFactory, IUnkown, IDispatch, IDL
	- 简化的部署模型, 允许多个dll版本共存
>.net 平台构造块, CLR, CTS, CLS
	- CLR, 运行库层, 定位, 加载和管理.net类型, 内存管理, 应用托管, 处理线程, 安全检查
	- CTS, 公共类型系统, 描述了CLR支持的所有可能数据类型和编程结构, 指定了实体之间如何交互
	- CLS, 公共语言规范, 一种特定的.net语言可能不支持所有的CTS, 在CLS中定义
	- 在.net运行库上运行的程序集assembly称为托管代码, 不能运行的位非托管代码
>jitter 编译器将CIL指令编译为响应机械代码. 工具ngen.exe可以提高图形界面运行效率
>CTS具有五种类型, 类型系统
类, 结构, 枚举, 接口, 委托
>公共运行库
mscoree.dll, 执行引擎
mscorlib.dll, 基础类库
>.net 命名空间
	- system
	- system.collections
	- system.collections.generic
	- system.data, ado.net 与数据库交互
		* system.data.common
		* system.data.entityClient
		* system.data.sqlclient
	- system.io
		* system.io.compression
		* system.io.ports
	- system.reflection
	- system.runtime.interopServices, 提供与非托管代码的交互
	- system.drawing
	- system.windows, wpf工具包
	- system.windows.form
	- system.windows.controls
	- system.shapes
	- system.linq
	- system.xml.linq
	- system.data.dataSetExtensions
	- system.web, asp.net, web应用程序
	- system.servicemodel, wcf service
	- system.workflow.runtime
	- system.workflow.activities
	- system.threading, 分担应用程序, 将工作分配到多个CPU上
	- system.threading.tasks
	- system.security, 加密, 权限问题
	- system.xml
>.net client profile运行时, 在安装时提供对.net运行环境的打包, 可以从微软下载dotNetfx40_full_x86.exe
>开源.net版本
mono-project.com
dotgnu.com
>c#响应文件, *.rsp, 后面的文件会覆盖前面文件的设置
>免费IDE
	- notepad++
	- sharpdevelopment
	- visual c# express
>visual studio 2010支持的重构
	- 提取方法, extract method
	- 封装字段, encapsulate field
	- reorder parameters, 重排参数
	- 去除参数, remove parameters
	- rename
>visual studio 2010
	- 可视化类编辑器, class designer, 插入view class diagram
	- mdd, model driven development, 模型驱动开发

:c#核心编程结构
>在window操作系统上, 程序返回值保存在%ERRORLEVEL%系统环境变量中
>C#中可以从system.diagnostics.process.exitCode获取%ERRORLEVEL%
>system.environment类















