jQuery mobile web development essentials=Raymond camden;Note=Erxin

# Preface 
# Preparing your first jquery mobile project 
- provide a way to turn regular html and css into mobile-friendly sites. you can take a regular html page add in the required bits for jquery mobile and find your page transformed into a mobile-friendly version instantly 
- how to get help 
doc, http://jquerymobile.com/demos/
forum, http://forum.jquery.com/jquery-mobile/

# Preparing your first jquery mobile project 
- create a html page 
<h1>welcome</h1>
<p>...</p>
<p>
    <i> copy right megacorp&cpy</i>
</p>
- content delivery network (cdn)
    + download maually http://jquerymobile.com/download 
    
- customized downloads, http://jquerymobile.com/download-builder 
- implementing jquery mobile 
    + first add the html5 doctype to the page 
    <!DOCTYPE html>
    
    + add a view port metatag 
    <metaname="viewport" content="width=device-width,initial-scale="1">
    
    + finally the css javascript library and jquery itself need to be included into the file 
<!DOCTYPE html/>

<html>
    <head>
        <title>First Mobile Example</title>
        <meta name="viewport" content="width=device-width, initialscale=1">
            <link rel="stylesheet"href="jquery.mobile-1.3.2.min.css" />
            <script type="text/javascript"
src="http://code.jquery.com/jquery-1.9.1.min.js"/>
            <script type="text/javascript"src="jquery.mobile-
1.3.2.min.js"/>
        </head>
        <body>
            <h1>Welcome</h1>
            <p>
Welcome to our first mobile web site. It's going to be the best
site you've ever seen. Once we get some content. And a
business
plan. But the hard part is done!
            </p>
            <p>
                <i>Copyright Megacorp&copy; 2013</i>
            </p>
        </body>
    </html>

the text size of the page will be changed when load in mobile device 

- working with data attributes , html5 introduced the concept of data attributes as a way to add ad-hoc values to the dom 
<div id="mainDiv" data-ray="moo">some content</div>

- in jquery mobile the data attribute is used to define the page roles
<div data-role="page">
    <div data-role="header"><h1>Welcome</h1></div>
    <div data-role="content">
        <p>
Welcome to our first mobile web site. It's going to be the
best site you've ever seen. Once we get some content. And
a business plan. But the hard part is done!
        </p>
    </div>
    <div data-role="footer">
        <h4>Copyright Megacorp&copy; 2013</h4>
    </div>
</div>

these data-* attributes means nothing to the web browser it self


# Woking with jQuery mobile pages 
- adding mutiple pages to one file by adding another <div data-role="page"> in jquery mobile 
<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initialscale=1">
            <title>Multi Page Example</title>
            <link rel="stylesheet"
href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-
1.3.2.min.css" />
            <script src="http://code.jquery.com/jquery-
1.9.1.min.js"></script>
            <script.src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-
1.3.2.min.js"></script>
        </head>
        <body>
            <div data-role="page" id="homePage">
                <div data-role="header"><h1>Welcome</h1></div>
                <div data-role="content">
                    <p>
Welcome to our first mobile web site. It's going to be the
best site you've ever seen. Once we get some content. And
a business plan. But the hard part is done!
                    </p>
                    <p>
You can also <a href="#aboutPage">learn more</a> about
Megacorp.
                    </p>
                </div>
                <div data-role="footer">
                    <h4>Copyright Megacorp &copy; 2013</h4>
                </div>
            </div>
            <div data-role="page" id="aboutPage">
                <div data-role="header"><h1>About Megacorp</h1></div>
                <div data-role="content">
                    <p>
This text talks about Megacorp and how interesting it is.
Most likely though you want to
                        <a href="#homePage">return</a> to the home page.
                    </p>
                </div>
                <div data-role="footer">
                    <h4>Copyright Megacorp &copy; 2013/h4>
                    </div>
                </div>
            </body>
        </html>

- jquery mobile, links and you, when encounters a simple link <a href="something.html">foo</a> it will automatically capture any clicks on that link and change it to an ajax based load 

<a href="foo.html" data-ajax="false">normal</a>

- working with multiple files, jquery mobile is going to use ajax to load in your addtional pages 

- jquery mobile and urls 
current link 
http://localhost/mobile/test.html 

after click link url changed to 
http://localhost/mobile/products.html 

the framework uses history.pushState and history.replaceState in browsers that support it 
The products link, when viewed in an older Internet Explorer, looks like the following:
http://localhost/mobile/c2/test2.html#/mobile/c2/products.html

suggest include necessary js library and css in all your files 

- addtional customizatio 
    + page titles, data-title 
    
    <div data-role="page" id="aboutPage" data-title="all about megacorp">
    </div>
    
- prefetching content, use attribute data-prefetch="true"

- chaning page transitions, data-transition attribute, configure the transitions jquery mobile 

valid transition include, fade, flip, flow, pop, slide, slidedown, slidefade, turn and none 


# Enhancing pages with headers, footers and toolbars 
- a header can be defined by simply using a div with the appropriate role 
<div data-role="header"><h1>my header</h1></div>

<div data-role="header">
    <a href="index.html">Home</a>
    <h1>My Header</h1>
    <a href="contact.html">Contact</a>
</div>

- icon sneak peak, in jquery mobile is the ability to specify an icon 
<div data-role="header">
    <a href="index.html" data-icon="home">Home</a>
    <h1>My Header</h1>
    <a href="contact.html" data-icon="info">Contact</a>
</div>

- working with back buttons 

data-add-back-btn="true" and data-rel="back"

jquery mobile will detect this link and automatically send the user to the previous page 

<div data-role="page">
    <div data-role="header">
        <h1>My Header</h1>
    </div>
    <div data-role="content">
        <p>
            <a href="#subpage">Go to the sub page...</a>
        </p>
    </div>
</div>

- working with footers, data-footer 
- creating fixed and full-screen headers and footers 
- working with navigation bars 
<div data-role="header">
    <h1>Home</h1>
    <div data-role="navbar">
        <ul>
            <li>
                <a href=" header_and_footer_with_navbar.html" class="ui-btnactive">Home</a>
            </li>
            <li>
                <a href=" header_and_footer_with_navbar_credits.html"
>Credits</a>
            </li>
            <li>
                <a href=" header_and_footer_with_navbar_contact.html"
>Contact</a>
            </li>
        </ul>
    </div>
</div>

- persisting navigation bar footers across multiple pages, use the persistent footer features. footer div must be present on all pages, footer div must use the same data-id vale. you must use two css classes ui-state-perssite and ui-btn-active 

<div data-role="footer" data-position="fixed" data-id="footernav">
    <div data-role="navbar">
        <ul>
            <li>
                <a href="persistent_footer_index.html" class="ui-btnactive ui-state-persist">Home</a>
            </li>
            <li>
                <a
href="persistent_footer_credits.html">Credits</a>
            </li>
            <li>
                <a
href="persistent_footer_contact.html">Contact</a>
            </li>
        </ul>
    </div>
</div>


# Workig with lists 
- create lists 
<div data-role="content"/>
<ul>
    <li> a</li>
    <li> b</li>
</ul>
</div>

we could use a listview data-* attribute to make it feels better 

- add archive tag into the list then jquery mobile will add right arrow to each of the list items 

<ul data-role="listview">
    <li>
        <a href="ray.html">Raymond Camden</a>
    </li>
    <li>
        <a href="scott.html">Scott Stroz</a>
    </li>
    <li>
        <a href="todd.html">Todd Sharp</a>
    </li>
    <li>
        <a href="dave.html">Dave Ferguson</a>
    </li>
</ul>

- working with list features , make list turn to insert lists 
<ul data-role="listview" data-inset="true">
    <li>Raymond Camden</li>
    <li>Scott Stroz</li>
    <li>Todd Sharp</li>
    <li>Dave Ferguson</li>
</ul>

- creating list dividers, adding a list divider is as simple as adding a li tag that makes use of data-role="list-divider"
<ul data-role="listview" data-inset="true">
    <li data-role="list-divider">Active</li>
    <li>Raymond Camden</li>
    <li>Scott Stroz</li>
    <li>Todd Sharp</li>
    <li data-role="list-divider">Archived</li>
    <li>Dave Ferguson</li>
</ul>

- autodividers, adding data-autodividers="true"
- creating lists with count bubbles, which is commonly used for e-mail-style interfaces 
<ul data-role="listview" data-inset="true">
    <li data-role="list-divider">Cookies Eaten</li>
    <li>Raymond Camden <span class="ui-li-count">9</span>
    </li>
    <li>Scott Stroz <span class="ui-li-count">4</span>
    </li>
    <li>Todd Sharp <span class="ui-li-count">13</span>
    </li>
    <li>Dave Ferguson <span class="ui-li-count">8</span>
    </li>
</ul>

- using thumbnails and icons 
<ul data-role="listview" data-inset="true">
    <li>
        <a href="ray.html">
            <img src="ray.png"> Raymond
Camden</a>
    </li>
    <li>
        <a href="scott.html">
            <img src="scott.png"> Scott
Stroz</a>
    </li>
    <li>
        <a href="todd.html">
            <img src="todd.png"> Todd Sharp</a>
    </li>
    <li>
            <a href="dave.html">
                <img src="dave.png"> Dave
Ferguson</a>
    </li>
</ul>

- creating split button lists 
<ul data-role="listview" data-inset="true">
    <li>
        <a href="ray.html">
            <img src="ray_small.png" class="ui-li-icon">
Raymond Camden
            </a>
            <a href="foo.html">Delete</a>
        </li>
        <li>
            <a href="scott.html">
                <img src="scott_small.png" class="ui-li-icon">
Scott Stroz
                </a>
                <a href="foo.html">Delete</a>
            </li>

specify an icon by adding the data attribute split-icon to your url tag 
<ul data-role="listview" data-inset="true" data-spliticon="delete">

- using a search filter 
<ul data-role="listview" data-inset="true" data-filter="true">
    <li>
        <a href="ray.html">Raymond Camden</a>
    </li>
    <li>
        <a href="scott.html">Scott Stroz</a>
    </li>
    <li>
        <a href="todd.html">Todd Sharp</a>
    </li>
    <li>
        <a href="dave.html">Dave Ferguson</a>
    </li>
(lots of items….)
</ul>

if you begin typing in the previous field the list automatically filters out the result as you type 


# Getting preactical building a simple hotel mobile site 
- home page 
- finding the hotel 
- listing the hotel rooms 
- contacting the hotel 


# Working with Forms and jquery mobile 
- adobe ColdFusion is a server for building web application 
<div data-role="header">
    <h1>Form Demo</h1>
</div>
<div data-role="content">
    <form action="echo.cfm" method="post">
        <div data-role="fieldcontain">
            <label for="name">Name:</label>
            <input type="text" name="name" id="name" value="" />
        </div>
        <div data-role="fieldcontain">
            <label for="email">Email:</label>
            <input type="text" name="email" id="email" value="" />
        </div>
        <div data-role="fieldcontain">
            <input type="submit" name="submit" value="Send" />
        </div>
    </form>
</div>

- working with radio buttons and checkboxes 
- working with select items 
- flip toggle fields 
- slider fields 
- using native form controls 
- working with the mini fields 


# Creating modal dialogs and widgets 
- use data-rel="dialog"
- layout content with grids, use ui-grid-a class 
- making responsive grids, <div class="ui-grid-c ui-responsive"> to handle different size intenlligently using same basic html 

- working with collapse content 
<div data-role="content">
    <p>
        <strong>Main Office:</strong>
        <br/>
400 Elm Street<br/>
New York, NY<br/>
90210
    </p>
    <div data-role="collapsible">
        <h3>Satellite Offices</h3>
        <p>
            <strong>Asia:</strong>
Another Address Here
        </p>
        <p>
            <strong>Europe:</strong>
Another Address Here
        </p>
        <p>
            <strong>Mars:</strong>
Another Address Here
        </p>
    </div>
</div>

- popups, also known as tooltips providing contextual help for descriptive text 
<div data-role="content">
    <a href="#firstPopup" data-role="button" data-rel="popup">Show
Popup</a>
</div>
<div data-role="popup" id="firstPopup">
    <p>This is just a test. It has some text in it. It is incredibly
awesome.</p>
</div>

by default popup will be positioned to the center of the item that launched them 

- responsive tables 
<table data-role="table" class="ui-responsive table-stroke">
    <thead>
        <tr>
            <th>Name</th>
            <th>Title</th>
            <th>Age</th>
            <th>Beers</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>Raymond Camden</th>
            <td>Jedi Master</td>
            <td>40</td>
            <td>3</td>
        </tr>
        <tr>
            <th>Scott Stroz</th>
            <td>Golf Master</td>
            <td>45</td>
            <td>9</td>
        </tr>
    </tbody>
</table>

- working with panels, panel widget sites on the left or right hand side of your page and can be shown or hidden dynamically 

<div data-role="page" id="first">
    <div data-role="panel" id="leftPanel">
This is the left panel.
        <p>
            <a data-role="button" data-rel="close">Close</a>
        </p>
    </div>
    <div data-role="header">
        <h1>Test Panel</h1>
    </div>
    <div data-role="content">
        <a href="#leftPanel" data-role="button">Open My Panel!</a>
        <a href="#rightPanel" data-role="button">Open Another Panel!</a>
    </div>
    <div data-role="panel" data-position="right" id="rightPanel">
This is the right panel.
        <p>
            <a data-role="button" data-rel="close">Close</a>
        </p>
    </div>
</div>


# Moving further with the notekeeper mobile application 
- designing your first mobile application, spend time up front writing out a specification for your project, what it will do, what it will look like and what it should have. 

- list out the requirements and the features of your application 
- add operation steps for each feature 
- building your wireframes 
- designing the add note wireframe for each views 
- writing the html 
- adding functionality with javascript 


# jQuery mobile configuration utilities and javascript methods 
- configuring 
$(document).bind("mobileinit", function(){
    //your customization here 
});

configuring by use the 
$.mobile.someSetting = value;

another option is use $.extend() functionality 

- using jquery mobile utilities 
    + page methods and utilities 
    $.mobile.activePage, reference to the current page 
    $.mobile.changePage(page, options)
    
- path and url-related utilies 
- jquery mobile widget and form utilities 


# Working with events 
- touch, swip, scroll, tap, scrollstart, scrollstop, orientationchange, vclick, vmousedown, vmouseup

- handling page events 
load 
change 
transition 
init 
remove 
layout 


# Enhancing jquery mobile 
- css gradients 
- the basics of jquery mobile theming 
- site-wdite active state 
- chreating and using a custom theme 
http://jquerymobile.com/themroller/

# create native application with phonegap 

# create RSS reader application example 