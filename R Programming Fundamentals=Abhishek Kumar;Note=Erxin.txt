R Programming Fundamentals=Abhishek Kumar;Note=Erxin

# course introduction
- data scientists, the sexiest job of 21 centry
- about the course, R is free and open source languages 
- R framework & capabilities | core programming concepts | basic data anaylysis
- course objective 
    + provide solid foundation
    + not to cover every aspect
    + what & why?
    + real world examples
    + follow along demo
- r framework
    + implemenetation of S language(created by John Chambers)
    + developed by Ross Ihaka and Robert Getnleman
    + developed as a free software environment for teaching
    + statistical software package
    + comparable to commercial packages such as SAS, SPSS
    + free interactive programming language and environment
    + timeline
    start 1990s, alpha 1997, 1.0 200, 2.0 2004, 3.0 2013
    
    http://cran.r-project.org
    
- why r?
    + free
    + open source
    + cross platform
    + great extensibility
    + active community 
    + integration with other language and packages or SAS or ODBC
    + tasks
        * statistics
        * visualization
        * machine learning
        * optimization packages
        * spatial data
        * high performance computing

    + perform specific tasks 
    + repeatable steps 
    + understand existing implementation 
    + extend existing implementation
    + create software for data analysis
    + aspire to be a data scientist

- hello world
> print('hello world')

generate increase number
> 1:20
get the average value
> mean(1:20)

store operator, variable x will save 1 to 20
> x <- 1:20

create new script, use GUI to create new script, for linux only need a text editor save as *.R

load the r file and run the script
> source(*f:/ps/r/mod1/myscript.R*, echo=TRUE)

comment start with #

- editors and IDEs for R
    + through base installation, window r-gui
    + mac, r.app
    + linux, no specific editor
        * vim
        * emac
    + other editors
        * emac: http://ess.r-project.org/, emac specify statistic
        * vim-R, http://www.vim.org/scripts/script.php?script_id=2628
        * NPPToR, http://sourceforege.net/projects/npptor/
        * TINN-R, http://www.sciviews.org/Tinn-R/
    + Eclipse with StatET plugin (http://bit.lyOH1G03)
    + Architect, R oriented variant of Ecplise
    + Revolution-R, enterprise edition
    + Live-R, R in web application
    + RStudio, R oriented IDE, open source free, http://bit.ly/NBHT0U

- RStudio overview
    + console
    + environment
    + create a new file to create a new script, script tab
    + history, files, plots, packages window
    
    + reorganize the layout
    Tools|Options|Pane Layout

    ctrl + enter to execute a line in rstudio

    
# Gettting help for R
- built-in help 
help() to look documentation
demo() to see demonstrations
vignette(), to get additional documentation of a package
- help command, document structured with
    + description
    + usage
    + arguments
    + value
    + references
    + examples
    
    + use help command
    help(term), R is case sensitive
    ?term, is equal to type help(term)
    
    don't know exact term
    help.search("term")
    ??term
    
    use control + enter, command + enter(mac) to run a single line script
    
    use example command to use the example int eh documentation
    > example(term)
- demo command
    + see demonstrations of certain topic
        * sample usage with dummy data
        * code and related items
    > demo(), will list all the demonstrations in attached packages(on the right package tab which packages are checked)
    > demo(package = .packages(all.avaliable = True), list all the demo even the package is not attached
    > demo(package = 'graphics'), list all the demo of graphics demo 
    > demo(graphics) demonstrate graphics
- built-in help using vignettes
    + short to mid-size documents
    + cover part of or all functionalities of a package
    + typically available in pdf format
        * brief introduction
        * background information
        * result
        * usage
        * references
        
    + example, format is same as help command
    > vignette(), list all vignettees in attached packages
    > vignette(package = .packages(all.available = True)

- web search
    + using r commands
    > RSiteSearch, use search engine at http://search.r-project.org
    
    > RSiteSearch("arithmetic mean") # search on http://search.r-project.org
    > RSiteSearch("{arithmetic mean}") # search with exact term
    
    > install.packages("sos") # install package
    > library(sos) #load package
    > findFn("{arithmetic mean}"[, maxPages = #]) #search using findFn
    find function
    ???"{arithmetic mean}" is a shortcut for findFn function
    
    + using search engines 
        * use [R] instead of R
        * directly search for the error message
        
- community
    + mailing list
    R-help for primary help
    R-devel for code development
    special interest groups(SIG) such as R-sig-finance, R-sig-hpc high performance computing
    http://bit.ly/mailingR
    
    + forums
    http://bit.ly/stackoverflowR
    
    cross validated
    http://bit.ly/crossvalidatedR
    
    nabble
    http://bit.ly/nabbleR
    
    + blogs 
    R-bloggers
    http://bit.ly/Rbloggers
    
    Revolution analytics blog
    http://bit.ly/revolutionanalyticsR
    
    R-statistics blog
    http://bit.ly/rstatistics
    
    R-data mining blog
    http://bit.ly/rdatamining
    
- how to ask a question
    + making a minimum reproducible example
    + create sample data
    + fewer lines of code to reproduce error
    + expected results
    + obtained results
    + providing necessary information
        * version of R
        * operation system
    + any additional required information
    + posting guidelines http://bit.ly/RPostingGuide
    + good manners
    + do your homework before posting
    + post to correct forum/mailing list
    + provide minimum required information
    
# R variable and operators
- variables conventions & environment
    + placeholder to hold any object, assign value
    x <- 10
    
    + case sensitive 
- naming convention
    + syntactically valid names
    consist of letters, numbers, dots or underline character
    either start with a letter
    start with do character & not followed by a number
    .valieVariableName
    
    + reserve keywords
    if, else, repeat, while ,function, for, 
- operators arithmetic & logical
- vectorized operation, making R a powerful language

















