TruClient Online Document;Note=Erxin

# Introduction
## General introduction 
- 12.55 reference 
https://admhelp.microfocus.com/tc/en/12.55/Content/Resources/_TopNav/_TopNav_Home.htm

- What is Vuser script?
Steps, structures contain user action 
    + actions
    + function call 
    + flow control 

Actions contains a series of steps, generally corresponds to a business process of your app 

Run logic, the flow of your script, meaning the order actions run in and the number of times they run 

- Develop a script in interactive mode 
    + record 
    + replay 
    + enhance 
    + replay 
    
- Run in load mode with other products 
AppPulse 
APM, former BSM 
LoadRunner 
Performance Center 
StormRunner Load 


## What's new 
- Improvement 
- Convert actions to code 
- Object identification support modify in step options 
- Interactive script development 
    + configure wait step into transaction 
    + play until this 
    + populate global watch panel 
    + none standard file upload 
    + disable creating alternative steps 
    + control step level 
    + add milliseconds arguments to wait step 

- APIs 
    + new AUT API, AUT.window, AUT.document 
    + network and event filtering 
    + JS regular expression as the first URL Utils.addAutoFilter 
    
- TruClient Lite, import client side certificate 
- Browser version support 
    + Chromium 55 
    + TC IE 
    
- TruClient native mobile 
https://admhelp.microfocus.com/mobilecenter/en/latest/Content/Resources/_TopNav/_TopNav_Home.htm

- Integration with network visualization 
    + reference, http://nvhelp.saas.hpe.com/en/nv-perform/en/latest/help/Content/Report/Report_Overview_Integ.htm
    
    
## TruClient Editions 
- in Vugen 
- Standalone 
- Lite 
- Major difference 
Feature 	        in VuGen 	Standalone 	Lite
OS Support 	            Windows 	Windows 	Windows, MAC
Functions 	            Supported 	Supported 	Partially
Properties 	            Supported 	Supported 	Not supported

Extra files:            Supported  Supported   Not available 
function.js                         direct edit  
globals.h                           in script 
JS-functions.js                     folder 

Log viewer 	            VuGen>Output Not available 	Not available
NV                      Available 	Not available 	Not available

Network Section         VuGen>RTS 	Not available 	Not available
Speed Simulation
Download filters

Custom extra files 	    Available 	Not available 	Not available
Convert2Web (HTTP/HTML) Available 	Not available 	Not available
Mobile Device Emulation 	Available 	Available 	Not available


## TruClient standard alone requirements and installation 
- System requirements 
- Standalone installer 
    + AppPulse, https://software.microfocus.com/en-us/software/customer-technical-support-services
    
    + Business Management Services, https://software.microfocus.com/en-us/software/customer-technical-support-services
    
- Standalone support convet TC2Web

## TruClient lite
- upload file path need to manually changed from mac to window vice versa 

## Script and file management 
- support zip or script 
- lite save as zip 
- certificate in lite 
To record or replay a script that uses a client-side certificate in TruClient Lite, the certificate must be installed on the system certificate repository.

When TruClient Lite for Chrome uses the certificate you installed in the system certificate repository, a dialog box asks the user to select a certificate,

To avoid display of the certificate display dialog box, after installing the certificate add a key using regedit. To HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome\AutoSelectCertificateForUrls, add a string value key named "1", with value “{"pattern":"*","filter":{}}”


## Performance metrics 
- The following performance metrics can be recorded 
    + end to end transaction response time, includes client time and browser rendering time 
    + web page component break down, web page and resources 
    + HAR, a standard HAR file 
    + throughput, count of bytes transferred between the browser and the server 
    + hits, count of http requests sent from the client 
    + connections, count of connections opend by the browser to server 
    
- Online and local help centers 


# Fundamentals 
## TruClient step structure 
- Step editor 
step level 
optional step, in the event that the step can not find its object, the script continues without return an error 
alternative step, indicate a step wihch can be redefined in alternative ways

- step section user interface elements 
action, the action that define the step 
object timeout, in second 
step timeout, in second 
minimum time, in second 
end event, can be automatic(not set yet, timers end), action complete, dom content loaded, step synchronous network completed, document load, object exists, step network completed, dialog opened 

- arguments section 
plain values, text 
javascript expression 
name of a parameter 

- object section user interface elements 
highlight 
replace 
roles, the functions that TruClient understands about an object, the list of avaliable action is defined by the role. read-only 
name
id method, identifying method. automatic, xpath, javascript, descriptors 
related object, in relation to an anchor object 

- xpath and javascript object id method 
    + click regenerate expression and select object to regenerate xpath 
    
    + evalXPath in js returns an array of the object defined by xpath 
    
    + you can modify the suggested xpath to return a different list 
    
    + use TruClient random function to return a random element, random(document.getElementsByTagName("myArray"))
    
- Transactions selection 
- Understand end events, the end event occurs the next step can start while the current step continues in the background. The end event for each step is set by TruClient for each browser the first time the script is replayed 

- Events in a typical step 
Step container 
                        -> step start 
                        -> action start 
    |Action             -> action completed 
                        -> DOM content loaded 
    |Additional action  -> step sync network completed 
                        -> document loaded 
                        -> step network completed 
                        -> dialog opened 
                        -> step completed 
                        -> dialog opened 
                        -> step completed 
                        -> after step ended 
                        
- end events, run times, and transaction times on different browsers 

    + if a transaction includes steps with different end events on different browsers, the transaction time may be different between browsers 
    
    + To adapt script to all browsers you may need if browser step to differentiate the end end types 

- when to manually change step end events 
    + You want to start the next step in your script once a specific object is visible on the screen 
    + end event different between browser 
    

## TruClient user interface 
- TruClient user interface overview 
- TruClient user interface components 
main window 
toolbox 
status 
tabs 
menu bar 
context menu 

- actions tab, add action 
- function libraries tab
new library 
save global library 

- menu bar 
    + convert to code 
    + transaction editor 
    + event handler editor 
    + general settings 
    + parameters 
    + snapshot viewer 
    + windows, opens the replay window which tells you which window to look for a object 

- run logic tab, can not be deleted 
    + init block 
    + run block 
    + end block 
    
- run logic steps 
- toolbox 
    + functions
    verify 
    verify pdf content 
    wait 
    wait for object 
    generic object, browser and api actions 
    call function 
    
    + flow control 
    for loop 
    if block 
    add else 
    if exists 
    if verify break 
    continue 
    catch error 
    exit 
    
- miscellaneous 
    evaluate js 
    evaluate js on object, the object is referenced by 'object' 
    evaluate C, defined in functions.c file 
    comment 
    rendezvous, synchronize all vusers in a controller scenario to run a specified step at the same time 
    
- keyboard shortcuts 
                        

## Browsers in TruClient
- Replaying on all browsers, difference between browsers 
render time 
step end event 
object identification 
authentication 
differences in feature sets between browsers 

- testing on different browsers 
analysis support compare transaction response time between browsers 

- troubleshooting issues replaying a script across browsers, use if browser to handle 
end events 
object identification 
security, if authentication or a client certificate is required in only some of the browsers drag a authentication step into the if browser step 

- private browsing, not save password, cookies and history 
- TruClient browser for internet explorer 
    + The TruClient Browser for IE (Internet Explorer) simulates the functionality of an IE browser.
    
    + IE cache management, Use the IE Cache Enabler tool to implement the IE cache simulation mechanism on every Load Generator, Controller or BPM agent machine that runs TruClient IE scripts.
    
    <Installation folder\bin> run HPETruClientCacheEnabler.exe 
    
    disable/enable IE cache simulation

    + TruClient IE does not support DOMStorage and AppCache cache separation for virtual users.
    
- Firebug lite,  Advanced > Firebug Lite or by pressing F12 while in TruClient's IE browser.

- TruClient for IE can only record and replay applications in Standards Mode.

can temporarily deactivate enforcement by deselecting Advanced > Enforce Standards Mode. 

- Enable the negotiate method for authentication 
If your application server supports only the negotiate method for authentication (the HTTP response is with "HTTP/1.1 401 Unauthorized" and "WWW-Authenticate: Negotiate"), you must enable the negotiate option. To do so:

Open the registry setting HKEY_CURRENT_USER\Software\Hewlett-Packard\TruClient\TruClientIE\TCWindows\CurrentVersion\Internet Settings.

Change the value of the EnableNegotiate registry key from "0" to "1".

- limitation
    + If you are using Windows 10 and you launch the TruClient IE browser, the system's proxy settings are changed to the settings specified in TruClient IE 
    
    + The system proxy might be used instead of a proxy specified in the script when running more than one Vuser on a Windows 10 load generator.

- Differences between supported browsers 
cleint certificate 
diagnostics j2ee and .net app 
ssl connections 
responsive design based application, using recorded window size 
verify pdf record snapshots 
modem speed emulation 


# Develop scripts 
## Record a TruClient script 
- create a script 
vugen 
lite 
standalone 

- mobile web 
    + vugen > tools > mobile center device manager> add mobile device or import mobile device 
    
- configure browser setting in TruClient General Settings button 
- record a script 
    + record after 
    + record before 

- replay and save 
    
## record a truclient mobile script 


## Implement run logic 
- File > new 
- Create actions from actions tab 
- Record the business process into corresponding actions 
- Example 
login 
search flight 
select flight 
book flight 
logout 

- sequential run logic 
- random run logic 
- limitations 
    + init and end are presented in VuGen vuser_init and vuser_end 
   
    + vugen run-time settings run logic will not be displayed in the truclient browser until you close and reopen truclient 
    
    + script view is not a valid action. 
    + run section cannot be set to random mode in the truclient browser 
    
    + play from selected step will not work for a step that is located in an action that is not part of the run logic 
    
    + truclient does not support setting run properties on master run block such as iteration and run logic 
    

## Replay 
- Synchronize script steps 
    + interactive record the business process, After the interactive recording, each End Event is set to Automatic: Not Yet Set.
    
    + identify the end event 
    automatic: not set yet has not been determined 
    automatic timers ended, setTimeout or setInterval running as part of the document load in the JS 
    
    action completed 
    
    dom content loaded 
    
    step synchronize network completed, when all http requests have been completed 
    
    document load 
    
    object exits 
    
    step network completed, http request complete including XHR 
    
    dialog opened, when a dialog box is opened 
    
- confirm the end event, use if browser step 
    
    
## debug scripts 
- view replay errors in development window 
- run step by step 
- view log, VuGen > Output Pane > Browser Name- interactive replay 
- insert breakpoints 
- debug script using snapshots 
- modify and view script and step levels 
- handling short events 
- insert wait steps 
- debugging plug-ins 
- resolving step timeouts 
- general tips for successfully interactive replay 
    + do not switch between applications during interactive replay 
    + do not re-size the browser between record and replay 
    + customization for browser will not be saved between different scripts 
    + open different browser when record with lite 
    + select browser for cloud and not for lite 
    
- tips for working with large scripts 
    + divide script into multiple actions and functions, each does not have more than 50 steps 
    
    + meaningful names 
    + add comments 
    
    + avoid generating alternative steps during recording 
    + avoid generate level 2 and 3 steps 
    
    
## Snapshots 
- Configure in general settings button and select the interactive options tab 

    + during record 
    snapshots are created in memory 
    
    + stop record 
    snapshots are saved under the snapshots folder 
    
    + save script in interactive mode
    
    + during interactive replay 
    
- configure snapshot generation 
    + general setting 
    + interactive option or runtime setting 
    + record snapshot generation 
    + replay snapshot generation 
    
- view a snapshot 
    + double click a snapshot in the development window 
    + view snapshot in the truclient snapshot viewer 
    + play slide show 
    + view compare snapshot, support synchronize scrolling 
    + display the snapshots in thumbnails view 
    
- object identification
    + Suspend object selection mode (CTRL+ALT+F4)
    + Highlighting an object
    + Improve object identification, only available for automatic object selection 
    
    + Enhance end event object identification
    + Use alternative steps, Alternative steps allow you to view instances in which there are multiple ways to perform the same user action in a step
    
    could switch between these step options, •Before selecting one of the alternatives, try highlighting the object used by the alternative step and replaying it
    
    To disable this option, clear the Create alternative steps when applicable setting in Interactive Options
    + Modify the object identification method
    + Modify the script timing, insert wait step 
    + Relate an object to other objects, you can label the object based on a different, more stable object. Relations are defined visually
    
    Use the minimum search area to improve performance
    
    Each identification methods have it's own relative object 
    + Replace an object
    + Learn about the object identification assistant
    + Cannot confirm object
    + Multiple objects found
    + Object not found
    + Wrong level on step, a step in a higher level is needed for the identification of the object of current step 
    
    + Non-standard upload of files, only support for IE and Chrome 

- Troubleshooting object identification 
    + How related objects can help the XPath and JavaScript identification methods
    
    use relative object to help narrow down the objects provided by xpath 
    
    + Interactive replay fails with Object Not Found error
    
    add wait step 
    + Interactive replay fails with Object Not Found although highlight locates the object
    + Replay fails to select an item from a list
    One of the common reasons for this is that the names of the items in the list are dynamic.
    
        * Use an alternative step that selects an item from the list using the ordinal identifier instead of the text of the actual item.
        
        * •If the text is only partially dynamic you can use a regular expression to locate the required item based on partial text matching.
        
    + Enable the object identification debug log
        * Enable the Object Identification Debug log to understand why TruClient was not able to identify an object using Automatic or Descriptors ID methods
        
        create a .json file and name it additionalSettings.json in the script folder 
    
        * add content 
        {
            "TruClient": {
                "EnableIdentDescriptorsDebug": true,
                "EnableIdentDebug": true
            }
        }
    
- Descriptors, support Object Identification by specifying logical conditions for identifying the object using its HTML and CSS properties
    
- Configure descriptors manually 
    + select an object property 
    + select an operator 
    + use parameters to vary arguments 
- use a custom property or attribute 
    + The APIs to manipulate properties contain the dot operator. The attribute APIs use the “getAttribute”and “setAttribute” methods.
    
    + JavaScript properties cannot be seen in the outerHTML/innerHTML strings of an element. Attributes can be seen in those strings. 
    
    + The JSON.stringify function will serialize a subset of JavaScript properties but not DOM attributes
    
    + list of operations 
    equalsIgnoreChars 
    endsWith 
    equals 
    equalsIgnoreDigits 
    equalsIgnoreCase 
    equalsIgnoreDeviation 
    startsWith 
    contains 
    contained 
    isRegExpMatch 
    isSubstring 
    
    
## Enhance a truclient script 
- Modify steps
    + flow control steps 
    
- Insert comments
- Catch error step
    + any 
    + object identification error 
    + step arguments 
    + step action 
    
- Verify that an object exists
- Insert generic steps
    + generic object/browser action 
- Add download filters
    + can add URLs to Run-Time Settings >Download Filters to either include or exclude specific URLs while replaying your script.

## Using parameters to vary arguments 
- you create a list of values to pass. Different values are taken from the list as the load test runs. Parameters can also be used in property values of Descriptors.
    
- How to access the Parameters Dialog box in TruClient editions
    + from the vugen toolbar 
    + from the development window 

- Use a parameter as an argument value
    + select a parameter from argument option list 
    
- Convert an argument to a parameter
    + right click a value in set arguments to convert it to parameter 
- Add a parameter to your script
    + open parameter dialog to open the editor and add parameter 
- Set parameter values
- Set how and when to change parameter values during replay
    + In the Policy area of the Parameter dialog box, you can set when and how the values of each parameter are applied during the test. 
    + update rules 
    each iteration
    each occurrence 
    once 
    
    + select next row controls how to choose the next parameter 
    sequential 
    random 
    unique 
    

## Insert transactions 
- A transaction measures the time between two points in a business process. 
- About using transactions 
    + Add transactions so that you can analyze the time spent in different sections of the process after running the test.
    
    + Transactions for steps are not sequential. You can use the same transaction name in different sections of the script to join the times of actions that are not one after another.
    
- User interface of transaction editor 
    + start end point 
    step started 
    action started 
    action completed
    step synchronous network complete 
    document loaded 
    dialog opened 
    step completed only trigger when the step is successful 
    after step ended 
  
  
## TruClient functions and function libraries 
- Functions overview, a group of steps to perform a task 
- Create a function library and function from the TruClient Development Window. local or global 

- Use a reference to a function argument within the function. 

To access the function arguments within the function, use the syntax FuncArgs.<arg_name>. 


- Create a function within a script, Group Into > New Function which opens the Create New Function dialog box. 
- Create a global library, export the function library to a location on your file directory as an xml file

- Copying a test object between object repositories, However, if you copy steps containing test objects between object repositories, you create new, independent test objects that point to the same UI element. These copies are not linked to each other. To keep these objects pointing to the same UI element

- Use a function in the script, 
1.Click the TruClient Toolbox.
2.In the Functions tab, drag and drop Call Function to the correct location in your script.
3.Click the Call Function link to expand the function.
4.Specify the library and the function in the step section.
5.Specify the arguments' values in the augments section. For details, see Create a function within a script . (Optional)

- Create New Function dialog box

    
## Event handlers 
- Overview 
    + use event handlers to help your test recover smoothly from behavior of the application that either 
    
    does not occur in every run. during logon, the user sometimes get a notification. "server is busy, please wait for 10 seconds and try again"
    
    occurs at unpredicatable times. the application displays a survey popup at random times 
    
    if you record or add a step to handle such beahvior, your script may fail when the behavior does not occur 
    
    you can create a event handler for helping handle this 
    
        * object event, when an object related event occurs 
        * dialog event, used when a dialog box pops up 
        
- How to create an event handler 
    + click the event handler editor button 
    + add new one 
    + enter the properties of the event handler, select a function from the function library 

- Event handler editor 
    + add 
    + general setting 
    name 
    execute only once 
    allow other handlers to interrupt 
    event can be triggered during the entire script 
    
    + choose a object 
    + event 
    object exists 
    property exists on object 
    + handler 
    library 
    functions 
    arguments 
    
    
## Typical event handler scenario 
- Create event handler 
    + open event handler editor 
    + selects event can be triggered during the entire script 
    + choose a object 
    + sets the event type 
    + select a existing function from the function library 
    + recording and replace try the event trigger 
    
- For example some time a website may display a sign up or other message box in a random period 


# TruClient general settings 
- Click a gear icon in the toolbar to display the general setting dialog box. it contain several tabs 
    + browser setting, configure browser. it only effect the interactive mode and apply to all TruClient script 
    
    When you save script in interactive mode, any settings that you modified in the browser settings are applied to the load mode 
    + Interactive options, configure replay and debug settings for interactive mode 
    
    action on error, vuser action on error 
    
    snapshot generation. generates record and replay snapshots 
    
    steps generation 
        * default identification method 
        * replace server with parameter 
        * create alternative steps when applicable 
        * create level 2 or level 3 during recording 
        
    debug 
        * enable object identification assistant 
        * ignore wait steps 
        * hide watch panel 
        * automatically populate watch panel 
        
    browser setting 
        * firefox settings, display log messages 
        * chromium settings, suppress devtools alert 
        
    + runtime settings, settings for load mode. the number of iterations and all of the replay settings appy also to the interactive mode 
    
    + client certificates, manually attach client certificate 
    
    + server exceptions, scripts recored in Firefox, you can add a server exception to prevent the security exception dialog pop-up 
    
    location. specify the server URL with https:// prefix 
    
    + mobile center settings, general settings for TruClient-Native mobile scripts 
    
- Client certificate 
    + when recording in IE, the certificate automatically attached to the script folder. Verify it by make sure a CC.pfx file was created in the script folder 
    
    + For Firefox or Chromium you can manually attach the client certificate to the script folder by attach certificate button 
    
    + troubleshooting certificate issues, fail to attach certificate 
        * install certificate in the personal store 
        window > control panel > manage certificates 
        
        * verify the private key is exportable 
        
        tasks > export click next 
        
        * attach the certificate 
        
        note: firefox may still throw certificate exception, you need to add an exception 
        
    
- General troubleshooting and limitation for TruClient 
    + replay failure when click on object
        * Insert a "Scroll <object> into view" step before clicking on the object. 
        
        * imprecision in recording or replaying the exact location of a click on a control 
        
        click the right edge of the control or in the exact center 
        
        * Replace the click step with an Evaluate JavaScript on Object step. For example: Evaluate JavaScript object.click() on button
        
        * IE localstorage issue 
    
    + failure to save or replay script 
    IE Internet Options > Connections > LAN settings > Advanced > exceptions. The content of the proxy exceptions box must not be "<-loopback>" data. It should be null or "127.0.0.1;localhost"
    
    + word verification, If your script fails because of word verification failure, you must cancel this function on the Web site you are testing.
    
    + results vary between browser types, reference in the truclient step structure in  End events, run times, and transaction times on different browsers
    
    + running truclient as a service. Local Storage, an HTML5 feature, enables Web applications to locally store data within the user's browser. Microsoft IE does not support local storage when the browser runs in service mode
    
    Solution: Edit the file “logon_user_config_file.cfg” located in the <LoadRunner installation directory>\launch_service\dat folder. Configure the logon type as LOGON32_LOGON_INTERACTIVE instead of LOGON32_LOGON_SERVICE and restart LoadRunner agent service.
    
    + error replaying a script saved in a non-english path 
    Change system locale to the language that is used in the script path.

    Control Panel > Region and language > Administrative > Change system locale

    Set the Formats to same language as you did in step 1.

    Control Panel > Region and language > Formats > Format

    Restart the computer.
    
    + problems with truclient dialog boxes 
    TruClient dialog boxes, such the Transaction Editor or Event Handler do not work as expected. This is a known issue caused by Microsoft update KB3008923.

    Solution: Uninstall the update or install KB 3025390.    
    
    + problems with uploading files 
    If your script contains steps to upload files using a Windows Explorer dialog box, replay may fail.

    In most cases, it is possible to work around this issue by using custom JavaScript or C code. Contact Software Support for a solution.    
    
    + problems with an event handler, If Simulate New User is enabled in the Run-Time Settings, an event handler is not triggered if the event happens in the last step of the Init section.

    Workaround: Add another step after the last step in the Init section such as a Wait step.
    
    + dragging of a slider or a map does not replay correctly 
    If drag does not work, for example, set an option of slider or drag of map, and the result does not bring the control to the appropriate place, try one of the following:

    Use one of the Alternative Steps.

    Set the values manually until they meet your needs (e.g. the precise number of pixels you would like to drag in each of the relevant directions).

    Try using the "Drag to" capability (by changing the Action of the Drag step in the Step section of the step properties). This way you can drag your object to a relative position from another object

    JQuery sliders may need two replays to verify that the script replay succeeded.     
    
    + unique parameters not working as expected 
Scripts developed in the TruClient Standalone that contain unique parameters may not run as expected.

Workaround: Create the script using TruClient in VuGen.    
    
    + script view is null after converting a legacy truclient script to TruClient web 
The script view is populated after saving the script in interactive mode. This is by design.    
    
    + on chinese-language computers an extra step may be requried for a generic browser action 
When you drag a Generic Browser Action into a new script and set the location as a parameter is created with the context menu, navigation may fail. This occurs only the first time. Drag the Generic Browser action again and create the parameter for the location again.    
    
    + replay fails on page that contain video though the play button was not pressed during recording 
    + run-time setting lost when working in both vugen and truclient standalone
Do not edit run-time settings when a project is open in both VuGen and TruClient Standalone.    
    
    + a script cannot be edited or run in a version older than the one in which the script was developed 
    
    + vugen cannot open the truclient browser because the port range is busy or invalid 
To open a server, a free port is needed. The server is open on the http://127.0.0.1:<free_port>/ URL.

You can configure the free port in the following xml file:

%APPDATA%\Hewlett-Packard\LoadRunner\Data\Settings\VuGenProperties.xml

<VuGenProperties>
<BrowserCommunicationServerEndPort value="8090" />
<BrowserCommunicationServerStartPort value="8080" />
The default port range is between 8080 through 8090. If there is a problem with the ports (all ports are busy or the start port is bigger than the end port), you can change the range in the configuration file.    
    
    + vugen cannot open the truclient browser 
This error has occurred because you do not have the proper permissions to establish communication between VuGen and the TruClient browser.

Recommendation: Ask your administrator or a power user to run this command:

netsh http add urlacl url=http://127.0.0.1:<port_given_in_the_error_message>/ user=<DOMAIN>\<USER_NAME>

Example:
netsh http add urlacl url=http://127.0.0.1:8080/ user=DOMAIN\john    
    
- Protocol troubleshooting and limitations 
    + TruClient for Chromium

When accessing HTTP/2 web pages in Chromium, the replay log displays HTTP/1.1 in the HTTP response header.

The Minimum supported secure protocol setting in TruClient General Settings > Browser Settings is not supported. TruClient Chromium always chooses the most secure protocol supported by both Chromium and the web server under test.

Chromium cannot record inside dynamic iframes.

Uploading to SharePoint fails for some files.

Global variable cannot be used in steps in Chromium.
    
    + TruClient—Internet Explorer (IE) Protocol
When accessing HTTP/2 web pages in IE, the replay log displays HTTP/1.1 in the HTTP response header.

If you are running TruClient on a Windows Server machine, you must turn off IE Enhanced Security by selecting Server Manager > Configure IE ESC to record and replay scripts on your machine.

If you have trouble opening TruClient IE, you may need to disable User Account Controls (UAC) completely. Disable UAC from the Control Panel and also set the EnableLUA registry key to 0.

The registry path for EnableLUA is HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA

If you recorded <Click link> + Shift in your script, it will not activate a new browser tab during replay.
If you have recorded a script in Firefox or Chromium that includes a step to open a second browser window, the script will fail on that step if you replay it in IE. Use if browser step wrap the relative logic 
    
If all steps are not correctly generated after recording a script, the problem may be due to the Windows Component > Internet Explorer Enhanced Security Configuration.

Remove Internet Explorer Enhanced Security Configuration by selecting Control Panel > Add or Remove Programs > Add or Remove Windows Components and rerecord your script.

If Nvidia shim drivers are installed, TruClient IE might behave unexpectedly.
make sure sure that Nvd3d9wrap.dll is not loaded and check the registry 
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs]

[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs]

window.location cannot be used with Internet Explorer. Use document.URL instead.
Flash, Silverlight, ActiveX not supported

Disable mcAfee 

    + Internet Explorer Limitations using TruClient for VuGen
The TruClient—IE protocol does not support Diagnostics for J2EE/.NET.

When recording a script in TruClient—IE protocol, a keyboard event together with the Ctrl key is not supported and therefore not recorded.

When using a script recorded with TruClient IE and replaying it on Internet Explorer 11, the number of connections measurement will not be available in Controller and Analysis.

TruClient—IE protocol requires Internet Explorer 10 or 11 to be installed on the load generator.
TruClient supports only Internet Explorer 10 or 11 Standards mode.

While the script is running and the application calls cross domain data sources, it may cause the script to hang due to security pop-up launched by browser.
    
    + TruClient—Firefox Protocol with VuGen
Security warning dialog boxes are not displayed in TruClient during script development.

If you encounter problems when running TruClient—Firefox Vusers in load mode, modify the Pacing settings (Replay > Run-time Settings > General > Pacing) as follows: Select either After the previous iteration ends, or At <fixed/random> intervals.

The TruClient—Firefox protocol can only be used with applications that support the Mozilla Firefox browser.

TruClient—Firefox does not support Kerberos authentication. If the server also supports NTLM, TruClient will automatically move the authentication to NTLM and continue working.

If you select Run-time Settings > General > Log > Extended log and check Log HTTP request headers and Log HTTP response headers part of the request headers will be missing from the replay log.    
    
    + Other Protocol Limitations
When you view Web page component breakdown graphs for TruClient Vusers, TruClient measurements might not be available or might be less accurate than those of other protocols. 

TruClient is a UI based protocol therefore while running a TruClient script in Controller you might encounter an exception: "Failed to Initialize. Reason TimeOut". It is recommend to increase the Init time out. (Controller > Tools > Options)to provide the Vusers

TruClient does not support closing dialog boxes opened by user code written in an Evaluate JavaScript step (e.g. window.alert(“my alert”);)
After opening TruClient by clicking Develop Script, and subsequently closing it, VuGen may still display the yellow banner of Develop mode.

Workaround: If working with a proxy, you must specify "bypass local connections". If working with a PAC file, the PAC must specify a direct connection for 127.0.0.1

If you edit a TruClient script using a later version of LoadRunner than the one on which you recorded the script, it may fail to replay in some cases.
Before modifying the script, save a backup copy of the script.
Workaround: If the replay fails, rerecord the script using the latest version of the TruClient protocol.

TruClient will not record "mouse overs" when the element has a CSS rule of "Mouse Hover".

Workaround: Instead of mouse hovering, click the elements to open the drop down (the clicks are recorded).

Java applets and Silverlight not supported for TruClient FF.

User actions on UI elements that are based on Java applets and Silverlight technologies are currently not supported for record and replay.

In the default Run Block, you cannot set the mode to Random as you can in VuGen UI.

Some error messages may not be localized.


# Advanced
- Program in TruClient
- work with javascript in truclient scripts 
    + support JS expression as argument 
    + working with ArgsContext object 
    Object identification variables and step variables do not share the same context. This means that variables that are defined in one context are not recognized in the other. To use a variable in object identification that is defined in the Arguments section of a step, add the prefix ArgsContext before the variable name.
    
    if the variable firstname is defined as a value for an argument of a step, use the firstname variable in object identification, refer to the variable as ArgsContext.firstname.
    + using regular expression 
    To use regular expressions in JavaScript code, there are two options:

    Use the '/' notation: Replace the quotation marks of a string with a slash.

    For example, /LoadRunner/ is a regular expression that will match any string that contains "LoadRunner".

    If you need to dynamically create a regular expression, you can use the regular expression constructor and specify the string.
    
    + using javascript in the AUT window 
    
    The AUT API provides a common mechanism for handing the AUT window and document for all TruClient protocols
    
    AUT.window 
    AUT.document 
    
    truclient web support omit the prefix for backward compatibility. 

- Insert and modify loops , use the flow control in the toolbox 
    + for loop 
    + break statement 
    + continue statement 
- Use VTS in TruClient 
    + What is VTS?
    LoadRunner Virtual Table Server - or VTS for short - is a Web-based application that is built to work with LoadRunner Vuser scripts. VTS offers an alternative to standard LoadRunner parameterization.
    
    + When you use standard LoadRunner parameterization, each Vuser is assigned parameter values from a dedicated set of values - parameter values are not shared between Vusers. In contrast, VTS enables you to assign parameter values from a single set of parameter values to multiple Vusers.
    
    + VTS includes a table that contains parameter values that can be used by your Vuser scripts. The VTS table is composed of columns and rows. Each column represents a set of values that can be used by a specific parameter in your Vuser scripts. 
    
    + how to install VTS server 
    + connect/disconnect to a VTS server 
Select Toolbox > Miscellaneous and add an  step to your script.

To connect to a VTS, enter TC.vtcConnect(“server”,port,"alias") in the Arguments > Code section of the step.

You can identify the server either by name or by ip address.

Example: TC.vtcConnect("myServer",8888,"myVTS");

To disconnect from a VTS, enter TC.vtcDisonnect("alias") in the Arguments > Code section of the step.
    
    + How to use Eval JavaScript code step to pass VTS parameters to another step.
        * To connect to a VTS, enter TC.vtcConnect(“server”,port,"alias") in the Arguments > Code section of the step.
        
        * Create a new eval javascript step and In Argument > Code section enter define your variable.

        For example, to get data from the server enter var ws = TC.vtcGetCell("Web Sites",1,"alias");
        
        * Select Toolbox > Functions and add a Generic Browser Action to your script.
        
        * Enter the variable you defined in Step 2 in Argument > Location .
        
    + Use VTS directly in a step 
Connect to a VTS server Select Toolbox > Miscellaneous and add an  step to your script.
To connect to a VTS, enter TC.vtcConnect(“server”,port,"alias") in the Arguments > Code section of the step.

Select Toolbox > Functions and add a Generic Browser Action to your script.

Enter TC.vtcGetCell("Web Sites",1,"alias");in the Argument > Location section of the script.

    + Using custom JavaScript and C code, suggest avoid using evaluate C step 
    
- convert truclient actions to code 
    + click the convert to code button on the toolbar 
    + select the scope of the script to convert 
    current action 
    all non-coded actions 
    
    + select the object identification method 
        * managed object repository 
        * user managed object repository, enables you to create objects and manage the object repository 
        select default identification method 
        keep predefined identification 
        include other object 
        include objects roles as a comment 
        * configure the step conversion options 
        * click convert to convert the selected action. after conversion, object created by TruClient are shown as 
        TCS.object.tcManaged.<object name>.operation(arguments)
        
        User created objects are shown as 
        TCS.object.userManaged.*.operation(arguments)
        
    + Replay and enhance the converted script 
    + Identify the end event for each step 
    "End Event": TCS.argType.endEvent.<select end event>
    
        * reference end event types 
        https://admhelp.microfocus.com/tc/en/12.55/Content/TruClient/reference/Coded-APIs.htm#TCS.endEvent
        
    + Click the detach coded window to open the editor in a separate expanded window 
    
    + limitations 
    The Automatic identification method is not supported for user managed object repositories.

    Functional Libraries cannot be converted to code (however, they can be used from a coded action).

    Related objects in a script, and transactions with a non-default End Event cannot be converted to code.

    Action on error in the Interactive Options tab of General Settings is not supported.

    Any change to the End Event in a grouped step is ignored when a script action is converted to coded.

- Examples 
    + Create and use a global variable in evaluate JS 
    Global.Number=5:. The global prefix defines a global variable named number
    
    + Create a dynamic transaction name 
    TC.startTransaction(“MyTRX_” + TC.getParam(“paramName”))
    
    TC.endTransaction(“MyTRX_” + TC.getParam(“paramName”), “Auto”);
    
    + Create coded functions 
(function(){
    "use strict";
    
    function actionAction(){
        TCS.browser.navigate({
            "Location":TCS.argType.JSArg("\"advantage.com\"")
        });
        
        TCS.object.tcManaged._0ITEMSYourshoopingObject.type({
            "Value": "speakers"
        });
    }
    actionAction();
})();

        * reference 
        https://admhelp.microfocus.com/tc/en/12.55/Content/TruClient/Create-Coded-Functions.htm
    
    + Capture a value to a string 
        * add a evaluate JS on object step 
        var text = object.textContent;   //object holds the DOM object that we previously found
        var index = text.indexOf(". ");   //The indexOf() method returns the position of the first occurrence of a specified value in a string.
        var randomText = text.substr(index+2);
        TC.log("Captured String: " + randomText,"Standard");
        
        * add another evalute JS step 
        TC.userDataPoint("JustNumbers",randomText);
        
    + iterate over links in a webpage, ArgsContext enables you to refer to arguments defined outside the argument section. For details, see Working with the ArgsContext object.
    
        * create a for loop and set a max loop value to N 
        * evalXPath("//li[text()=\"" + ArgsContext.TC.getParam("LinkText") + "\"]");
    + work with dynamic tables 
    evalXPath("//li[text()=\"Link " + ArgsContext.i + " - this is an example\"]");
    
    + work with descriptors 
    From the Descriptors editor, select the object ordinal JS instead of plain text. Enter the following code:
    
- API Help 
- TruClient functions API
TC.addNetworkFilter(filters, include, applyTo)
TC.clearNetworkFilters
TC.startLogRequests
TC.stopLogRequests
TC.advanceParam(name)
TC.getUserIP
TC.setParam(name, value)
TC.crossTransactionStart(name, value)
TC.outputMessage(text)
TC.crossTransactionEnd(name, value, status)
TC.transactionDuration(name)
TC.getParam(ParamName)
TC.evalC(funcname)
TC.log(text, level)
TC.unmask(text)
TC.userDataPoint(name, value)
evalXPath(path)
TC.startTransaction (name)
TC.endTransaction(name, status)
TC.vuserStatusMessage(string)
TC.setLogLevel(logLevel, log_flags)
TC.restoreLogLevel()

    + Browser 
TC.setProxy(option, settingsString)
Utils.addAutoFilter(url, isIncluded)
Utils.clearCache()
Utils.clearCookies()
Utils.addAutoHeader (header, value, merge)
Utils.cleanupAutoFilters(filter, isInclude)

    + VTS 
TC.vtcAddCell(colName, value, VtsName)
TC.vtcAddCells(colNames, values, option, VtsName)

TC.vtcAddUniqueCell(colName, value, VtsName)
TC.vtcColumnSize(colName, VtsName)
TC.vtcConnect(serverName, port, VtsName)
TC.vtcDisconnect(VtsName)
TC.vtcDropIndex(colName,VtsName)
TC.vtcEnsureIndex(colName, VtsName)
TC.vtcIncrement(colName, rowIndex, value, VtsName)
TC.vtcGetCell(colName, rowIndex, VtsName)
TC.vtcGetRowCells(rowIndex, VtsName)
TC.vtcPopCell(colName, VtsName)
TC.vtcPopMultipleCells(colNames, VtsName)
TC.vtcUpdateCell(colName, rowIndex, value, VtsName)
TC.vtcUpdateEqualsCell(colName, rowIndex, value, comparedValue, VtsName)

    + Environment 
IO.createDir(path)
IO.read(path, charset)
IO.isExist(path)
IO.delete(path)
IO.write(path, string, append, charset)
TC.getAttr (name)
Utils.getEnv(name)
Utils.import(path)
Utils.isEnvExists(name)
Utils.setEnv(name, value)

    + IO
IO.createDir(path)
IO.delete(path)
IO.isExist(path)
IO.read(path, charset)
IO.write(path, string, append, charset)

- TruClient Step Arguments 

    + element actions 
    mouse actions, down, up, over, click, double click, drag, drag to, get property, verify, verify pdf content, wait for property, press key, type, activate/focus
    
    + browser 
    active tab 
    add tab 
    navigate 
    go back 
    go forward 
    scroll 
    dialog confirm 
    dialog prompt 
    dialog authentication 
    verify 
    
- truclient properties, can be used as arguments in any javascript evaluated field 

LR.userId
LR.groupName 
LR.scenariold 
LR.outputDir 
LR.scriptDir 

- coded functions 
    + browser 
TCS.browser.activate

TCS.browser.activateTab

TCS.browser.addTab

TCS.browser.close

TCS.browser.closeHTMLDialog

TCS.browser.closeTab

TCS.browser.dialogAlert

TCS.browser.dialogAuthenticate

TCS.browser.dialogConfirm

TCS.browser.dialogPrompt

TCS.browser.dialogPromptPassword

TCS.browser.getProperty

TCS.browser.goBack

TCS.browser.goForward

TCS.browser.navigate

TCS.browser.reload

TCS.browser.resize

TCS.browser.scroll

TCS.browser.stop

TCS.browser.verify

    + object 
tcManaged - TruClient managed objects.

userManaged - User-defined objects. The following are constructors used in used-defined objects:

create - Constructor to create a new user-defined object.

Descriptors - Constructor to create a descriptor object.

Descriptor - Definition of each descriptor.

tcManaged/userManaged objects:

TruClient managed objects are in the format:
TCS.object.tcManaged.<object name>.operation(arguments)

User managed objects are generated in the format: 
TCS.object.userManaged.<object name>.operation(arguments)

Note: Autocomplete displays the list of possible actions for coded objects only after the object name has been manually inserted (for example, TCS.object.userManaged.aDDTOCARTObject).

TCS.object.[tc/userManaged].<object name>.click

TCS.object.[tc/userManaged].<object name>.doubleClick

TCS.object.[tc/userManaged].<object name>.drag

TCS.object.[tc/userManaged].<object name>.dragTo

TCS.object.[tc/userManaged].<object name>.evaluateJavaScript

TCS.object.[tc/userManaged].<object name>.getProperty

TCS.object.[tc/userManaged].<object name>.isExist

TCS.object.[tc/userManaged].<object name>.isVerified

TCS.object.[tc/userManaged].<object name>.mouseDown

TCS.object.[tc/userManaged].<object name>.mouseOver

TCS.object.[tc/userManaged].<object name>.mouseUp

TCS.object.[tc/userManaged].<object name>.multiSelect

TCS.object.[tc/userManaged].<object name>.pause

TCS.object.[tc/userManaged].<object name>.pressKey

TCS.object.[tc/userManaged].<object name>.scroll

TCS.object.[tc/userManaged].<object name>.scrollintoView

TCS.object.[tc/userManaged].<object name>.seek

TCS.object.[tc/userManaged].<object name>.select

TCS.object.[tc/userManaged].<object name>.type

TCS.object.[tc/userManaged].<object name>.verify

TCS.object.[tc/userManaged].<object name>.wait

TCS.object.[tc/userManaged].<object name>.waitFor

    + Create XPATH identification method 
TCS.object.create ({"XPath": "/html/body/form/input"});

TCS.object.create ({"XPath": "//input[@type=\"submit\" and @value=\"Submit Query\"]"});

TCS.object.create ({"XPath": "//a[text()=\"Back to example 1\"]"});

    + JavaScript identification method 
TCS.object.create ("JavaScript": "document.getElementById(\"htmlTags\");");

TCS.object.create ("JavaScript": "evalXPath(\"/html/body/form/p[1]/input\");");

    + Descriptors 
    TCS.object.Descriptors 
    
    TCS.object.Descriptors(tagName, descriptorObject, descriptorObject, ...)
    
    TCS.object.Descriptors("A",			TCS.object.Descriptor.text.equals(TCS.argType.JSArg("ArgsContext.TC.getParam(\"myParam");")))	

    + TCS.object.Descriptors
    
        * descriptors
role 
id 
name 
class 
text 
label 
labelledby 
title 
input_type 
input_text_value 
input_button_value 
alt 
img_src 
url 
protocol 
host 
pathname 
search 
form_action 
form_method 
tr_cols 
isNumber 
isCurrency 
isDate 
isTime 
isLeaf 
customAttribute 
customProperty 

        * methods some of them may not fully supported by the descriptor check the doc
https://admhelp.microfocus.com/tc/en/12.55/Content/TruClient/reference/Coded-APIs.htm#TCS.object.Descriptor

Equals 
equalsIgnoreDigits 
equalsIgnoreCase 
startsWith 
endsWith 
isSubstring
equalsIgnoreChars 
isRegExpMatch
contains 
contained 
equalsIgnoreDeviation 

    + TCS.object.Descriptor.ordinal(value) computes description of the DOM object ordinal that corresponds to Descriptors ordinal 
    
    TCS.object.Descriptor.ordinal(param)
    param either "random" or a number 
    
        * example 
    computes descriptor identification where tagName is “A”, text is equal to "All kind of CGI's.", and ordinal is random.
    
    TCS.object.Descriptors("A",
    TCS.object.Descriptor.text.equals("All kind of CGI's."),
    TCS.object.Descriptor.ordinal("random"))
    
    
# Utilities 
- Converting single-browser scripts to truclient web, Scripts recorded in version 12.02 and earlier can be replayed only in the browser on which they were recorded. You can convert these scripts to TruClient - Web so that they can be interactively replayed on any supported browser.

    + run the batch conversion tool, In VuGen, select Tools > TruClient batch conversion tool.
    
    + converting a single script 
Open the script in VuGen.

Select Tools > Convert Script to TruClient Web to display the conversion dialog box.

Define a name and location for the converted script.

Click Convert. The converted script is displayed in the Solution Explorer.
    
- Convert script to web http/html 
From the VuGen toolbar, click the  Convert button to convert the script.
After the script is generated, review the script, keeping in mind that the Web HTTP/HTML protocol records on the transport level. 
    
    + does not support converting steps that call 127.0.0.1 (localhost) address.
    
- Troubleshoot load issues 
    + footprint 
    + configure run-time settings to improve load 
    To improve the ability to run more Vusers, select Run-Time Settings > General > Replay and check the Replay using recorded duration for steps option.
    
    object not found timeout 
    step timeout 
    interstep interval 
    
    + measure the load generator performance 
Processor\%                     Processor Time	80%
Memory\Available Mbytes	        Less than 10 percent of the total physical RAM
System\Context Switches/sec	    Less than 8K context switches/sec per core

    + manage truclient scalability 
    
To support a larger number of Vusers, use high performance hardware and use more load generators.

Increase the ramp up time between vusers.

For example, minimally set the ramp up to 2 vusers every 30 seconds.

Configure Controller to not initialize vusers before they run. This will reduce the demand on the CPU and I/O during ramp up.
If CPU is a bottleneck, consider doing one of the following:

Add a longer pacing time between iterations.
Add wait steps of a second or two.
If memory is a bottleneck, run fewer Vusers.

If the bottleneck is not CPU or memory, it is most likely the GDI resources. Consider using LoadRunner/Peformance Center integration with Terminal Services and split Vusers among different terminal sessions.

The pacing between iterations has been set to five seconds.

- TruClient supportability tool 
    + Check what browser version is installed 
    To use the tool, run <Installation folder>\bin\TruClientSupportabilityTool.exe.
    
    + Edit truclient IE internet properties 
    From the TruClient Supportability Tool > TruClient IE, select TruClient IE Internet Properties to open the Internet properties dialog box.
 
 
# Videos 
- check youtube channel 
    
    
    
    
    
    
    
    
    
    
    


