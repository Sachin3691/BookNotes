Learning EMac by help doc;Note=Erxin

# combine keys
- ctrl+<keyboard> write with c-k 
- meta+<keyboard> write with m-k

# start 
- move page down, c-v, page up
- move page up, m-v, page down
- move cursor by 
    previous line, c-p
backward, c-b      cursor   forward c-f 
    next line, c-n 
    
- move cursor to the middle of that diagram by c-n/c-p then c-l to see the whole centre in the screen 
- move by word, m-f, m-b
- move to the begin/end of a line, c-a, c-e
- move to the begin/end of a sentence, m-a, m-e
- begin/end of whole text, m->, m-<, c-<, c-> repeatly move 
- shift+c-</c-^/c-V/c-> will select the text region and move the cursor 
- most emacs commnad accept a numeric argument, for most commands this serves as a repeat-count, give a repeat-count by c-u then the digits before the command or m-# to type in the repeat-count
- stop a executing emac command by, c-g 
- some emacs command are disabled for beginner, if you type in the command use SPACE to unlock the command 
example c-x c-l, will display the message 


# windows 
- basic window
c-x 1, one window (kill all other )
- inserting and deleting 
long lines will mark with little arrow or backslash depends on your monitor type 

<del>, delete the character just before the cursor
c-d, delete the next character after the cursor 
m-<del>, kill the word immediately before the cursor 
m-d, kill the next word after the cursor 
c-k, kill from the cursor position to the end of line, second type to kill a whole line which is different with c-u 2 c-k, repeat-count kill will kill two lines and the new line character
m-k, kill to the end of the current sentence 

kill text between two mark position, mark with c-<spc>, and then type c-w to kills the selected texts 

- undo, c-x u
- past, in emac is called yanking, c-y 
if you do several c-k in a row, all the text is saved together, do one yanking will yank all the text

m-y will yanking the previous killed texts, type several types to get more previous one, and keep editing to confirm the yanking is end 


# Undo
- undo a change, c-/, normally it undo the change made by one command, not count the command that not change the text such as cursor changes 
c-_, c-x u are the same with c-/ 

undo killing text is not be yanked 

# Files
- find/open a file in emac by, c-x c-f, specify a unexist file will create a new file 
- save the file, c-x c-s


# Buffers
- after find a file, emac store each created files inside an object called "buffer"
- check buffers list, c-x c-b 
- type c-x 1 to get rid of the buffer list 
- switch to previous buffers, c-x c-f again 

# Extend the command set 
- emacs gets around this with the x (eXtend) command 
c-x, character extend, followed by one character
m-x, named command extend, followed by a long name 
- end session, c-z, end terminal. c-x c-c save and exit 
- save file, c-x c-s
- save buffer c-x s
- extend string command, such as "replace-string", type m-x repl s<tab>, use tab to use the intelligence 

# auto save
- emac will auto save editing buffer and files, temp file will be named as #file_name#, if computer crass then use m-x recover-file<return> to recover the temp file, if save file normally 

# Echo area
- if you typing multicharacter commands slowly emac will display the rest at the bottom

# Mode line
- line immediately above the echo area is called "model line", the format example 

-:**- TUTORIAL 63% L749 (Fundamental)

the filename -- it is means the file you have found 
NN% indicates your current position in the buffer text, 0% will display TOP, bottom will display BOT, if all are shown will display ALL
L### gives the current cursor line position 
the star in the front means you have made changes 
(editing_mode), the default mode is fundamental
    + switch model by 
    m-x fundamental-mode 
    m-x text-mode, used to switch to human language editing 
    
    + some of the command are behavior a little different under each mode 
    c-l c-l to bring this line to the top of the screen 
    c-h m, see how text model differs from fundamental mode 
    c-x 1, remote the document from the screen 

    + major modes are called major because also minor modes 
    you could manually turn any minor modes on or off, m-x auto-fill-mode, this mode will breaks the line in between words automatically whenever you insert text and make a line that is two wide 
    
    the default line width is 70 characters, use c-x f to change this 


# Searching
- initiate a search by c-s, for forward search 
- search something earlier in the text, use reverse search c-r


# multiple windows 
- split window to two horizontal, c-x 2
- split window to two vertical, c-x 3
- c-m-v (ctrl-meta-v) to scroll the bottom window, this is very useful when you editing text in one window and use other window as reference 
if you don't have a meta key, you could use ESC instead, and you must type ESC follow by c-v, just type ctrl-esc-v will not work 
- split window 
- move cursor to other window c-x o (o for other)

# Recursive editing levels 
- this editing mode is indicated by square brackets in the mode line surrounding the parentheses around the major mode name such as [(Fundamental)] the normal mode will display as (Fundamental)
- get out of recursive editing level model by ESC-ESC-ESC, this is a all-purpose get out command, you can't use c-g to get out of this mode 
c-g is used to cancelling commands 


# Getting more help 
- help command, ctrl-h subject
- if you are lost and type ctrl-h ? emac will tell you what kinds of help it can provides
if no message displayed, type F1 or m-x help<return> instead 
- basic help, c-h c command_character, emac will display a brief introduction

- describe a function, c-h f
- displays the documentation of variables, c-h v 
- command aprops, c-h a 
    + example 
    c-h a file<return>
    will display all m-x commands with "file" in their names 
    
- read included manuals, c-h i, this command puts you into special buffers for the packages installed on your system 

- get emacs list package that don't come with emacs 
m-x list-packages 
    + the emacs lisp list (ELL)
    http://www.damtp.cam.ac.uk/user/sje30/emacs/ell.html

    + emacs lisp list package also could be found at 
    http://www.damtp.cam.ac.uk/user/sje30/emacs/ell.el
    
    + google group 
    http://groups.google.com/group/gnu.emacs.sources

    or 
    http://dir.gmane.org/gmane.emacs.sources

    + lisp wiki 
    http://emacswiki.org/elisp


# more features 
- completion avoid necessary typing by c-x b *M<tab>
- exit emacs, c-x c-c 
- Emacs integrates with GDB to provide an IDE (M-x gdb):
- Emacs can compare two files and highlight their differences (M-x ediff)
- Emacs is a file manager (M-x dired)
- Emacs can read news, mail, and RSS feeds (M-x gnus)
- You can even play tetris in Emacs (M-x tetris)
    
    
    




