Introduction to Qt A C++ Cross Platform Application Framework=Tod Gentille;Note=Erxin

# Overview 
- a c++ cross platform framework 
- what is qt and how do you pronounce it? 
    + Qt code less 
    + create more 
    + deploy everywhere 
    
- three licensing options 
    + commercial license 
    + GNU GPL 3.0 
    + GNU LGPL 2.1 
    
- qt quick blocks 
Core, webkit mutimedia scripting xml 

GUI, qml database qt quick network 

unit testing 

    + core 
    file i/o 
    event and object handing 
    threading/concurrency 
    signal and slots (interobject communications)
    
    + qt creator 
    code editor 
    build system 
    ui designer 
    debugger 
    tools 
    help 
    code editor 
    
- is it a framework or a library? 

framework approach 
^
|
V
application 
^
|
V
platform services 


framework is your application live in the framework 

for library your application live outside of the framework and direct communicate with platform services 

Qt support works for python and ada 

- what can you do with qt? 
window 
linux 
mac 
android etc.. 
you could also write console and services 

- four ways to build a GUI 
Qt Widgets, established, fast developed but hard to maintain code base like window phone. it is similar to window form application 
Qt Quick, this is likely to MS WPF, code in QML. QML is use JSON form instead of XML 
Qt Graphics 
Qt Web Kit 

- Qt quick 
better seperation of logic from view 
resolution independent 
extrememly fluid interface 
property data binding 
quick prototyping 
support for animations 
easily extended controls 

- Qt widgets 
mature 
more familiar to most developers 
c++ only low level 
more native look and feel? 

- prerequisities and what you will learn 
- extending C++ 
meta object compiler 
Q_OBJECT Macro 
Code Generation 
RTTI 
Dynamic Properties 

using certain part of Qt will make you dependent on the QT build process to generate the C++ code 

- Adavantages 
increased productivity 
multiple platform support 
leverage existing C++ libraries 
maintained and supported 

- disadvantages 
some commercial uses requrie a commercial licenses 
it is not a pure c++ 
compiles to the metal, so must recompile for each platform 

- the qt timeline, brief and incomplete history 
march 1994 trolletch is founded with qt aas its project -> june 2008 nokia acquires => march 2011 digia acquires qt commercial licensing -> september 2012 digia acquires full qt business from nokia 
- course overview 
    + downloading and isntalling qt 
    + exploring the ide 
    + console and gui translation 
    to explain the build block 
    + an echo server gui application 
    + the view and a custom class wizard 
    + the model including JSON and TCP 
    + the view manager 
    + menus toolbars and about boxes 
- summary and links 
    + what it is 
    + what it can do 
    + what some of the major components are 
    ...
- references 
comparing qt quick & widget, http://goo.gl/ybaVby 
code generation in qt, http://goo.gl/Bn6jDB 
licensing, http://goo.gl/AdtO4L 
licensing text, http://goo.gl/jk7FJy





















