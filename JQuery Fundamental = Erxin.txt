JQuery Fundamental = Erxin

:jQuery
>Cross browser support
>version
	- jquery.com
		* production version
		* development version
	- appendto.com/community/jquery-vsdoc
	visual studio documentation file for visual studio
>use the jquery
	- add <script></script> into header tag
>other ide
	- eclipse
	- aptana
>using content delivery network(CDN)
	- microsoft
	<script type="text/javascript" scr="http://ajax.microsoft.com/ajax/jquery-1.4.4.min.js"></script>
	- google
	- advantage
		* copy the script from local server
		* have cache
		* help with web debug
	- test the CDN is work fine
	<script type="text/javascript">
	if(typeof jQuery=="undefined")
		document.write(unescape("%3Cscript src='localJQueryFileName.js'"+"type='text/javascript'%3E%3C/script%3E"));
	</script>
>jQuery document ready function
	<script type="text/javascript">
		$(document).ready(function(){});
	</script>
>jQuery documentation
	- docs.jquery.com
	- api.jquery.com
	
:jQuery selector
>select by tag name, 
	- $('tagName0, tagName1'), select all <tagname0>, <tagname1>
	- $('ancestor descendant'), ex $('table tr')
	- $('#id')
	- $('.className')
	- $('tagName[attributeName]') | $('tagName[attributeName = "value"]'), it's case sensitive
	- $(':input'), select all input tags not only the <input>. all input elements including input, select, textarea, button, image, radio and more.
	$(':input[type = "input_type"]'), ex. $(':input[type = "textarea"]')
	- $('tagName :input'), select all the input elements in the specific tagNames
>jQuery wrapper, if you want use jquery features you have to wrap the js element with jquery to build it to jquery object.
>jQuery features
	- using contains in selectors
	ex. $('div:contains("substring")'), search all the div which have the specific substring.
	- select odd rows or even rows 
	$('tr:odd'), $('tr:even')
	The first row is based from 0.
	- select first child
	$('tagName:first-child')
	- attribute starts with
	$('tagName[attribute^="value"]')
	- attribute end with use '$', just like reg-ex
	- attribute contains use '*'

:jQuery interact with DOM
>iterating funciton
	- .each(function(index, element)), is use to iterate through jQuery objects. wrap the html element to change it to jquery
	it is equal to use with .each(function(index){this}); at this time this = element
	this means the current html element.
>modifying the attribute and property
	- property, is the DOM element's property such as title.
	$('some_element').property
	- attribute, is like DOM element or custom manipulate attribute in the html element.
	$('some_element').attr('attribute_name')
	- modify the value
	$('tag').attr('attribute', new_value)
	- use JSON, javascript object notation, to reset the value.
	$('tag').attr({
		attribute0:'value',
		attribute1:'value',
		style:'value;'
	});
>Adding and removing nodes
	- appending adds children at the end of the matching element
	$('<span>(office)</span>')appendTo.('.officePhone')
	or
	$('.officePhone').append($('<span>(office)</span>'))
	office will be added into each officePhone
	- prepending adds the children at the begin of the matching element
	$(child_element).prependTo(parent_element_set);
	or
	$(parement_element_set).prepend(child_element);
	- wrap element
	$(inner_element_set).wrap(wraper_element_or_html);
	- remove element
	$(remove_element_set)
	NOTE: the selector could use CVS format to transfer multiple parameters
	tag.class name to select the element
	class = "class0 class1" in html attribute to add mutiple class
	- jQuery dom manipulation functions from the web site
	
	
	
	
	
	




