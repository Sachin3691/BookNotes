Windows Performance Monitoring Fundamentals=Bruce Mackenzie;Note=Erxin

# Performance monitoring overview 
- module overview 
    + performance monitoring overview 
    + characterizing performance issues 
    + types of performance monitoring 
    real time 
    collecting data in the background 
    
    + analyzing performance data 
    cpu i/o 
    network i/o 
    
    + implementing changes 
    
- overview 
poor performance(server) 
    => characterize the performance isssue 
    severity 
    duration 
    frequence 
    
        => gather performance metrics 
        perfmon -> blg 
        WPR -> etl 
            => analyze data 
            perfmon /PAL 
            WPA 
                => implement changes 
                    => perf problem sloved?
                        => done 
                        
- characterize the performance issue 
frequence, continually, hourly, daily 
duration, seconds, minutes, hours 
severity, sluggish, crawling, lock-up 
affected resources, cpu, memory, disk 

find out which process is occuping the cpu 

- types of performance monitoring 
task manager 
resource monitor 
perfmon 

- details analysis via logs 
perfmon BLG(binary logs) 
window ETL (event trace logs) 

- analyzing performance data 
run, perfmon 

add counter from the graphic with right click 

select the counter and select scale to view the counter with properate rate from the context menu 

take a collected data file 

    + select log view to check the record of previous logged data 
    none paged file continued increased may means memory leak 
    
- analyzing performance data 
    + identify bottlenecks 
    cpu 
    memory, system, paged, none paged, private bytes... etc 
    + i/o 
    disk 
    network 
    
    + resource monitor is another built in tool for monitor system resource 

- implementing changes 
gather new performance metrics after implement the system changes 

analyze results 
cpu, memory, i/o, network 

be methodical don't implmenent too many changes at same time. 

keep or back out changes depending on results 

identify any new or existing bottlenecks 

- wrapping things up 
    + charactering performance issues 
    + different types of performance monitoring 
    interactive 
    background data collection 
    analyzing performance data 
    impelment monitor and changes 
    
- upcoming modules 
quick and easy monitoring of key metrics 
detailed monitoring of key metrics 
monitoring anything with graps and alterts 
automating the analysis of performance logs 
pal, the analysis of performance logs tool 
recording and analyzing low level system metrics, window performance toolkits
best practices for performance monitoring & tuning 


# Quick and easy monitoring of key metrics 
- key system metrics 
starting your ananlysis with task manager 
view cpu statics 
view memory statistics 
viewing io activity 
investigating deeper with task manager 

- key system metrics 
cpu 
memory
io 
    => disk 
    => network 
    
- starting your analysis with the task manager 
    + redesigned for window server 2012 and window 8 
    + optimized for most common admin tasks 
    + new heat map to provide data visualization 
    + quick interactive view of performance 
    + starting task manager 
    right - lick task bar 
    ctrl + shift + esc 
    taskmgr.exe 
    ctrl+ alt + delete 
    
    + tabs 
    performance tabs 
    
- cpu statistics 
cpu 
    processor item 
    idle time, system is not busy 
    user time, portion of processor time 
    priviledged (kernel) time, as operating system overhead. keep 30% of processor time 
    
    + cpu stress tool provide by microsoft 
    cpustres
    
    it is already contain in my personal tool folder 
    
    + use the context menu in the task manager to show or hide kernal time 
    
- memory 
    + physical memory 
    in use 
    avaliable (free)
    
    + system memory pools 
    paged pool 
    non-paged pool 
    
    + process private memory 
    private bytes 
    working set size 
    
- memory statistics 
- process disk and network activity 
input/output 
    + disk drives 
    read/second 
    writes/second
    
    + network adapters 
    bytes received/second 
    bytes ransmitted/second 
    
    + enable disk counter for task manager by 
    $ disk perf-Y  
    to turn on disk relative counter 
    
    read/write under15/ 25 milliseconds 
    + right click the network statistics will show a network detail popup dialog 
    
- investigating deeper with task manger 
view applications, processes, services & users 
reveal top activity by sorting columns 
add counters with view, select columns ...
manage process & service (stop, restart)
dump process for further analysis 
analyze wait chain, select one process and in the context menu 
right click a process and select go to detail will show the detail process execution information. click a column support select more counters 

- wrapping things up 
key system metrics include 
    + cpu 
    + memory 
    + io activity (disk & network) 
    
    + getting started with task manager 
    + view cpu, memory and io metrics 
    + digging deeper with the task manager 

# Detailed monitoring of key metrics 
- performance measurements 
    + key performance measurements 
    + leveraging the resource monitor tool 
    + key process metrics 
    thread count 
    handle count 
    + process memory statistcs 
    + process disk & network activity 
    
- time measurements 
time unit       fraction of a second            time slices per second 
seconds 
milliseconds(ms)        1/1000 of a second  1 thousands per second 
microseconds(__mu__ s) 1/1000000 
nanoseconds(ns)         1/1000000000  light travale 1 nano seconds per foot 
cpu clock tick      100 nanoseconds             10 million ticks per seconds 

milliseconds are used to accurately measure disk and network response time 
nanoseconds are used to accurately measure RAM accesstime 

- data measurements 
memory unit             description                 approximate bytes 
bit(b)                          0 or 1 
byte(B)                       8bits = 1 byte 
kilobyte(KB)                                            ~1 thousand bytes 
Megabyte(MB)                                        ~1 million bytes
Gigabyte(GB)                                          ~1 billion bytes 
Terabyte(TB)                                          ~1 trillion bytes 

- leveraging the resource monitor tool, it's built-in to system 
    + interactive overview of system performance 
    + viewed by cpu memory disk & network activity 
    + start via task manager, server manager or resmon.exe 
    + expand categories to quickly identify top activity 
    + manage processes & services (end, suspend, restart...)
    + window 2008 r2 and later provides significant new functionality similar to process explorer(handes, registry keys, modules, ...)
    
- resource monitor 
    + oveview will list all the processes 
    + disk usage 
    + memory usage 
    
- key process metrics 
    + process count, number of processes running to the system 
    + thread count, number of threads per process or per system 
    typical desktop have 1000 thread, server may have 2000 to 5000 
    + handle count, number of objects referenced by a process 
    file 
    directory 
    registry key 
    desktop 
    section 
    event 
    semaphore 
    mutant 
    ALPC port 
    ...
    
    check if there is handle count leak 
    
- porcess memory statistics 
working set, application loaded into process working set. portion of memory per process can grow as additional demand. one of the key process memory metrics 

page faults, requested data is not working set 

hard faults, requests hard disk access for data 

commit, amount of virtual memory reserved 

shareable, virtual memory that can be shared 

private, process private bytes of memory 

the working set and private bytes indicate how much memory the process is using 


sign is memory leak is private bytes continue grow and not descrease 

- process disk and network activity, process i/o metrics 
read (bytes/second)
write(bytes/second)
total(bytes/second)
io opereations/seconds(IOPS)
response time or latency (milliseconds) 

in the network activity the gray out connection means the the connection is just gone away 
the disk queue lenght is greater than 1 which means the process process the i/o very hard 

deselect the process name from the filter to display all the process information in all tabs 


# monitor anything with graphs and alters 
- intro to perfmon (performance monitory)
    + standard for analyzing performnace issues 
    + built into window 
    + access to handreds of operating system objects 
    + run perfmon 
    
    + interactive and historical analysis, collect performance data in the background 
    + create and trigger performance alerts 
    + create system diagnostic and performnace reports 
    + compare and overly multiple performance graphics 
    
    + use cpustres 
- performance objects and counters 
    + hooks embedded throughout the window kernel 
    + mantained various registry keys 
    + tools that use performance counters 
    task manager 
    reso0urce monitor 
    perfmon 
    custom app using 
    performance APIs 
    
    + performance counters are grouped into performance objects 
    + there can be more than 1 instance of the performance objects(multiple disks)
    \object(instance)\counter 
    
    \logicaldisk(c:)\% disk write time 
    
    objects, logicDisk, memory, processor 
    counters, disk bytes/sec, avaliable mbytes
    what performance data to collect? 
    
    + recommended performance objects to collect 
    cache, network interface, 
    logicalDisk, paging file  
    memory, physicalDisk
    process, server work queue 
    process informance* system 
    server, tcpv4 
    + for each object, collect all counters for all instances 
    + product specific objects such as SQL or failover clusters 
    + to see all the performance counters: put all counters on disk 
    $ typeperf -q > counters.txt 
    
    + adding objects & counters 
    context menu, select add counters 
- manipulating graphs 
    + line graph 
    + histogram bar 
    + save image as 
    + save settings as 
    + highlight coutners 
    + scale selected counters 
    + tool tips hovering mouse cursor over graph 

    + use ctrl+h to hight a line the perfmon graph 
    
    non-paged and page pool 
- greating performance alters 
    + two step process 
    create performance alter with perfmon 
    create task scheduler job to perfrom action 
    
    + specifiy counter threshold with performance altert 
    \processorInformation (_total)\% processor time > 80 
    
    + specify task to run when trheshold is crossed 
    + task will specify what action to do 
    ...

# Collecting performance data over time 
- historical performance data 
    + intermittent performance issues 
    + depletion of resource over time 
    + collecting a baseline performance profile 
    + detailed analysis comparing multiple counters and graphs at a particular point in time 
    + collect performance data to provide as input for other analysis tool such as (PAL) 
    
    + tools collect performance data 
        * perfmon 
        pre-defined templates 
        manipually add counters 
        captured in binary log file (blg), csv, tsv, sql 
        cricular log 
        
        * logman, cli tool to script data collection sets 
        
    + review the performance data collection process 
    + sampling considerations 
    samping interaval 
    depends if known tansient or baseline condition 
    known condtions benefit from shorter interval 
    transient or baseline require longer samples 
    
    + log size 
    larger log files take longer process the data 
    use binary log file < 50 mb 
    
    + average minimum, maximum values 
    
- collecting performance data with perfmon 
    + data collector sets(DCS) control what data is being collected 
    specify performance objects counters and instances 
    sampling interval and maximum number of samples 
    format of performance log file (binary, csv, tsv, sql )
    specify location and maximum log file size 
    file name format 
    circular log, overwrite or append 
    
    + on the Data Collection Sets of perfmon 
    right click new Data Collection Set 
        => create manually set 
            => create data type select performance counters 
                => add counters 
                    => set where the log file will be saved 
                        => open properties for this data collector, set duration etc. 
                            => select start to start collection 
                            
    + window 2003/xp, perfWiz tool for window from microsoft website with the wizard 
    
- collecting performance data with logman 
    + logman is a command line tool, (powershell or command prompt)
    + userful for scripting with data collection sets 
    create 
    query 
    start 
    stop 
    update 
    delete 
    + logman syntax 
    $ logman create counter <DCS-name> [options] 
    
    DCS-name is the data collector set name 
    
    $ logman create counter Perf_log -c "Processor information(_Total)\%Processor Time" -max 50 -f bincirc -si 5 -o "c:\perflog" 
    $ logman start Perf_log 
    
    + logman without parameter will display the current jobs 
    $ logman query <dcs-name>
    to display more information 
    
    + stop collection by 
    $ logman stop 
    
    + in action 
    create a logman data collector set file counters.txt contain the collect options 
    "\LogicalDisk(*)\*"
    "\TCPv6\*"
    ...
    
    use the file to create a DCS 
    $ logman create counter my-collector -o "c:\tools" -max 50 -f bincirc -cf "c:\tools=counters.txt" -si 3 
    
    check the DCS information 
    $ logman query my-collector 
    
    start the DCS 
    $ logman start my-collector
    
    stop the DCS 
    $ logman stop my-collector
    
- loading performance data into perfmon 
    + loading a performance log file 
    + loading multiple log files 
    + specifying a time range 
    + adding objects & counters 
    + zoom to focus time period, select time range and select zoom to in the context menu 
- manipulating performnace data with relog 
    + identy number of samples time range counters 
    + convert performance data format and sampling rate 
    + filter performance objects and counters 
    + limit time range of samples 
    
    + relog syntax 
    relog <filename> [options]
    
    $ relog logfile.blg -q 
    for query options display the collection options 
    
    $ relog logfile.csv -c "counter-name" -o logfile.blg
    extract parts of the data from a new file 
    $ relog logfile.blg -cf "counters.txt" -f bin -o filtered.blg 
    
- compare log data in perfmon 
type perfmon /sys /comp , and press ENTER. Performance Monitor will open in stand-alone mode with comparison enabled.

https://technet.microsoft.com/en-us/library/cc748917(v=ws.11).aspx

- view report 
Another way to view the most recent report for a Data Collector Set is to expand Data Collector Sets , expand User Defined or System , click the name of the Data Collector Set in the navigation pane, and click the View Latest Report icon in the toolbar.

You can also create a new report for a data collector set by typing perfmon /report "Data_Collector_Set_name" at a command prompt. Typing perfmon /report without any other parameters will generate the System Diagnostics report.

https://technet.microsoft.com/en-us/library/cc766130(v=ws.11).aspx

- enable logging for performance log users group members 
https://technet.microsoft.com/en-us/library/cc722184(v=ws.11).aspx

# Automating the analysis of performance logs 
- automating performance analysis 
- performance analysis of logs (PAL) tools 
- generating PAL reports 
- interpreting PAL reports 
- automating performance analysis 
performance log files provide input to analysis engine 
predefined counter threshold(profiles) trigger alerts 
automatically generate performance charts and graphs 
color coded alerts distinguish between normal, warning and critical 

- performance analysis 
big time saver for analyzing perfom data 
http://pal.codeplex.com

current version 2.7.4

PAL use 2.0 for later uses powershell and .net framework 3.5 sp1 

earlier version of PAL uses a VBS 

- PAL features 
automates the analysis of windows performance counters 
performance threshold profiles are used to tailor the analysis 
user friendly wizard prompts for the required information 
graphical enditor for cusomizing performance threshold profiles 
generates html report for viewing with your favorite browser 
chronological list of color-code alterts with hyperlinks to graphs 

- generating PAL reports 
    + user friendly PAL wizard collects required information including 
    location of performance log files (blg or csv formats)
    + threshold files(profiles that specify performance cunter thresholds)
    + question variables (computer specific info such as OS version RAM...)
    + analysis interval(auto, very 10 minutes, every hour, every day)...
    + location for the result html report and /or xmol document 
    + queu and execute the resulting powershell script to process the counter and generate the alerts and graphs 
    
    + the queue tab is the powershell will be executed 
    
    + power executing powershell at the background 
- interpreting PAL reports 
    + PAL report is diided into sections 
    tool parameters 
    alerts by chronological order 
    graphs by performance counter
    counter description & references 
    performance counter graph 
    statics and alerts 
    
    + default browser is used to view the PAL reports 
    + hyperlinks used between alerts and corresponding grahs 
    + chronological order 
    
- pal graphs, provide background of each counter 
description 

    
    
# Recording and analyzing low level system metrics 
- low level system metrics 
    + low level system metrics used by MS developer to 
    + WPT 
    + WPR 
    + WPA 
    
    + low level system metrics 
    priviledged (kernel) time 
    interrupt time 
    deferred procedure calls(DPCs)
    memory pool allocation 
    i/o request packets 
    
    + measureing low level system metrics 
    priviledged time, interrupts and DPC activity 
    percentage of processor time 
    operating system or device drivers 
    
    + memory pool usage 
    allocating / deallocating memory 
    memory leaks 
    
    + i/o request packets (IRPs)
    count 
    duration 
    drivers 
    
- windows performance toolkit WPT 
XPerf still avaliable for backward compatibility, powerful tool but not user friendly 

    + window performance recorder 
    collect event trace data from operation system 
- windows performance recorder  WPR 
- windows performance analyzer WPA 
- graphing low level system metrics 


# Best practices for windows performance monitoring 



# Shutdown event tracker 
- record a reason why they restart or shut down the computer 
https://technet.microsoft.com/en-us/library/cc770960(v=ws.11).aspx




            