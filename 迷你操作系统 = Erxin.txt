迷你操作系统 = Erxin

:操作系统个主题
>主要部分
进程描述与控制, 调度, 存储器管理, 并发性, 输入/输出管理, 文件管理, 安全性, 网络, 并发性
>参考链接
WilliamStallings.com/OS/OS6e.html
usenet新闻组, comp.os.research

:计算机系统概述
>组成
processor, main memory, io, system bus
>处理器
	- processor具有两种寄存器
	存储器地址寄存器, Memory Address Register，MAR
	存储器缓冲寄存器（Memory Buffer Register，
	MBR
	- I/O Address Register，简称I/O AR或I/O地址寄存器
	- 用户可见寄存器
	数据寄存器（data register）
	地址寄存器（address register）
		* 变址寄存器（index register）
		* 段指针（segment pointer）
		* 栈指针（stack pointer）：
	- 控制和状态寄存器
	程序计数器（Program Counter，PC）：包含将取指令的地址。
	指令寄存器（Instruction Register，IR）：包含最近取的指令内容。
	程序状态字（Program Status Word, PSW）
	条件码（condition code，也称为标记）是处理器硬件为操作结果设置的位
>指令的执行
处理器-存储器：数据可以从处理器传送到存储器，或者从存储器传送到处理器。
处理器-I/O：通过处理器和I/O模块间的数据传送，数据可以输出到外部设备，或者从外部设备输入数据。
数据处理：处理器可以执行很多与数据相关的算术操作或逻辑操作。
控制：某些指令可以改变执行顺序
>I/O函数
>中断
程序中断, 时钟中断, I/O中断, 硬件故障中断
>中断和指令周期, 中断处理要注意现场保持与现场恢复
有无中断优先级, 在低优先级处理的程序中嵌入高优先级中断
中断服务程序, Interrupt Service Routine，ISR
>存储器特点
存取时间越快，每一个“位”的价格越高。
容量越大，每一个“位”的价格越低。
容量越大，存取速度越慢。
>局部性原理, principle of locality
高速缓存的作用, 用作缓冲, 最近最少使用（Least-Recently-Used，LRU）
>IO技术
可编程I/O、控制, 状态, 传送三个步骤, 占用处理器时间较多
中断驱动I/O、处理器还是要参与存储过程
直接内存存取（DMA）, 只需要发送和接受, 指定地址, 总的来说是最有效的




	