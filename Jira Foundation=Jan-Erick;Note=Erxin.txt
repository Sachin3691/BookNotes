Jira Foundation=Jan-Erick;Note=Erxin

# Zephyr for JIRA - Test Management add-on to your local system
- license 
AAABBw0ODAoPeNptUMtOwzAQvPsrLHF2FAdCSyQfqjSHVnmgJnBAXIzZNkaNE62divD1JE0FCPWwl
52dmZ25KXtDt9JQvqTBbcTvojCkcVnRwOchUW3juRrevS/o6gG9D/CkcvoEwmEPZA1Woe6cbo14O
V/QfYt0u9mtKKMVWEczaeQBGjDuB3qNaHKSx15OPJL3zRtgsX+ygFYwTmKEM7KWDsT0BfM54w/kl
zObH7UCY+F5pE27gGRSGwdGGgXJZ6dx+KMQML4kBR6k0XbWaLTC0b5McjEOS0MeLu4XPkln2esKV
/oYkwF2qO2lkwu/GjrIZQMiLrIs2cWbVUoee1S1tPA/2TfxsX+7MCwCFFAJuhDA7yTGmGzCMn9Mq
LTNx3h0AhQPJ8J1+V80krfKgQqlUX4m4FRAYA==X02dh

- write a custom Zephry ZIP 
http://developer.yourzephyr.com/zbot/index.php
- ZAPI for jira 
http://developer.yourzephyr.com/zapi/index.php#getting
- Zephry for jira plugin doc
https://zephyrdocs.atlassian.net/wiki/display/ZTD/View+and+Modify+Tests
- Zephry server doc
http://support.yourzephyr.com/product_help/4.6/Zephyr_4.6_Help.htm
- jira agile license
AAABDA0ODAoPeNptkD9vgzAQxXd/Cktd2oEKExEFJA+IeCDiTwRppy6ueyGWiEFnQM23L4RUTasOt
9zv3Xt395C1hu6koSygrheugtBd0bg6UM9lPtmCVai7XreG75IyolGtG6CPFeAI+ESPLdK5/xZSM
cpmkLOS5MP5HbA4vlhAyx1GYoQr2coe+GzsuMxhAfmZ4T0OQGoEMKe26wCfU63AWBAf+spFfhDlv
kwqQZqFvE7mM/FIJrXpwUijQHx2Gi93OZ7DNr98YZJih9rCkllgLY22yxaZVjgdcK+XqtfjTVuJn
E/lpD7zN2t3Tb6X/Df1Bg+XDnJ5Bh4XWSbKOIlSsh9QnaSFvw/5Auqog2gwLAIURhEURvRb36WbQ
2zIklnKE1P6+LsCFEeF9Xx2aiiFBRsWgiTi4RjQTxGTX02dl


- jira tcp default ports
8080, control 8005

- zephyr introduction for jira 
https://www.youtube.com/watch?v=Ca_t1pmeFYs


# introduction
- about this course
- module1, introduction
- module2, planning and installing 
- module3, configuring 

# introduction to jira 
- what is jira 
    + project and issue tracker 
    + create tool for agile team 
    + expendable 
    
- the anatomy of an issue 
    + base information fields 
    key, summary, timestamp, who the issue is assign to 
    + resolution and status
    + custom fields 
    
- jira concepts 
    + Issue
    + Component, is part of your project, such as 
    GUI, database, ...
    + Project, all issue must assign to project, each project have it's own dashboard 
    + Workflow, each project have is own workflow 


# Planning and installing 
- create issue from the top toolbar 
- resolve issue from the button of the issue detail page 
- efficient search 
- use profile | system| system information will contain the detail file and configuration for jira 


# Agenda 
- supported platforms 
- on-demand
    + easy to get started, no installation 
    + high avaliablility 
- inhouse installation 
    + different modes of installing 
        * archive installation, manual install 
        * installation wizard 
        * unattended installation 
        $ atlassian-jira.6.1.exe -q -varfile response.varfile 
        
- supported operating system for jira 6.0, jira based application 
    + java, oracle, jdk/jre 1.7 
    + microsoft windows/linux (centos os)/solaris 

- application servers and databases 
    + apache 7.0.29
    + tomcat 6.0.32
    + oracle 11G(with oracle 11.2x drivers)
    + mysql 5.x 
    + PostgreSQL 9.0, 8.4 and 8.3 
    + Microsoft SQL Server 2008, 2008 R2, 2005 
    
- web browsers 
    + chrome, works best
    + microsoft IE > 8 
    + safari 
    + mozilla firefox 
    + mobile browsers 
    
- browsers topology 
    + single or multiple server 
    only support one active instance for a database 
    
    + placement of server
    + spira test, automatically create issue in jira 
    
- hardware recommendations  
    + recent multicore server with 2gb ram and a fast hard-drive 
    + add more ram and cores to handle concurrent requests 
    + large scale 
    
- preparing sql server 
    + walkthrough, installation 
    + setting up the database 
        * create database 
        * setup database user, create sql server authentication user 
        * set the user's default database 
        * set role of the user to dbreader, dbwrite, dbadmin 
        * download the installation file of jira 
    + installing jira 
        * and custom the jira installation 
        
    + configuring for first time use 
    
- configuring for jira 
    + set languages 
    + use own database 
    sql server, postgresSQL, mysql
    
    set localhost to as the dataserver, open port 1433 port 
    
    add database user 
    
    + set company title and base url 
    
    + provide the server id to generate the license key 
    + setup administrator account 

- migrating from other issue trackers 
    + built-in importers
    bugzilla, mantis, provotal tracker, trac and redmine 

    + support json import 
    
    + import from other jira server 
    + the CSV importer 
    
    + demo, Gear icon of toolbar| System in jira 


# Configure 
- jira fundamentals 
    + create your first project 
    + the jira structure
    + screens 
    + fields 
    + workflows 

- demo create jira project
    + click Project|Create Project from the jira toolbar 
    + select project template 
        * simple issue tracking 
        * agile scrum 
        * agile kanban 
        * blank project 
    + give some key and prefix for the project 
    + go to the project page 
    + click administrator from the project toolbar 
    + add versions
    + add components 
- jira structure 
    + field -> screen -> screen scheme -> issue type screen scheme 
        |       |
        |       +-> workflow -> workflow scheme 
        |       
        |
        +-> field configuration is associated with project 
        |
        +-> field configuration scheme 

- screens 
    + click gear icon | select issues | click screens on the left side 

    to add field such as assignee, environment, priority
    
    + click the Field Tab to edit and change the field name 
    
    + click add screen scheme
        * give screen scheme name 
        * and description
        
    + click Associate an issue operation with a screen on the configure screen scheme page 

    + go to the issue type screen 
        * select the screen scheme for the 
        * click the screens to change the default screen, on the screen page click Actions button to change default association 
        
- Fields, On Issues  
    + Field Custom Fields 
    + Go to the Issus administration 
        * click add custom field 
        * choose data type of the field 
        * install jira add-ons could add more types 
        * names the fields 
        * choose issue types relative 
        * set the field scope for global or single project 
        * click update to update the custom field 
        * select configure of the field will configure the scheme 
        * set the field as required to let user must input the information when create a issue 
        * add field configuration scheme 
        * then in a project administrator page could select Field|Actions to select different field schemes 
        
- workflows, link to project using a scheme 
    + the system workflow 
    start with open -> start progress 
                        |
                        V
                    -> resolved----------+
                                         |
                                         V
                        reopen          close
    
    + steps and transitions 
        * step can only be in one step at a time 
        * correspond to a status 
    + transitions 
        * move between steps 
        * one way link 
    + specification of transition 
        * screen 
        * condition, who can make 
        * validators 
        * post functions 
    
- workflows at the Admin|Issues|Workflows
    + add workflow button to add new workflow 
    + select any workflow and click copy to copy any workflow 
    + workflow editor will open 
    + add status in the editor 
    + add transitions in the editor 
    select a transition from the graphic could set condition 
        * view condition 
        * in the same view could check the validators 
        * post functions
        click a add trigger such as send json object other system 
        update issue fields 
        create perforce job function 
        ...
        
    + after setup a new workflow need to add a workflow scheme to make it works with project 
    + switch to Worflow Schemes administrator panel, 
        * Add workflow schemes 
        * Add workflow 
        * select issue type of the workflow schemes 
        
    + switch to the project administrator panel and select workflow schemes 
        * select the schemes 
        * wait for the migration if you have lots of issues 
        * click acknowledge button 
        

# Reporting
- introduction
    + searching
    + understanding JQL 
    + creating filters 
    + creating reports 
    + setting up a dashboard 
    
- basic searching 
    + quick search 
        * if you know jira key 
    + basic search, on the top right corner 
        * in project scope could direct input issue number 
        * free type search 
        * use j, k to navigate from the result list 
        * on the right corner could switch detail view and list view 
        with list view you could select project, type, status and assignee to do basic search and filter 
        * prefix of the basic search, smart query 
        r:userName 
        all the keywords are case sensitive 
        dut:today 
        
        * keywords for smart querying 
        term                    example
        mysql                   my open bugs
        r:                      r:me or r:otherReporter
        <project name or key>   acme road Runner Tracker or art 
        overdue                 overdue
        created:updated:due:    created:yesterday or dated:-1w
        <priority>              blocker major trivial
        <resolution>            fixed duplicate cannot reproduce 
        <issue type>            bug task bus tasks 
        c:                      c:gpstracker   , for components 
        v:                      v:1.0          , effective version 
        ff:                     ff:1.0         , for fixed version 
        *                       v:1.5*         , version could work with asterisk 
        
- advanced search using JQL, the jira query language (JQL)
    + syntax 
    project="project name"
    project="project name" order by keyword   //order by could only be used at the end of a query 
    issuetype="Bug" 
    and or with logic operators
    
    (project="project name") and (issuetype="Bug")  //will separate the result to two groups 
    
    contain text ~ "value" field ~ "value"
    
    + from the search result page select advanced to use JQL 
    + operators and keywords 
    Operators               Keywords 
    =                         AND, 
    !=                        OR, 
    >                         NOT,
    >=                        EMPTY, 
    <                         NULL
    <=
    in
    not in
    contains: ~
    not contain: !~
    is 
    is not 
    WAS       used to filter previous values 
    WAS IN 
    WAS NOT IN 
    WAS NOT 
    CHANGED  can use optional predicates like after, before or by 
    
    use prefix with was open, was changed, 
    
- creating filters 
    + create filter with basic filter or jql 
    + new filter 
    due<1w order by due desc 
    + click save as to save the query as a filter 
    + click find filter|Favortie to manage the filter 
    + click the gear icon and selec column for the filter results , click issue navigator to go back 
    + popular to search the most common used filter 
    + use share button to share filter by email
    + click detail of the filter beside the Save as button, edit the permission could set the filter access permission 
    + filter could also be colon 
    
- reports 
    + prebuild reports 
    + plugin API 
    + export issue-filters to microsoft excel 
    + sql queries, use sql query directly to select result 
    + marketplace 
    
- reports in jira 
    + workload pie chart report 
    + user workload report 
    + version workload report 
    + single level group by report 
    + created vs resolved issues report 
    + resolution time report 
    + pie chart report 
    + average age report 
    + recently created issues report 
    + time since issues report 
    
- create a report 
    + select a report types
    + select a filter 
    + set period dates 
    
- setup dashboard to add reports 
    + dashboard from the jira toolbar 
    + add empty dashboard
    + add new gadget
    + select layout to configure prebuild layout 
    + add gadget for report type
    + set filter 
    + add issue type 
    + set refresh interval 
    + the dashboard could also be shared by click Tools|Share Dashboard 

    
# administrating and extending 
- introduction
- users, groups and roles 
    + understanding jira security 
    group, user, project role, issue role, global permission, project permission, issue level security, permission scheme, security scheme, project 
    
    + create group for user and testers 
    Administration|User management 
    
    send email to invide user 
    create user 
    
    + add group 
        * add memebers 
        * this also could be done in the account information page 
    
    + add project role for project created
    + each user have is own statistic information such as 
        * login count 
        * last login 
        * last failed login 
        * current failed login count 
        * total failed login count 
    + from the Roles page to assign role to groups 
        * the role will be assigned when ever a new user created and assign to a group 
        
    + you could set your users to different levels 
    
- integrating with user directions 
    + microsoft active directory 
    + openLDAP 
    + several directories, the order of directory will be used to search the users 
    + user directory screen 
    User Management | User Directories 

    + use base dn tool dsquery to query active directory information 
    https://technet.microsoft.com/en-us/library/cc725702.aspx
    
- setup email, jira use smtp server 
    + add smtp server, in window 2008
    + add role, add feature, smtp server 
    + iis 60 manager
    + select the smtp server property 
    + click access tab 
    + add single computer to access the server (127.0.0.1)
    
- administration panel 
    + select outgoing mail 
    + configure SMTP mail server 
        * name 
        * address 
        * prefix prepended to all outgoing email 
        
    + hostname 
    + test connection 
    + switch to Notification Schemes from the administration panel 
        * select notification for the default notification to configure 
        
    
- increasing memory, jira is running under tomcat service 
    + diagnose 
        * go to system administration and select system info, will display all the statistic information 
        * go to the service manager 
        * open and check Atlassion JIRA service name 
        * go to the directory where install jira in commnad line 
        * use tomcate7w.exe //ES//serviceName, enter and go to the java tab to adjust the max memory 
    
- server administration 
    + database integrity checker, is a jira tool 
    global system configuration integrity checker button 

    the check should pass, if any failed should be fixed quickly 
    
    + backup and restore 
        * xml back cann't be sure it is consistent 
        * system administration page have the XML backup page 
        
    + tips for optimizing performance 
        * local files
        * upgrade java 
        * consider the usage 
        * seperate jira to small isolate elements and make them communicate each other 
        
- extending jira
    + integrating with a source control provider 
    + can't work with TFS or source save
    + use fish eyes for most source control system 
    + using webhooks to integrate other systems 
    Advance page of system administration page 
        * add new one 
        * add url to the server 
        * select jql 
        * use json objects 
        
    + development with SDK is ready for download 
    + add-ons, click add on the management add-on 
        * greenhopper, is a agile project management add-on 
        * get free trial 
        * login with atlassion ID








    







